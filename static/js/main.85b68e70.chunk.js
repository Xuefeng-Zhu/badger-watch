(this["webpackJsonpyearn-hub"]=this["webpackJsonpyearn-hub"]||[]).push([[0],{158:function(e,t,n){"use strict";n.r(t),t.default=[{name:"Transfer",inputs:[{name:"sender",type:"address",indexed:!0},{name:"receiver",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Approval",inputs:[{name:"owner",type:"address",indexed:!0},{name:"spender",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"StrategyAdded",inputs:[{name:"strategy",type:"address",indexed:!0},{name:"debtRatio",type:"uint256",indexed:!1},{name:"minDebtPerHarvest",type:"uint256",indexed:!1},{name:"maxDebtPerHarvest",type:"uint256",indexed:!1},{name:"performanceFee",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"StrategyReported",inputs:[{name:"strategy",type:"address",indexed:!0},{name:"gain",type:"uint256",indexed:!1},{name:"loss",type:"uint256",indexed:!1},{name:"debtPaid",type:"uint256",indexed:!1},{name:"totalGain",type:"uint256",indexed:!1},{name:"totalLoss",type:"uint256",indexed:!1},{name:"totalDebt",type:"uint256",indexed:!1},{name:"debtAdded",type:"uint256",indexed:!1},{name:"debtRatio",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateGovernance",inputs:[{name:"governance",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"NewPendingGovernance",inputs:[{name:"governance",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateManagement",inputs:[{name:"management",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateGuestList",inputs:[{name:"guestList",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateRewards",inputs:[{name:"rewards",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateDepositLimit",inputs:[{name:"depositLimit",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateWithdrawalFee",inputs:[{name:"withdrawalFee",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdatePerformanceFee",inputs:[{name:"performanceFee",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateManagementFee",inputs:[{name:"managementFee",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateGuardian",inputs:[{name:"guardian",type:"address",indexed:!1}],anonymous:!1,type:"event"},{name:"EmergencyShutdown",inputs:[{name:"active",type:"bool",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateWithdrawalQueue",inputs:[{name:"queue",type:"address[20]",indexed:!1}],anonymous:!1,type:"event"},{name:"StrategyUpdateDebtRatio",inputs:[{name:"strategy",type:"address",indexed:!0},{name:"debtRatio",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"StrategyUpdateMinDebtPerHarvest",inputs:[{name:"strategy",type:"address",indexed:!0},{name:"minDebtPerHarvest",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"StrategyUpdateMaxDebtPerHarvest",inputs:[{name:"strategy",type:"address",indexed:!0},{name:"maxDebtPerHarvest",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"StrategyUpdatePerformanceFee",inputs:[{name:"strategy",type:"address",indexed:!0},{name:"performanceFee",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"StrategyMigrated",inputs:[{name:"oldVersion",type:"address",indexed:!0},{name:"newVersion",type:"address",indexed:!0}],anonymous:!1,type:"event"},{name:"StrategyRevoked",inputs:[{name:"strategy",type:"address",indexed:!0}],anonymous:!1,type:"event"},{name:"StrategyRemovedFromQueue",inputs:[{name:"strategy",type:"address",indexed:!0}],anonymous:!1,type:"event"},{name:"StrategyAddedToQueue",inputs:[{name:"strategy",type:"address",indexed:!0}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"token",type:"address"},{name:"governance",type:"address"},{name:"rewards",type:"address"},{name:"nameOverride",type:"string"},{name:"symbolOverride",type:"string"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"token",type:"address"},{name:"governance",type:"address"},{name:"rewards",type:"address"},{name:"nameOverride",type:"string"},{name:"symbolOverride",type:"string"},{name:"guardian",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"token",type:"address"},{name:"governance",type:"address"},{name:"rewards",type:"address"},{name:"nameOverride",type:"string"},{name:"symbolOverride",type:"string"},{name:"guardian",type:"address"},{name:"management",type:"address"}],outputs:[]},{stateMutability:"pure",type:"function",name:"apiVersion",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"nonpayable",type:"function",name:"setName",inputs:[{name:"name",type:"string"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setSymbol",inputs:[{name:"symbol",type:"string"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setGovernance",inputs:[{name:"governance",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"acceptGovernance",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setManagement",inputs:[{name:"management",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setGuestList",inputs:[{name:"guestList",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setRewards",inputs:[{name:"rewards",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setLockedProfitDegradation",inputs:[{name:"degradation",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setDepositLimit",inputs:[{name:"limit",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setWithdrawalFee",inputs:[{name:"fee",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setPerformanceFee",inputs:[{name:"fee",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setManagementFee",inputs:[{name:"fee",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setGuardian",inputs:[{name:"guardian",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"approveContractAccess",inputs:[{name:"account",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"revokeContractAccess",inputs:[{name:"account",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"pause",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"unpause",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setEmergencyShutdown",inputs:[{name:"active",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"setWithdrawalQueue",inputs:[{name:"queue",type:"address[20]"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"transfer",inputs:[{name:"receiver",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"transferFrom",inputs:[{name:"sender",type:"address"},{name:"receiver",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"approve",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"increaseAllowance",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"decreaseAllowance",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"permit",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"amount",type:"uint256"},{name:"expiry",type:"uint256"},{name:"signature",type:"bytes"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"totalAssets",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_amount",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_amount",type:"uint256"},{name:"recipient",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"maxAvailableShares",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"maxShares",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"maxShares",type:"uint256"},{name:"recipient",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"maxShares",type:"uint256"},{name:"recipient",type:"address"},{name:"maxLoss",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"pricePerShare",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"pricePerFullShare",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"addStrategy",inputs:[{name:"strategy",type:"address"},{name:"debtRatio",type:"uint256"},{name:"minDebtPerHarvest",type:"uint256"},{name:"maxDebtPerHarvest",type:"uint256"},{name:"performanceFee",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"updateStrategyDebtRatio",inputs:[{name:"strategy",type:"address"},{name:"debtRatio",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"updateStrategyMinDebtPerHarvest",inputs:[{name:"strategy",type:"address"},{name:"minDebtPerHarvest",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"updateStrategyMaxDebtPerHarvest",inputs:[{name:"strategy",type:"address"},{name:"maxDebtPerHarvest",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"updateStrategyPerformanceFee",inputs:[{name:"strategy",type:"address"},{name:"performanceFee",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"migrateStrategy",inputs:[{name:"oldVersion",type:"address"},{name:"newVersion",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"revokeStrategy",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"revokeStrategy",inputs:[{name:"strategy",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"addStrategyToQueue",inputs:[{name:"strategy",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"removeStrategyFromQueue",inputs:[{name:"strategy",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"debtOutstanding",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"debtOutstanding",inputs:[{name:"strategy",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"creditAvailable",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"creditAvailable",inputs:[{name:"strategy",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"availableDepositLimit",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"expectedReturn",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"expectedReturn",inputs:[{name:"strategy",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"report",inputs:[{name:"gain",type:"uint256"},{name:"loss",type:"uint256"},{name:"_debtPayment",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"sweep",inputs:[{name:"token",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"sweep",inputs:[{name:"token",type:"address"},{name:"amount",type:"uint256"}],outputs:[]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"allowance",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"governance",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"management",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"guardian",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"pendingGovernance",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"guestList",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"blockLock",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"approved",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"paused",inputs:[],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"strategies",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"performanceFee",type:"uint256"},{name:"activation",type:"uint256"},{name:"debtRatio",type:"uint256"},{name:"minDebtPerHarvest",type:"uint256"},{name:"maxDebtPerHarvest",type:"uint256"},{name:"lastReport",type:"uint256"},{name:"totalDebt",type:"uint256"},{name:"totalGain",type:"uint256"},{name:"totalLoss",type:"uint256"}]},{stateMutability:"view",type:"function",name:"withdrawalQueue",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"emergencyShutdown",inputs:[],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"depositLimit",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"debtRatio",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalDebt",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"lastReport",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"activation",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"lockedProfit",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"lockedProfitDegradation",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"rewards",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"managementFee",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"performanceFee",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"withdrawalFee",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"nonces",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"DOMAIN_SEPARATOR",inputs:[],outputs:[{name:"",type:"bytes32"}]}]},179:function(e,t,n){"use strict";n.r(t);t.default={137:{BadgerRegistry:"0x74f0ef73242c32375dda80e8c45af1d463916d1a"}}},186:function(e){e.exports=JSON.parse('{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"apiVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"creditAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"debtOutstanding","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"expectedReturn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gain","type":"uint256"},{"internalType":"uint256","name":"_loss","type":"uint256"},{"internalType":"uint256","name":"_debtPayment","type":"uint256"}],"name":"report","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_strategy","type":"address"}],"name":"strategies","outputs":[{"components":[{"internalType":"uint256","name":"performanceFee","type":"uint256"},{"internalType":"uint256","name":"activation","type":"uint256"},{"internalType":"uint256","name":"debtRatio","type":"uint256"},{"internalType":"uint256","name":"rateLimit","type":"uint256"},{"internalType":"uint256","name":"lastReport","type":"uint256"},{"internalType":"uint256","name":"totalDebt","type":"uint256"},{"internalType":"uint256","name":"totalGain","type":"uint256"},{"internalType":"uint256","name":"totalLoss","type":"uint256"}],"internalType":"struct StrategyParams","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]}')},187:function(e){e.exports=JSON.parse('{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"apiVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"gas":2978,"inputs":[],"name":"rewards","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"creditAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"debtOutstanding","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"expectedReturn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"guardian","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"management","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxAvailableShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pricePerShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gain","type":"uint256"},{"internalType":"uint256","name":"_loss","type":"uint256"},{"internalType":"uint256","name":"_debtPayment","type":"uint256"}],"name":"report","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_strategy","type":"address"}],"name":"strategies","outputs":[{"components":[{"internalType":"uint256","name":"performanceFee","type":"uint256"},{"internalType":"uint256","name":"activation","type":"uint256"},{"internalType":"uint256","name":"debtRatio","type":"uint256"},{"internalType":"uint256","name":"minDebtPerHarvest","type":"uint256"},{"internalType":"uint256","name":"maxDebtPerHarvest","type":"uint256"},{"internalType":"uint256","name":"lastReport","type":"uint256"},{"internalType":"uint256","name":"totalDebt","type":"uint256"},{"internalType":"uint256","name":"totalGain","type":"uint256"},{"internalType":"uint256","name":"totalLoss","type":"uint256"}],"internalType":"struct StrategyParams","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"debtRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastReport","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"allSourcePaths":{"4":"/Users/dougmolina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol","8":"contracts/BaseStrategy.sol"},"ast":{"absolutePath":"contracts/BaseStrategy.sol","exportedSymbols":{"BaseStrategy":[1190],"BaseStrategyInitializable":[1283],"StrategyAPI":[250],"StrategyParams":[24],"VaultAPI":[178]},"id":1284,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.6",".0","<","0.7",".0"],"nodeType":"PragmaDirective","src":"36:31:8"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"68:33:8"},{"absolutePath":"/Users/dougmolina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3,"nodeType":"ImportDirective","scope":1284,"sourceUnit":8204,"src":"103:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/dougmolina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","id":4,"nodeType":"ImportDirective","scope":1284,"sourceUnit":8417,"src":"160:59:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Users/dougmolina/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol","file":"@openzeppelin/contracts/math/SafeMath.sol","id":5,"nodeType":"ImportDirective","scope":1284,"sourceUnit":8126,"src":"220:51:8","symbolAliases":[],"unitAlias":""},{"canonicalName":"StrategyParams","id":24,"members":[{"constant":false,"id":7,"mutability":"mutable","name":"performanceFee","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"301:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"301:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"activation","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"329:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":11,"mutability":"mutable","name":"debtRatio","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"353:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10,"name":"uint256","nodeType":"ElementaryTypeName","src":"353:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":13,"mutability":"mutable","name":"minDebtPerHarvest","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"376:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":15,"mutability":"mutable","name":"maxDebtPerHarvest","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"407:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"lastReport","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"438:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"totalDebt","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"462:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"totalGain","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"485:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"485:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"totalLoss","nodeType":"VariableDeclaration","overrides":null,"scope":24,"src":"508:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"StrategyParams","nodeType":"StructDefinition","scope":1284,"src":"273:255:8","visibility":"public"},{"abstract":false,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":25,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":8203,"src":"552:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"id":26,"nodeType":"InheritanceSpecifier","src":"552:6:8"}],"contractDependencies":[8203],"contractKind":"interface","documentation":null,"fullyImplemented":false,"id":178,"linearizedBaseContracts":[178,8203],"name":"VaultAPI","nodeType":"ContractDefinition","nodes":[{"body":null,"documentation":null,"functionSelector":"06fdde03","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"578:2:8"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":31,"src":"604:15:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"603:17:8"},"scope":178,"src":"565:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"95d89b41","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"642:2:8"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":36,"src":"668:15:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":33,"name":"string","nodeType":"ElementaryTypeName","src":"668:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"667:17:8"},"scope":178,"src":"627:58:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"313ce567","id":41,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"708:2:8"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":41,"src":"734:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"733:9:8"},"scope":178,"src":"691:52:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"25829410","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"apiVersion","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"768:2:8"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":46,"src":"794:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":43,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"793:15:8"},"scope":178,"src":"749:60:8","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"9fd5a6cf","id":61,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":61,"src":"840:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"840:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":61,"src":"863:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":61,"src":"888:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"888:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"expiry","nodeType":"VariableDeclaration","overrides":null,"scope":61,"src":"912:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":53,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","overrides":null,"scope":61,"src":"936:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":55,"name":"bytes","nodeType":"ElementaryTypeName","src":"936:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"830:136:8"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":61,"src":"985:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":58,"name":"bool","nodeType":"ElementaryTypeName","src":"985:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"984:6:8"},"scope":178,"src":"815:176:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"b6b55f25","id":68,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":68,"src":"1103:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"1103:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1102:16:8"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":68,"src":"1137:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1136:9:8"},"scope":178,"src":"1086:60:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"6e553f65","id":77,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":77,"src":"1169:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"1169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":77,"src":"1185:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"1185:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1168:35:8"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77,"src":"1222:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"1222:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1221:9:8"},"scope":178,"src":"1152:79:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"2e1a7d4d","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"maxShares","nodeType":"VariableDeclaration","overrides":null,"scope":84,"src":"1344:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"1344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1343:19:8"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":84,"src":"1381:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1381:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1380:9:8"},"scope":178,"src":"1326:64:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"00f714ce","id":93,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"maxShares","nodeType":"VariableDeclaration","overrides":null,"scope":93,"src":"1414:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":93,"src":"1433:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1413:38:8"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":93,"src":"1470:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"1470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1469:9:8"},"scope":178,"src":"1396:83:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"fc0c546a","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"token","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":94,"nodeType":"ParameterList","parameters":[],"src":"1499:2:8"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":98,"src":"1525:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1524:9:8"},"scope":178,"src":"1485:49:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"39ebf823","id":105,"implemented":false,"kind":"function","modifiers":[],"name":"strategies","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"_strategy","nodeType":"VariableDeclaration","overrides":null,"scope":105,"src":"1560:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1559:19:8"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":105,"src":"1602:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams"},"typeName":{"contractScope":null,"id":102,"name":"StrategyParams","nodeType":"UserDefinedTypeName","referencedDeclaration":24,"src":"1602:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_storage_ptr","typeString":"struct StrategyParams"}},"value":null,"visibility":"internal"}],"src":"1601:23:8"},"scope":178,"src":"1540:85:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"99530b06","id":110,"implemented":false,"kind":"function","modifiers":[],"name":"pricePerShare","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":106,"nodeType":"ParameterList","parameters":[],"src":"1653:2:8"},"returnParameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":110,"src":"1679:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1678:9:8"},"scope":178,"src":"1631:57:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"01e1d114","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"1714:2:8"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":115,"src":"1740:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1740:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1739:9:8"},"scope":178,"src":"1694:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"ecf70858","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"depositLimit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"1776:2:8"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":120,"src":"1802:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1801:9:8"},"scope":178,"src":"1755:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"75de2902","id":125,"implemented":false,"kind":"function","modifiers":[],"name":"maxAvailableShares","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"1844:2:8"},"returnParameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":125,"src":"1870:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1869:9:8"},"scope":178,"src":"1817:62:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"1885:217:8","text":" View how much the Vault would increase this Strategy\'s borrow limit,\\n based on its present performance (since its last report). Can be used to\\n determine expectedReturn in your Strategy."},"functionSelector":"112c1f9b","id":131,"implemented":false,"kind":"function","modifiers":[],"name":"creditAvailable","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"2131:2:8"},"returnParameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":131,"src":"2157:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2156:9:8"},"scope":178,"src":"2107:59:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"2172:215:8","text":" View how much the Vault would like to pull back from the Strategy,\\n based on its present performance (since its last report). Can be used to\\n determine expectedReturn in your Strategy."},"functionSelector":"bf3759b5","id":137,"implemented":false,"kind":"function","modifiers":[],"name":"debtOutstanding","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2416:2:8"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":137,"src":"2442:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2442:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2441:9:8"},"scope":178,"src":"2392:59:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2457:225:8","text":" View how much the Vault expect this Strategy to return at the current\\n block, based on its present performance (since its last report). Can be\\n used to determine expectedReturn in your Strategy."},"functionSelector":"d3406abd","id":143,"implemented":false,"kind":"function","modifiers":[],"name":"expectedReturn","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":139,"nodeType":"ParameterList","parameters":[],"src":"2710:2:8"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":143,"src":"2736:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2736:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2735:9:8"},"scope":178,"src":"2687:58:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"2751:282:8","text":" This is the main contact point where the Strategy interacts with the\\n Vault. It is critical that this call is handled as intended by the\\n Strategy. Therefore, this function will be called by BaseStrategy to\\n make sure the integration is correct."},"functionSelector":"a1d9bafc","id":155,"implemented":false,"kind":"function","modifiers":[],"name":"report","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"_gain","nodeType":"VariableDeclaration","overrides":null,"scope":155,"src":"3063:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"3063:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"_loss","nodeType":"VariableDeclaration","overrides":null,"scope":155,"src":"3086:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"_debtPayment","nodeType":"VariableDeclaration","overrides":null,"scope":155,"src":"3109:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"3109:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3053:82:8"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":155,"src":"3154:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3154:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3153:9:8"},"scope":178,"src":"3038:125:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"3169:583:8","text":" This function should only be used in the scenario where the Strategy is\\n being retired but no migration of the positions are possible, or in the\\n extreme scenario that the Strategy needs to be put into \\"Emergency Exit\\"\\n mode in order for it to exit as quickly as possible. The latter scenario\\n could be for any reason that is considered \\"critical\\" that the Strategy\\n exits its position as fast as possible, such as a sudden change in\\n market conditions leading to losses, or an imminent failure in an\\n external dependency."},"functionSelector":"a0e4af9a","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"revokeStrategy","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"3780:2:8"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"3791:0:8"},"scope":178,"src":"3757:35:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"3798:222:8","text":" View the governance address of the Vault to assert privileged functions\\n can only be called by governance. The Strategy serves the Vault, so it\\n is subject to governance defined by the Vault."},"functionSelector":"5aa6e675","id":165,"implemented":false,"kind":"function","modifiers":[],"name":"governance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"4044:2:8"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":165,"src":"4070:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"4070:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4069:9:8"},"scope":178,"src":"4025:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"4085:222:8","text":" View the management address of the Vault to assert privileged functions\\n can only be called by management. The Strategy serves the Vault, so it\\n is subject to management defined by the Vault."},"functionSelector":"88a8d602","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"management","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"4331:2:8"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":171,"src":"4357:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"4357:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4356:9:8"},"scope":178,"src":"4312:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4372:216:8","text":" View the guardian address of the Vault to assert privileged functions\\n can only be called by guardian. The Strategy serves the Vault, so it\\n is subject to guardian defined by the Vault."},"functionSelector":"452a9320","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"guardian","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"4610:2:8"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":177,"src":"4636:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"4636:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4635:9:8"},"scope":178,"src":"4593:52:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1284,"src":"530:4117:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"4649:60:8","text":" This interface is here for the keeper bot to use."},"fullyImplemented":false,"id":250,"linearizedBaseContracts":[250],"name":"StrategyAPI","nodeType":"ContractDefinition","nodes":[{"body":null,"documentation":null,"functionSelector":"06fdde03","id":184,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":180,"nodeType":"ParameterList","parameters":[],"src":"4751:2:8"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":184,"src":"4777:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":181,"name":"string","nodeType":"ElementaryTypeName","src":"4777:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"4776:15:8"},"scope":250,"src":"4738:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"fbfa77cf","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"4812:2:8"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":189,"src":"4838:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"4838:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4837:9:8"},"scope":250,"src":"4798:49:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"1f1fcd51","id":194,"implemented":false,"kind":"function","modifiers":[],"name":"want","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"4866:2:8"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":194,"src":"4892:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"4892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4891:9:8"},"scope":250,"src":"4853:48:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"25829410","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"apiVersion","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":195,"nodeType":"ParameterList","parameters":[],"src":"4926:2:8"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":199,"src":"4952:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":196,"name":"string","nodeType":"ElementaryTypeName","src":"4952:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"4951:15:8"},"scope":250,"src":"4907:60:8","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"aced1661","id":204,"implemented":false,"kind":"function","modifiers":[],"name":"keeper","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"4988:2:8"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":204,"src":"5014:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5013:9:8"},"scope":250,"src":"4973:50:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"22f3e2d4","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"isActive","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"5046:2:8"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":209,"src":"5072:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":206,"name":"bool","nodeType":"ElementaryTypeName","src":"5072:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5071:6:8"},"scope":250,"src":"5029:49:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"8e6350e2","id":214,"implemented":false,"kind":"function","modifiers":[],"name":"delegatedAssets","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"5108:2:8"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":214,"src":"5134:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5134:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5133:9:8"},"scope":250,"src":"5084:59:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"efbb5cb0","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"estimatedTotalAssets","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"5178:2:8"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":219,"src":"5204:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5203:9:8"},"scope":250,"src":"5149:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"650d1880","id":226,"implemented":false,"kind":"function","modifiers":[],"name":"tendTrigger","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"callCost","nodeType":"VariableDeclaration","overrides":null,"scope":226,"src":"5240:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5240:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5239:18:8"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":226,"src":"5281:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":223,"name":"bool","nodeType":"ElementaryTypeName","src":"5281:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5280:6:8"},"scope":250,"src":"5219:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"440368a3","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"tend","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"5306:2:8"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"5317:0:8"},"scope":250,"src":"5293:25:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"ed882c2b","id":236,"implemented":false,"kind":"function","modifiers":[],"name":"harvestTrigger","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"callCost","nodeType":"VariableDeclaration","overrides":null,"scope":236,"src":"5348:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"5348:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5347:18:8"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":236,"src":"5389:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":233,"name":"bool","nodeType":"ElementaryTypeName","src":"5389:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"5388:6:8"},"scope":250,"src":"5324:71:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"4641257d","id":239,"implemented":false,"kind":"function","modifiers":[],"name":"harvest","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"5417:2:8"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"5428:0:8"},"scope":250,"src":"5401:28:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":null,"id":249,"name":"Harvested","nodeType":"EventDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"indexed":false,"mutability":"mutable","name":"profit","nodeType":"VariableDeclaration","overrides":null,"scope":249,"src":"5451:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"5451:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":243,"indexed":false,"mutability":"mutable","name":"loss","nodeType":"VariableDeclaration","overrides":null,"scope":249,"src":"5467:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"5467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":245,"indexed":false,"mutability":"mutable","name":"debtPayment","nodeType":"VariableDeclaration","overrides":null,"scope":249,"src":"5481:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"5481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":247,"indexed":false,"mutability":"mutable","name":"debtOutstanding","nodeType":"VariableDeclaration","overrides":null,"scope":249,"src":"5502:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5502:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5450:76:8"},"src":"5435:92:8"}],"scope":1284,"src":"4710:819:8"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"5531:782:8","text":" @title Yearn Base Strategy\\n @author yearn.finance\\n @notice\\n  BaseStrategy implements all of the required functionality to interoperate\\n  closely with the Vault contract. This contract should be inherited and the\\n  abstract methods implemented to adapt the Strategy to the particular needs\\n  it has to create a return.\\n  Of special interest is the relationship between `harvest()` and\\n  `vault.report()\'. `harvest()` may be called simply because enough time has\\n  elapsed since the last report, and not because any funds need to be moved\\n  or positions adjusted. This is critical so that the Vault may maintain an\\n  accurate picture of the Strategy\'s performance. See  `vault.report()`,\\n  `harvest()`, and `harvestTrigger()` for further details."},"fullyImplemented":false,"id":1190,"linearizedBaseContracts":[1190],"name":"BaseStrategy","nodeType":"ContractDefinition","nodes":[{"id":254,"libraryName":{"contractScope":null,"id":252,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":8125,"src":"6357:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$8125","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"6351:27:8","typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"6370:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":257,"libraryName":{"contractScope":null,"id":255,"name":"SafeERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":8416,"src":"6389:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$8416","typeString":"library SafeERC20"}},"nodeType":"UsingForDirective","src":"6383:27:8","typeName":{"contractScope":null,"id":256,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":8203,"src":"6403:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"03ee438c","id":259,"mutability":"mutable","name":"metadataURI","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"6415:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":258,"name":"string","nodeType":"ElementaryTypeName","src":"6415:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6774:31:8","statements":[{"expression":{"argumentTypes":null,"hexValue":"302e332e32","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6791:7:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_75264cf9265f5791dd87d32e3b873e70a20c966039eaa3909baf298c8eadb746","typeString":"literal_string \\"0.3.2\\""},"value":"0.3.2"},"functionReturnParameters":264,"id":266,"nodeType":"Return","src":"6784:14:8"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"6447:264:8","text":" @notice\\n  Used to track which version of `StrategyAPI` this Strategy\\n  implements.\\n @dev The Strategy\'s version must match the Vault\'s `API_VERSION`.\\n @return A string which holds the current API version of this contract."},"functionSelector":"25829410","id":268,"implemented":true,"kind":"function","modifiers":[],"name":"apiVersion","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"6735:2:8"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":268,"src":"6759:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":262,"name":"string","nodeType":"ElementaryTypeName","src":"6759:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"6758:15:8"},"scope":1190,"src":"6716:89:8","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":null,"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"6811:289:8","text":" @notice This Strategy\'s name.\\n @dev\\n  You can use this field to manage the \\"version\\" of this Strategy, e.g.\\n  `StrategySomethingOrOtherV1`. However, \\"API Version\\" is managed by\\n  `apiVersion()` function above.\\n @return This Strategy\'s name."},"functionSelector":"06fdde03","id":274,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"7118:2:8"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":274,"src":"7152:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":271,"name":"string","nodeType":"ElementaryTypeName","src":"7152:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"7151:15:8"},"scope":1190,"src":"7105:62:8","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":282,"nodeType":"Block","src":"7986:25:8","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8003:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":279,"id":281,"nodeType":"Return","src":"7996:8:8"}]},"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"7173:741:8","text":" @notice\\n  The amount (priced in want) of the total assets managed by this strategy should not count\\n  towards Yearn\'s TVL calculations.\\n @dev\\n  You can override this field to set it to a non-zero value if some of the assets of this\\n  Strategy is somehow delegated inside another part of of Yearn\'s ecosystem e.g. another Vault.\\n  Note that this value must be strictly less than or equal to the amount provided by\\n  `estimatedTotalAssets()` below, as the TVL calc will be total assets minus delegated assets.\\n @return\\n  The amount of assets this strategy manages that should not be included in Yearn\'s Total Value\\n  Locked (TVL) calculation across it\'s ecosystem."},"functionSelector":"8e6350e2","id":283,"implemented":true,"kind":"function","modifiers":[],"name":"delegatedAssets","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":276,"nodeType":"ParameterList","parameters":[],"src":"7943:2:8"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":283,"src":"7977:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"7977:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7976:9:8"},"scope":1190,"src":"7919:92:8","stateMutability":"view","virtual":true,"visibility":"external"},{"constant":false,"functionSelector":"fbfa77cf","id":285,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"8017:21:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"},"typeName":{"contractScope":null,"id":284,"name":"VaultAPI","nodeType":"UserDefinedTypeName","referencedDeclaration":178,"src":"8017:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"1fe4a686","id":287,"mutability":"mutable","name":"strategist","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"8044:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"8044:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"9ec5a894","id":289,"mutability":"mutable","name":"rewards","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"8075:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"8075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"aced1661","id":291,"mutability":"mutable","name":"keeper","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"8103:21:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"8103:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"1f1fcd51","id":293,"mutability":"mutable","name":"want","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"8131:18:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"},"typeName":{"contractScope":null,"id":292,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":8203,"src":"8131:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"value":null,"visibility":"public"},{"anonymous":false,"documentation":null,"id":303,"name":"Harvested","nodeType":"EventDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"indexed":false,"mutability":"mutable","name":"profit","nodeType":"VariableDeclaration","overrides":null,"scope":303,"src":"8214:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"8214:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":297,"indexed":false,"mutability":"mutable","name":"loss","nodeType":"VariableDeclaration","overrides":null,"scope":303,"src":"8230:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"8230:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":299,"indexed":false,"mutability":"mutable","name":"debtPayment","nodeType":"VariableDeclaration","overrides":null,"scope":303,"src":"8244:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":301,"indexed":false,"mutability":"mutable","name":"debtOutstanding","nodeType":"VariableDeclaration","overrides":null,"scope":303,"src":"8265:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8213:76:8"},"src":"8198:92:8"},{"anonymous":false,"documentation":null,"id":307,"name":"UpdatedStrategist","nodeType":"EventDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"indexed":false,"mutability":"mutable","name":"newStrategist","nodeType":"VariableDeclaration","overrides":null,"scope":307,"src":"8320:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"8320:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8319:23:8"},"src":"8296:47:8"},{"anonymous":false,"documentation":null,"id":311,"name":"UpdatedKeeper","nodeType":"EventDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"indexed":false,"mutability":"mutable","name":"newKeeper","nodeType":"VariableDeclaration","overrides":null,"scope":311,"src":"8369:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"8369:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8368:19:8"},"src":"8349:39:8"},{"anonymous":false,"documentation":null,"id":315,"name":"UpdatedRewards","nodeType":"EventDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"indexed":false,"mutability":"mutable","name":"rewards","nodeType":"VariableDeclaration","overrides":null,"scope":315,"src":"8415:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"8415:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8414:17:8"},"src":"8394:38:8"},{"anonymous":false,"documentation":null,"id":319,"name":"UpdatedMinReportDelay","nodeType":"EventDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"indexed":false,"mutability":"mutable","name":"delay","nodeType":"VariableDeclaration","overrides":null,"scope":319,"src":"8466:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"8466:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8465:15:8"},"src":"8438:43:8"},{"anonymous":false,"documentation":null,"id":323,"name":"UpdatedMaxReportDelay","nodeType":"EventDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":false,"mutability":"mutable","name":"delay","nodeType":"VariableDeclaration","overrides":null,"scope":323,"src":"8515:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8515:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8514:15:8"},"src":"8487:43:8"},{"anonymous":false,"documentation":null,"id":327,"name":"UpdatedProfitFactor","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"indexed":false,"mutability":"mutable","name":"profitFactor","nodeType":"VariableDeclaration","overrides":null,"scope":327,"src":"8562:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"8562:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8561:22:8"},"src":"8536:48:8"},{"anonymous":false,"documentation":null,"id":331,"name":"UpdatedDebtThreshold","nodeType":"EventDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":false,"mutability":"mutable","name":"debtThreshold","nodeType":"VariableDeclaration","overrides":null,"scope":331,"src":"8617:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"8617:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8616:23:8"},"src":"8590:50:8"},{"anonymous":false,"documentation":null,"id":333,"name":"EmergencyExitEnabled","nodeType":"EventDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"8672:2:8"},"src":"8646:29:8"},{"anonymous":false,"documentation":null,"id":337,"name":"UpdatedMetadataURI","nodeType":"EventDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"indexed":false,"mutability":"mutable","name":"metadataURI","nodeType":"VariableDeclaration","overrides":null,"scope":337,"src":"8706:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":334,"name":"string","nodeType":"ElementaryTypeName","src":"8706:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"8705:20:8"},"src":"8681:45:8"},{"constant":false,"functionSelector":"95e80c50","id":340,"mutability":"mutable","name":"minReportDelay","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"8843:33:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"8843:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"30","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8875:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"28b7ccf7","id":343,"mutability":"mutable","name":"maxReportDelay","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"8994:37:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"8994:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"3836343030","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:5:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"86400"},"visibility":"public"},{"constant":false,"functionSelector":"8cdfe166","id":346,"mutability":"mutable","name":"profitFactor","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"9200:33:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"9200:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"313030","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:3:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":false,"functionSelector":"1d12f28b","id":349,"mutability":"mutable","name":"debtThreshold","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"9380:32:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"9380:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"hexValue":"30","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9411:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"5641ec03","id":351,"mutability":"mutable","name":"emergencyExit","nodeType":"VariableDeclaration","overrides":null,"scope":1190,"src":"9460:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":350,"name":"bool","nodeType":"ElementaryTypeName","src":"9460:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"public"},{"body":{"id":368,"nodeType":"Block","src":"9535:106:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":354,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9553:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9553:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":356,"name":"strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"9567:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9553:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":358,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9581:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9581:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":360,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"9595:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9595:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9581:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9553:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"21617574686f72697a6564","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9609:13:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6","typeString":"literal_string \\"!authorized\\""},"value":"!authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6","typeString":"literal_string \\"!authorized\\""}],"id":353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9545:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9545:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"9545:78:8"},{"id":367,"nodeType":"PlaceholderStatement","src":"9633:1:8"}]},"documentation":null,"id":369,"name":"onlyAuthorized","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":352,"nodeType":"ParameterList","parameters":[],"src":"9532:2:8"},"src":"9509:132:8","virtual":false,"visibility":"internal"},{"body":{"id":380,"nodeType":"Block","src":"9673:76:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9691:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9691:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":374,"name":"strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"9705:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"2173747261746567697374","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9717:13:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd","typeString":"literal_string \\"!strategist\\""},"value":"!strategist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_166167a50e551d298f1db532f5b4f3e4b7ab1f87237055c55cba3762afb58fbd","typeString":"literal_string \\"!strategist\\""}],"id":371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9683:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9683:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"9683:48:8"},{"id":379,"nodeType":"PlaceholderStatement","src":"9741:1:8"}]},"documentation":null,"id":381,"name":"onlyStrategist","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"9670:2:8"},"src":"9647:102:8","virtual":false,"visibility":"internal"},{"body":{"id":393,"nodeType":"Block","src":"9781:78:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9799:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9799:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":386,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"9813:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9813:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9799:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"21617574686f72697a6564","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9827:13:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6","typeString":"literal_string \\"!authorized\\""},"value":"!authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6","typeString":"literal_string \\"!authorized\\""}],"id":383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9791:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9791:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"9791:50:8"},{"id":392,"nodeType":"PlaceholderStatement","src":"9851:1:8"}]},"documentation":null,"id":394,"name":"onlyGovernance","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"9778:2:8"},"src":"9755:104:8","virtual":false,"visibility":"internal"},{"body":{"id":430,"nodeType":"Block","src":"9888:298:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":397,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9919:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9919:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":399,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"9933:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9919:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9959:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9959:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":403,"name":"strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"9973:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9959:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9919:64:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10003:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10003:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":408,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"10017:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10017:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10003:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9919:110:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":412,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10049:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10049:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":414,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"10063:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"guardian","nodeType":"MemberAccess","referencedDeclaration":177,"src":"10063:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10063:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10049:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9919:160:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10099:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10099:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":421,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"10113:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"management","nodeType":"MemberAccess","referencedDeclaration":171,"src":"10113:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10113:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10099:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9919:212:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"21617574686f72697a6564","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10145:13:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6","typeString":"literal_string \\"!authorized\\""},"value":"!authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6","typeString":"literal_string \\"!authorized\\""}],"id":396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9898:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9898:270:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"9898:270:8"},{"id":429,"nodeType":"PlaceholderStatement","src":"10178:1:8"}]},"documentation":null,"id":431,"name":"onlyKeepers","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"9885:2:8"},"src":"9865:321:8","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"10227:72:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":437,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"10249:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10257:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10257:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10269:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10269:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10281:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10281:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":436,"name":"_initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10237:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address,address)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10237:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"10237:55:8"}]},"documentation":null,"id":447,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"_vault","nodeType":"VariableDeclaration","overrides":null,"scope":447,"src":"10204:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"10204:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"10203:16:8"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"10227:0:8"},"scope":1190,"src":"10192:107:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":520,"nodeType":"Block","src":"10702:416:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":462,"name":"want","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"10728:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}],"id":461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10720:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10745:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10737:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"10737:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10737:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"10720:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"537472617465677920616c726561647920696e697469616c697a6564","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10749:30:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_80b343a437fff23501214c357d008002a3fb13f6ab1aa9d8bd8e9a63899fbba0","typeString":"literal_string \\"Strategy already initialized\\""},"value":"Strategy already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_80b343a437fff23501214c357d008002a3fb13f6ab1aa9d8bd8e9a63899fbba0","typeString":"literal_string \\"Strategy already initialized\\""}],"id":459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10712:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10712:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"10712:68:8"},{"expression":{"argumentTypes":null,"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":472,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"10791:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":474,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"10808:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":473,"name":"VaultAPI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10799:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VaultAPI_$178_$","typeString":"type(contract VaultAPI)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10799:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"src":"10791:24:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":477,"nodeType":"ExpressionStatement","src":"10791:24:8"},{"expression":{"argumentTypes":null,"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":478,"name":"want","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"10825:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":480,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"10839:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":98,"src":"10839:11:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10839:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":479,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"10832:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$8203_$","typeString":"type(contract IERC20)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10832:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"src":"10825:28:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"id":485,"nodeType":"ExpressionStatement","src":"10825:28:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":489,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"10880:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10896:2:8","subExpression":{"argumentTypes":null,"hexValue":"31","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10888:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"10888:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10888:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":486,"name":"want","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"10863:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":8305,"src":"10863:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$8203_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8203_$","typeString":"function (contract IERC20,address,uint256)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10863:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"10863:37:8"},{"expression":{"argumentTypes":null,"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":497,"name":"strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"10958:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":498,"name":"_strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10971:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10958:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":500,"nodeType":"ExpressionStatement","src":"10958:24:8"},{"expression":{"argumentTypes":null,"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":501,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"10992:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":502,"name":"_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"11002:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10992:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":504,"nodeType":"ExpressionStatement","src":"10992:18:8"},{"expression":{"argumentTypes":null,"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":505,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"11020:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":506,"name":"_keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"11029:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11020:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":508,"nodeType":"ExpressionStatement","src":"11020:16:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":512,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"11060:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"11077:2:8","subExpression":{"argumentTypes":null,"hexValue":"31","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11078:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"11069:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":509,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"11046:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":8172,"src":"11046:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11046:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":519,"nodeType":"ExpressionStatement","src":"11046:35:8"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"10305:252:8","text":" @notice\\n  Initializes the Strategy, this is called only once, when the\\n  contract is deployed.\\n @dev `_vault` should implement `VaultAPI`.\\n @param _vault The address of the Vault responsible for this Strategy."},"id":521,"implemented":true,"kind":"function","modifiers":[],"name":"_initialize","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"_vault","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"10592:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"10592:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"_strategist","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"10616:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"10616:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"_rewards","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"10645:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"10645:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"_keeper","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"10671:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"10671:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"10582:110:8"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"10702:0:8"},"scope":1190,"src":"10562:556:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":546,"nodeType":"Block","src":"11410:130:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":530,"name":"_strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"11428:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11451:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11443:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"11443:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11443:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"11428:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11420:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11420:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":537,"nodeType":"ExpressionStatement","src":"11420:34:8"},{"expression":{"argumentTypes":null,"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":538,"name":"strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"11464:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":539,"name":"_strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"11477:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11464:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":541,"nodeType":"ExpressionStatement","src":"11464:24:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":543,"name":"_strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"11521:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":542,"name":"UpdatedStrategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"11503:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11503:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":545,"nodeType":"EmitStatement","src":"11498:35:8"}]},"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"11124:213:8","text":" @notice\\n  Used to change `strategist`.\\n  This may only be called by governance or the existing strategist.\\n @param _strategist The new address to assign as `strategist`."},"functionSelector":"c7b9d530","id":547,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":527,"modifierName":{"argumentTypes":null,"id":526,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"11395:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11395:14:8"}],"name":"setStrategist","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"_strategist","nodeType":"VariableDeclaration","overrides":null,"scope":547,"src":"11365:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"11365:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"11364:21:8"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"11410:0:8"},"scope":1190,"src":"11342:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":572,"nodeType":"Block","src":"12139:110:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":556,"name":"_keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"12157:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12176:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12168:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"12168:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12168:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"12157:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":555,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12149:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12149:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"12149:30:8"},{"expression":{"argumentTypes":null,"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":564,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"12189:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":565,"name":"_keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"12198:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12189:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":567,"nodeType":"ExpressionStatement","src":"12189:16:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":569,"name":"_keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"12234:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":568,"name":"UpdatedKeeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"12220:13:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12220:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":571,"nodeType":"EmitStatement","src":"12215:27:8"}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"11546:528:8","text":" @notice\\n  Used to change `keeper`.\\n  `keeper` is the only address that may call `tend()` or `harvest()`,\\n  other than `governance()` or `strategist`. However, unlike\\n  `governance()` or `strategist`, `keeper` may *only* call `tend()`\\n  and `harvest()`, and no other authorized functions, following the\\n  principle of least privilege.\\n  This may only be called by governance or the strategist.\\n @param _keeper The new address to assign as `keeper`."},"functionSelector":"748747e6","id":573,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":553,"modifierName":{"argumentTypes":null,"id":552,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"12124:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12124:14:8"}],"name":"setKeeper","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"_keeper","nodeType":"VariableDeclaration","overrides":null,"scope":573,"src":"12098:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"12098:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12097:17:8"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"12139:0:8"},"scope":1190,"src":"12079:170:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":616,"nodeType":"Block","src":"12590:195:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":582,"name":"_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"12608:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12628:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12620:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"12620:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12620:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"12608:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12600:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12600:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"ExpressionStatement","src":"12600:31:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":593,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"12655:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"hexValue":"30","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12664:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"argumentTypes":null,"id":590,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"12641:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":8172,"src":"12641:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12641:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":596,"nodeType":"ExpressionStatement","src":"12641:25:8"},{"expression":{"argumentTypes":null,"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":597,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"12676:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":598,"name":"_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"12686:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12676:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":600,"nodeType":"ExpressionStatement","src":"12676:18:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":604,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"12718:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12735:2:8","subExpression":{"argumentTypes":null,"hexValue":"31","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12736:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12727:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"12727:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12727:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":601,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"12704:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":8172,"src":"12704:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12704:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"ExpressionStatement","src":"12704:35:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":613,"name":"_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"12769:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":612,"name":"UpdatedRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"12754:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12754:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"EmitStatement","src":"12749:29:8"}]},"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"12255:268:8","text":" @notice\\n  Used to change `rewards`. EOA or smart contract which has the permission\\n  to pull rewards from the vault.\\n  This may only be called by the strategist.\\n @param _rewards The address to use for pulling rewards."},"functionSelector":"ec38a862","id":617,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":579,"modifierName":{"argumentTypes":null,"id":578,"name":"onlyStrategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"12575:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12575:14:8"}],"name":"setRewards","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"_rewards","nodeType":"VariableDeclaration","overrides":null,"scope":617,"src":"12548:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"12548:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12547:18:8"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[],"src":"12590:0:8"},"scope":1190,"src":"12528:257:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":633,"nodeType":"Block","src":"13355:84:8","statements":[{"expression":{"argumentTypes":null,"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":625,"name":"minReportDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"13365:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":626,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"13382:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13365:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":628,"nodeType":"ExpressionStatement","src":"13365:23:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":630,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"13425:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"UpdatedMinReportDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"13403:21:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13403:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"EmitStatement","src":"13398:34:8"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"12791:492:8","text":" @notice\\n  Used to change `minReportDelay`. `minReportDelay` is the minimum number\\n  of blocks that should pass for `harvest()` to be called.\\n  For external keepers (such as the Keep3r network), this is the minimum\\n  time between jobs to wait. (see `harvestTrigger()`\\n  for more details.)\\n  This may only be called by governance or the strategist.\\n @param _delay The minimum number of seconds to wait between harvests."},"functionSelector":"39a172a8","id":634,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":623,"modifierName":{"argumentTypes":null,"id":622,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"13340:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13340:14:8"}],"name":"setMinReportDelay","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"_delay","nodeType":"VariableDeclaration","overrides":null,"scope":634,"src":"13315:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"13315:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13314:16:8"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"13355:0:8"},"scope":1190,"src":"13288:151:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":650,"nodeType":"Block","src":"14009:84:8","statements":[{"expression":{"argumentTypes":null,"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":642,"name":"maxReportDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"14019:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":643,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"14036:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14019:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":645,"nodeType":"ExpressionStatement","src":"14019:23:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":647,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"14079:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":646,"name":"UpdatedMaxReportDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"14057:21:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14057:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"EmitStatement","src":"14052:34:8"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"13445:492:8","text":" @notice\\n  Used to change `maxReportDelay`. `maxReportDelay` is the maximum number\\n  of blocks that should pass for `harvest()` to be called.\\n  For external keepers (such as the Keep3r network), this is the maximum\\n  time between jobs to wait. (see `harvestTrigger()`\\n  for more details.)\\n  This may only be called by governance or the strategist.\\n @param _delay The maximum number of seconds to wait between harvests."},"functionSelector":"f017c92f","id":651,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":640,"modifierName":{"argumentTypes":null,"id":639,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"13994:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13994:14:8"}],"name":"setMaxReportDelay","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"_delay","nodeType":"VariableDeclaration","overrides":null,"scope":651,"src":"13969:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"13969:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13968:16:8"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"14009:0:8"},"scope":1190,"src":"13942:151:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":667,"nodeType":"Block","src":"14553:94:8","statements":[{"expression":{"argumentTypes":null,"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":659,"name":"profitFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"14563:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":660,"name":"_profitFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"14578:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14563:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":662,"nodeType":"ExpressionStatement","src":"14563:28:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":664,"name":"_profitFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"14626:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":663,"name":"UpdatedProfitFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"14606:19:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14606:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"EmitStatement","src":"14601:39:8"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"14099:377:8","text":" @notice\\n  Used to change `profitFactor`. `profitFactor` is used to determine\\n  if it\'s worthwhile to harvest, given gas costs. (See `harvestTrigger()`\\n  for more details.)\\n  This may only be called by governance or the strategist.\\n @param _profitFactor A ratio to multiply anticipated\\n `harvest()` gas cost against."},"functionSelector":"91397ab4","id":668,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":657,"modifierName":{"argumentTypes":null,"id":656,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"14538:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"14538:14:8"}],"name":"setProfitFactor","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"_profitFactor","nodeType":"VariableDeclaration","overrides":null,"scope":668,"src":"14506:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"14506:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14505:23:8"},"returnParameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"14553:0:8"},"scope":1190,"src":"14481:166:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":684,"nodeType":"Block","src":"15263:98:8","statements":[{"expression":{"argumentTypes":null,"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":676,"name":"debtThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"15273:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":677,"name":"_debtThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"15289:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15273:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":679,"nodeType":"ExpressionStatement","src":"15273:30:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":681,"name":"_debtThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"15339:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":680,"name":"UpdatedDebtThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15318:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15318:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"EmitStatement","src":"15313:41:8"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"14653:531:8","text":" @notice\\n  Sets how far the Strategy can go into loss without a harvest and report\\n  being required.\\n  By default this is 0, meaning any losses would cause a harvest which\\n  will subsequently report the loss to the Vault for tracking. (See\\n  `harvestTrigger()` for more details.)\\n  This may only be called by governance or the strategist.\\n @param _debtThreshold How big of a loss this Strategy may carry without\\n being required to report to the Vault."},"functionSelector":"0f969b87","id":685,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":674,"modifierName":{"argumentTypes":null,"id":673,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"15248:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15248:14:8"}],"name":"setDebtThreshold","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"_debtThreshold","nodeType":"VariableDeclaration","overrides":null,"scope":685,"src":"15215:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"15215:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15214:24:8"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"15263:0:8"},"scope":1190,"src":"15189:172:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":701,"nodeType":"Block","src":"15732:90:8","statements":[{"expression":{"argumentTypes":null,"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":693,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"15742:11:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":694,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"15756:12:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"15742:26:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":696,"nodeType":"ExpressionStatement","src":"15742:26:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":698,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"15802:12:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":697,"name":"UpdatedMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"15783:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15783:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"EmitStatement","src":"15778:37:8"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"15367:282:8","text":" @notice\\n  Used to change `metadataURI`. `metadataURI` is used to store the URI\\n of the file describing the strategy.\\n  This may only be called by governance or the strategist.\\n @param _metadataURI The URI that describe the strategy."},"functionSelector":"750521f5","id":702,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":691,"modifierName":{"argumentTypes":null,"id":690,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"15717:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15717:14:8"}],"name":"setMetadataURI","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"_metadataURI","nodeType":"VariableDeclaration","overrides":null,"scope":702,"src":"15678:28:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":687,"name":"string","nodeType":"ElementaryTypeName","src":"15678:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"15677:30:8"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"15732:0:8"},"scope":1190,"src":"15654:168:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":712,"nodeType":"Block","src":"16024:42:8","statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":708,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"16041:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"governance","nodeType":"MemberAccess","referencedDeclaration":165,"src":"16041:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16041:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":707,"id":711,"nodeType":"Return","src":"16034:25:8"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"15828:137:8","text":" Resolve governance address from Vault contract, used to make assertions\\n on protected functions in the Strategy."},"id":713,"implemented":true,"kind":"function","modifiers":[],"name":"governance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"15989:2:8"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":713,"src":"16015:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"16015:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16014:9:8"},"scope":1190,"src":"15970:96:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":null,"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"16072:1249:8","text":" @notice\\n  Provide an accurate estimate for the total amount of assets\\n  (principle + return) that this Strategy is currently managing,\\n  denominated in terms of `want` tokens.\\n  This total should be \\"realizable\\" e.g. the total value that could\\n  *actually* be obtained from this Strategy if it were to divest its\\n  entire position based on current on-chain conditions.\\n @dev\\n  Care must be taken in using this function, since it relies on external\\n  systems, which could be manipulated by the attacker to give an inflated\\n  (or reduced) value produced by this function, based on current on-chain\\n  conditions (e.g. this function is possible to influence through\\n  flashloan attacks, oracle manipulations, or other DeFi attack\\n  mechanisms).\\n  It is up to governance to use this function to correctly order this\\n  Strategy relative to its peers in the withdrawal queue to minimize\\n  losses for the Vault based on sudden withdrawals. This value should be\\n  higher than the total debt of the Strategy and higher than its expected\\n  value to be \\"safe\\".\\n @return The estimated total assets in this Strategy."},"functionSelector":"efbb5cb0","id":719,"implemented":false,"kind":"function","modifiers":[],"name":"estimatedTotalAssets","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"17355:2:8"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":719,"src":"17387:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"17387:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17386:9:8"},"scope":1190,"src":"17326:70:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":740,"nodeType":"Block","src":"17849:99:8","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":728,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17891:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}],"id":727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17883:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"17883:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17883:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":724,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"17866:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"strategies","nodeType":"MemberAccess","referencedDeclaration":105,"src":"17866:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_StrategyParams_$24_memory_ptr_$","typeString":"function (address) view external returns (struct StrategyParams memory)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17866:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams memory"}},"id":731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"debtRatio","nodeType":"MemberAccess","referencedDeclaration":11,"src":"17866:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17910:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17866:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":734,"name":"estimatedTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"17915:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17915:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17940:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17915:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17866:75:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":723,"id":739,"nodeType":"Return","src":"17859:82:8"}]},"documentation":null,"functionSelector":"22f3e2d4","id":741,"implemented":true,"kind":"function","modifiers":[],"name":"isActive","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"17819:2:8"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":741,"src":"17843:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":721,"name":"bool","nodeType":"ElementaryTypeName","src":"17843:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"17842:6:8"},"scope":1190,"src":"17802:146:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":null,"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"17954:1305:8","text":" Perform any Strategy unwinding or other calls necessary to capture the\\n \\"free return\\" this Strategy has generated since the last time its core\\n position(s) were adjusted. Examples include unwrapping extra rewards.\\n This call is only used during \\"normal operation\\" of a Strategy, and\\n should be optimized to minimize losses as much as possible.\\n This method returns any realized profits and/or realized losses\\n incurred, and should return the total amounts of profits/losses/debt\\n payments (in `want` tokens) for the Vault\'s accounting (e.g.\\n `want.balanceOf(this) >= _debtPayment + _profit - _loss`).\\n `_debtOutstanding` will be 0 if the Strategy is not past the configured\\n debt limit, otherwise its value will be how far past the debt limit\\n the Strategy is. The Strategy\'s debt limit is configured in the Vault.\\n NOTE: `_debtPayment` should be less than or equal to `_debtOutstanding`.\\n       It is okay for it to be less than `_debtOutstanding`, as that\\n       should only used as a guide for how much is left to pay back.\\n       Payments should be made to minimize loss from slippage, debt,\\n       withdrawal fees, etc.\\n See `vault.debtOutstanding()`."},"id":753,"implemented":false,"kind":"function","modifiers":[],"name":"prepareReturn","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"_debtOutstanding","nodeType":"VariableDeclaration","overrides":null,"scope":753,"src":"19287:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"19287:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19286:26:8"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"_profit","nodeType":"VariableDeclaration","overrides":null,"scope":753,"src":"19376:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"19376:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"_loss","nodeType":"VariableDeclaration","overrides":null,"scope":753,"src":"19405:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"19405:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"_debtPayment","nodeType":"VariableDeclaration","overrides":null,"scope":753,"src":"19432:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"19432:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19362:100:8"},"scope":1190,"src":"19264:199:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":null,"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"19469:467:8","text":" Perform any adjustments to the core position(s) of this Strategy given\\n what change the Vault made in the \\"investable capital\\" available to the\\n Strategy. Note that all \\"free capital\\" in the Strategy after the report\\n was made is available for reinvestment. Also note that this number\\n could be 0, and you should handle that scenario accordingly.\\n See comments regarding `_debtOutstanding` on `prepareReturn()`."},"id":759,"implemented":false,"kind":"function","modifiers":[],"name":"adjustPosition","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"_debtOutstanding","nodeType":"VariableDeclaration","overrides":null,"scope":759,"src":"19965:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"19965:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19964:26:8"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"20007:0:8"},"scope":1190,"src":"19941:67:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":null,"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"20014:787:8","text":" Liquidate up to `_amountNeeded` of `want` of this strategy\'s positions,\\n irregardless of slippage. Any excess will be re-invested with `adjustPosition()`.\\n This function should return the amount of `want` tokens made available by the\\n liquidation. If there is a difference between them, `_loss` indicates whether the\\n difference is due to a realized loss, or if there is some other sitution at play\\n (e.g. locked funds) where the amount made available is less than what is needed.\\n This function is used during emergency exit instead of `prepareReturn()` to\\n liquidate all of the Strategy\'s positions back to the Vault.\\n NOTE: The invariant `_liquidatedAmount + _loss <= _amountNeeded` should always be maintained"},"id":769,"implemented":false,"kind":"function","modifiers":[],"name":"liquidatePosition","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"_amountNeeded","nodeType":"VariableDeclaration","overrides":null,"scope":769,"src":"20833:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"20833:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20832:23:8"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"_liquidatedAmount","nodeType":"VariableDeclaration","overrides":null,"scope":769,"src":"20882:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint256","nodeType":"ElementaryTypeName","src":"20882:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"_loss","nodeType":"VariableDeclaration","overrides":null,"scope":769,"src":"20909:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"20909:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20881:42:8"},"scope":1190,"src":"20806:118:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"21934:207:8","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22129:5:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":776,"id":778,"nodeType":"Return","src":"22122:12:8"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"20930:925:8","text":" @notice\\n  Provide a signal to the keeper that `tend()` should be called. The\\n  keeper will provide the estimated gas cost that they would pay to call\\n  `tend()`, and this function should use that estimate to make a\\n  determination if calling it is \\"worth it\\" for the keeper. This is not\\n  the only consideration into issuing this trigger, for example if the\\n  position would be negatively affected if `tend()` is not called\\n  shortly, then this can return `true` even if the keeper might be\\n  \\"at a loss\\" (keepers are always reimbursed by Yearn).\\n @dev\\n  `callCost` must be priced in terms of `want`.\\n  This call and `harvestTrigger()` should never return `true` at the same\\n  time.\\n @param callCost The keeper\'s estimated cast cost to call `tend()`.\\n @return `true` if `tend()` should be called, `false` otherwise."},"functionSelector":"650d1880","id":780,"implemented":true,"kind":"function","modifiers":[],"name":"tendTrigger","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"callCost","nodeType":"VariableDeclaration","overrides":null,"scope":780,"src":"21881:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"21881:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"21880:18:8"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":780,"src":"21928:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":774,"name":"bool","nodeType":"ElementaryTypeName","src":"21928:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21927:6:8"},"scope":1190,"src":"21860:281:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":792,"nodeType":"Block","src":"22496:130:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":787,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"22595:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"debtOutstanding","nodeType":"MemberAccess","referencedDeclaration":137,"src":"22595:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22595:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":786,"name":"adjustPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"22580:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22580:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"ExpressionStatement","src":"22580:39:8"}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"22147:307:8","text":" @notice\\n  Adjust the Strategy\'s position. The purpose of tending isn\'t to\\n  realize gains, but to maximize yield by reinvesting any returns.\\n  See comments on `adjustPosition()`.\\n  This may only be called by governance, the strategist, or the keeper."},"functionSelector":"440368a3","id":793,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":784,"modifierName":{"argumentTypes":null,"id":783,"name":"onlyKeepers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"22484:11:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"22484:11:8"}],"name":"tend","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"22472:2:8"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"22496:0:8"},"scope":1190,"src":"22459:167:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":901,"nodeType":"Block","src":"24411:1568:8","statements":[{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","overrides":null,"scope":901,"src":"24421:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams"},"typeName":{"contractScope":null,"id":801,"name":"StrategyParams","nodeType":"UserDefinedTypeName","referencedDeclaration":24,"src":"24421:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_storage_ptr","typeString":"struct StrategyParams"}},"value":null,"visibility":"internal"}],"id":810,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":807,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24477:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}],"id":806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24469:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"24469:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24469:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":803,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"24452:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"strategies","nodeType":"MemberAccess","referencedDeclaration":105,"src":"24452:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_StrategyParams_$24_memory_ptr_$","typeString":"function (address) view external returns (struct StrategyParams memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24452:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams memory"}},"nodeType":"VariableDeclarationStatement","src":"24421:62:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":811,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"24557:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams memory"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":9,"src":"24557:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24578:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24557:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":817,"nodeType":"IfStatement","src":"24553:40:8","trueBody":{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24588:5:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":800,"id":816,"nodeType":"Return","src":"24581:12:8"}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":821,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"24714:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams memory"}},"id":822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastReport","nodeType":"MemberAccess","referencedDeclaration":17,"src":"24714:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":818,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"24694:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"24694:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":7974,"src":"24694:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24694:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":824,"name":"minReportDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"24735:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24694:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":828,"nodeType":"IfStatement","src":"24690:73:8","trueBody":{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24758:5:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":800,"id":827,"nodeType":"Return","src":"24751:12:8"}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":832,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"24857:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams memory"}},"id":833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastReport","nodeType":"MemberAccess","referencedDeclaration":17,"src":"24857:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":829,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"24837:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"24837:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":7974,"src":"24837:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24837:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":835,"name":"maxReportDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"24879:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24837:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":839,"nodeType":"IfStatement","src":"24833:73:8","trueBody":{"expression":{"argumentTypes":null,"hexValue":"74727565","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24902:4:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":800,"id":838,"nodeType":"Return","src":"24895:11:8"}},{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"outstanding","nodeType":"VariableDeclaration","overrides":null,"scope":901,"src":"25307:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"25307:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":845,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":842,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"25329:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"debtOutstanding","nodeType":"MemberAccess","referencedDeclaration":137,"src":"25329:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25329:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25307:45:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":846,"name":"outstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"25366:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":847,"name":"debtThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"25380:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25366:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":851,"nodeType":"IfStatement","src":"25362:44:8","trueBody":{"expression":{"argumentTypes":null,"hexValue":"74727565","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25402:4:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":800,"id":850,"nodeType":"Return","src":"25395:11:8"}},{"assignments":[853],"declarations":[{"constant":false,"id":853,"mutability":"mutable","name":"total","nodeType":"VariableDeclaration","overrides":null,"scope":901,"src":"25457:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"25457:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":856,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":854,"name":"estimatedTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"25473:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25473:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25457:38:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":859,"name":"debtThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"25566:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":857,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"25556:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7952,"src":"25556:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25556:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":861,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"25583:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams memory"}},"id":862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalDebt","nodeType":"MemberAccess","referencedDeclaration":19,"src":"25583:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25556:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":866,"nodeType":"IfStatement","src":"25552:60:8","trueBody":{"expression":{"argumentTypes":null,"hexValue":"74727565","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25608:4:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":800,"id":865,"nodeType":"Return","src":"25601:11:8"}},{"assignments":[868],"declarations":[{"constant":false,"id":868,"mutability":"mutable","name":"profit","nodeType":"VariableDeclaration","overrides":null,"scope":901,"src":"25623:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"25623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":870,"initialValue":{"argumentTypes":null,"hexValue":"30","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25640:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25623:18:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":871,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"25655:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":872,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"25663:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams memory"}},"id":873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalDebt","nodeType":"MemberAccess","referencedDeclaration":19,"src":"25663:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25655:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":883,"nodeType":"IfStatement","src":"25651:66:8","trueBody":{"expression":{"argumentTypes":null,"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":875,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"25681:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":878,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"25700:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$24_memory_ptr","typeString":"struct StrategyParams memory"}},"id":879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalDebt","nodeType":"MemberAccess","referencedDeclaration":19,"src":"25700:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":876,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"25690:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":7974,"src":"25690:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25690:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25681:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":882,"nodeType":"ExpressionStatement","src":"25681:36:8"}},{"assignments":[885],"declarations":[{"constant":false,"id":885,"mutability":"mutable","name":"credit","nodeType":"VariableDeclaration","overrides":null,"scope":901,"src":"25866:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"25866:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":889,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":886,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"25883:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"creditAvailable","nodeType":"MemberAccess","referencedDeclaration":131,"src":"25883:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25883:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25866:40:8"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":892,"name":"callCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"25941:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":890,"name":"profitFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"25924:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":8008,"src":"25924:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25924:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":896,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"25964:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":894,"name":"credit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"25953:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7952,"src":"25953:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25953:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25924:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25923:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":800,"id":900,"nodeType":"Return","src":"25916:56:8"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"22632:1697:8","text":" @notice\\n  Provide a signal to the keeper that `harvest()` should be called. The\\n  keeper will provide the estimated gas cost that they would pay to call\\n  `harvest()`, and this function should use that estimate to make a\\n  determination if calling it is \\"worth it\\" for the keeper. This is not\\n  the only consideration into issuing this trigger, for example if the\\n  position would be negatively affected if `harvest()` is not called\\n  shortly, then this can return `true` even if the keeper might be \\"at a\\n  loss\\" (keepers are always reimbursed by Yearn).\\n @dev\\n  `callCost` must be priced in terms of `want`.\\n  This call and `tendTrigger` should never return `true` at the\\n  same time.\\n  See `min/maxReportDelay`, `profitFactor`, `debtThreshold` to adjust the\\n  strategist-controlled parameters that will influence whether this call\\n  returns `true` or not. These parameters will be used in conjunction\\n  with the parameters reported to the Vault (see `params`) to determine\\n  if calling `harvest()` is merited.\\n  It is expected that an external system will check `harvestTrigger()`.\\n  This could be a script run off a desktop or cloud bot (e.g.\\n  https://github.com/iearn-finance/yearn-vaults/blob/master/scripts/keep.py),\\n  or via an integration with the Keep3r network (e.g.\\n  https://github.com/Macarse/GenericKeep3rV2/blob/master/contracts/keep3r/GenericKeep3rV2.sol).\\n @param callCost The keeper\'s estimated cast cost to call `harvest()`.\\n @return `true` if `harvest()` should be called, `false` otherwise."},"functionSelector":"ed882c2b","id":902,"implemented":true,"kind":"function","modifiers":[],"name":"harvestTrigger","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"callCost","nodeType":"VariableDeclaration","overrides":null,"scope":902,"src":"24358:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"24358:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"24357:18:8"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":902,"src":"24405:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":798,"name":"bool","nodeType":"ElementaryTypeName","src":"24405:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"24404:6:8"},"scope":1190,"src":"24334:1645:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":993,"nodeType":"Block","src":"26806:1302:8","statements":[{"assignments":[909],"declarations":[{"constant":false,"id":909,"mutability":"mutable","name":"profit","nodeType":"VariableDeclaration","overrides":null,"scope":993,"src":"26816:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"26816:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":911,"initialValue":{"argumentTypes":null,"hexValue":"30","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26833:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26816:18:8"},{"assignments":[913],"declarations":[{"constant":false,"id":913,"mutability":"mutable","name":"loss","nodeType":"VariableDeclaration","overrides":null,"scope":993,"src":"26844:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"26844:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":915,"initialValue":{"argumentTypes":null,"hexValue":"30","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26859:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26844:16:8"},{"assignments":[917],"declarations":[{"constant":false,"id":917,"mutability":"mutable","name":"debtOutstanding","nodeType":"VariableDeclaration","overrides":null,"scope":993,"src":"26870:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"26870:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":921,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":918,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"26896:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"debtOutstanding","nodeType":"MemberAccess","referencedDeclaration":137,"src":"26896:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26896:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26870:49:8"},{"assignments":[923],"declarations":[{"constant":false,"id":923,"mutability":"mutable","name":"debtPayment","nodeType":"VariableDeclaration","overrides":null,"scope":993,"src":"26929:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"26929:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":925,"initialValue":{"argumentTypes":null,"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26951:1:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26929:23:8"},{"condition":{"argumentTypes":null,"id":926,"name":"emergencyExit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"26966:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":971,"nodeType":"Block","src":"27546:134:8","statements":[{"expression":{"argumentTypes":null,"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":962,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"27610:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":963,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"27618:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":964,"name":"debtPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"27624:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":965,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"27609:27:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":967,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"27653:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":966,"name":"prepareReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"27639:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) returns (uint256,uint256,uint256)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27639:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"src":"27609:60:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"27609:60:8"}]},"id":972,"nodeType":"IfStatement","src":"26962:718:8","trueBody":{"id":961,"nodeType":"Block","src":"26981:559:8","statements":[{"assignments":[928],"declarations":[{"constant":false,"id":928,"mutability":"mutable","name":"totalAssets","nodeType":"VariableDeclaration","overrides":null,"scope":961,"src":"27046:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"27046:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":931,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":929,"name":"estimatedTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"27068:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27068:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27046:44:8"},{"expression":{"argumentTypes":null,"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":932,"name":"debtPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"27201:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":933,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"27214:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":934,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"27200:19:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":936,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"27240:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":937,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"27254:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27240:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"argumentTypes":null,"id":940,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"27286:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"27240:61:8","trueExpression":{"argumentTypes":null,"id":939,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"27272:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":935,"name":"liquidatePosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"27222:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) returns (uint256,uint256)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27222:80:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"27200:102:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"27200:102:8"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":945,"name":"debtPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"27378:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":946,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"27392:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27378:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":960,"nodeType":"IfStatement","src":"27374:156:8","trueBody":{"id":959,"nodeType":"Block","src":"27409:121:8","statements":[{"expression":{"argumentTypes":null,"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":948,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"27427:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":951,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"27452:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":949,"name":"debtPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"27436:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":7974,"src":"27436:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27436:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27427:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":954,"nodeType":"ExpressionStatement","src":"27427:41:8"},{"expression":{"argumentTypes":null,"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":955,"name":"debtPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"27486:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":956,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"27500:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27486:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":958,"nodeType":"ExpressionStatement","src":"27486:29:8"}]}}]}},{"expression":{"argumentTypes":null,"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":973,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"27871:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":976,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"27902:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":977,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"27910:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":978,"name":"debtPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"27916:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":974,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"27889:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"report","nodeType":"MemberAccess","referencedDeclaration":155,"src":"27889:12:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) external returns (uint256)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27889:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27871:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"27871:57:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":983,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"28016:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":982,"name":"adjustPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"28001:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28001:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"ExpressionStatement","src":"28001:31:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":987,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"28058:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":988,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"28066:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":989,"name":"debtPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"28072:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":990,"name":"debtOutstanding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"28085:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":986,"name":"Harvested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"28048:9:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28048:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":992,"nodeType":"EmitStatement","src":"28043:58:8"}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"25985:776:8","text":" @notice\\n  Harvests the Strategy, recognizing any profits or losses and adjusting\\n  the Strategy\'s position.\\n  In the rare case the Strategy is in emergency shutdown, this will exit\\n  the Strategy\'s position.\\n  This may only be called by governance, the strategist, or the keeper.\\n @dev\\n  When `harvest()` is called, the Strategy reports to the Vault (via\\n  `vault.report()`), so in some cases `harvest()` must be called in order\\n  to take in profits, to borrow newly available funds from the Vault, or\\n  otherwise adjust its position. In other cases `harvest()` must be\\n  called to report to the Vault on the Strategy\'s position, especially if\\n  any losses have occurred."},"functionSelector":"4641257d","id":994,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":906,"modifierName":{"argumentTypes":null,"id":905,"name":"onlyKeepers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"26794:11:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"26794:11:8"}],"name":"harvest","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"26782:2:8"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"26806:0:8"},"scope":1190,"src":"26766:1342:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1032,"nodeType":"Block","src":"28416:433:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1003,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28434:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"28434:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1007,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"28456:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28448:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"28448:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28448:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28434:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"217661756c74","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28464:8:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825","typeString":"literal_string \\"!vault\\""},"value":"!vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_935dae7e2471bb42a624e3787c1dd49fe36e63fd03e67a6f90f78ba819cb3825","typeString":"literal_string \\"!vault\\""}],"id":1002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28426:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28426:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"28426:47:8"},{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"amountFreed","nodeType":"VariableDeclaration","overrides":null,"scope":1032,"src":"28557:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"28557:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1015,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"28557:19:8"},{"expression":{"argumentTypes":null,"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":1016,"name":"amountFreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"28587:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1017,"name":"_loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"28600:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1018,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"28586:20:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1020,"name":"_amountNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"28627:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1019,"name":"liquidatePosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"28609:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) returns (uint256,uint256)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28609:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"28586:55:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1023,"nodeType":"ExpressionStatement","src":"28586:55:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28749:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"28749:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1029,"name":"amountFreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"28761:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1024,"name":"want","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"28731:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"28731:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$8203_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8203_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28731:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"ExpressionStatement","src":"28731:42:8"}]},"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"28114:223:8","text":" @notice\\n  Withdraws `_amountNeeded` to `vault`.\\n  This may only be called by the Vault.\\n @param _amountNeeded How much `want` to withdraw.\\n @return _loss Any realized losses"},"functionSelector":"2e1a7d4d","id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"_amountNeeded","nodeType":"VariableDeclaration","overrides":null,"scope":1033,"src":"28360:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"28360:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"28359:23:8"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"_loss","nodeType":"VariableDeclaration","overrides":null,"scope":1033,"src":"28401:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"28401:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"28400:15:8"},"scope":1190,"src":"28342:507:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"28855:183:8","text":" Do anything necessary to prepare this Strategy for migration, such as\\n transferring any reserve or LP tokens, CDPs, or other tokens or stores of\\n value."},"id":1039,"implemented":false,"kind":"function","modifiers":[],"name":"prepareMigration","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"_newStrategy","nodeType":"VariableDeclaration","overrides":null,"scope":1039,"src":"29069:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"29069:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"29068:22:8"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"29107:0:8"},"scope":1190,"src":"29043:65:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1088,"nodeType":"Block","src":"29470:258:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29488:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"29488:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1050,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"29510:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29502:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"29502:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29502:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29488:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1053,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29520:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"29520:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1055,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"29534:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29534:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29520:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29488:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29480:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29480:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"ExpressionStatement","src":"29480:67:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1063,"name":"_newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"29578:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1062,"name":"BaseStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"29565:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaseStrategy_$1190_$","typeString":"type(contract BaseStrategy)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29565:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"vault","nodeType":"MemberAccess","referencedDeclaration":285,"src":"29565:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_VaultAPI_$178_$","typeString":"function () view external returns (contract VaultAPI)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29565:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1067,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"29603:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"src":"29565:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29557:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29557:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"29557:52:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1072,"name":"_newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"29636:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"prepareMigration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"29619:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29619:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"ExpressionStatement","src":"29619:30:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1078,"name":"_newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"29677:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1083,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"29714:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29706:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"29706:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29706:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1079,"name":"want","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"29691:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":8142,"src":"29691:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29691:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1075,"name":"want","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"29659:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"29659:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$8203_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8203_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29659:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"29659:62:8"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"29114:303:8","text":" @notice\\n  Transfers all `want` from this Strategy to `_newStrategy`.\\n  This may only be called by governance or the Vault.\\n @dev\\n  The new Strategy\'s Vault must be the same as this Strategy\'s Vault.\\n @param _newStrategy The Strategy to migrate to."},"functionSelector":"ce5494bb","id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"migrate","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"_newStrategy","nodeType":"VariableDeclaration","overrides":null,"scope":1089,"src":"29439:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"29439:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"29438:22:8"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"29470:0:8"},"scope":1190,"src":"29422:306:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1107,"nodeType":"Block","src":"30197:107:8","statements":[{"expression":{"argumentTypes":null,"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1095,"name":"emergencyExit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"30207:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"30223:4:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"30207:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1098,"nodeType":"ExpressionStatement","src":"30207:20:8"},{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1099,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"30237:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"revokeStrategy","nodeType":"MemberAccess","referencedDeclaration":159,"src":"30237:20:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30237:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"30237:22:8"},{"eventCall":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1104,"name":"EmergencyExitEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"30275:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30275:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"EmitStatement","src":"30270:27:8"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"29734:406:8","text":" @notice\\n  Activates emergency exit. Once activated, the Strategy will exit its\\n  position upon the next harvest, depositing all funds into the Vault as\\n  quickly as is reasonable given on-chain conditions.\\n  This may only be called by governance or the strategist.\\n @dev\\n  See `vault.setEmergencyShutdown()` and `harvest()` for further details."},"functionSelector":"fcf2d0ad","id":1108,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1093,"modifierName":{"argumentTypes":null,"id":1092,"name":"onlyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"30182:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"30182:14:8"}],"name":"setEmergencyExit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"30170:2:8"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[],"src":"30197:0:8"},"scope":1190,"src":"30145:159:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"30310:590:8","text":" Override this to add all tokens/tokenized positions this contract\\n manages on a *persistent* basis (e.g. not just for swapping back to\\n want ephemerally).\\n NOTE: Do *not* include `want`, already included in `sweep` below.\\n Example:\\n    function protectedTokens() internal override view returns (address[] memory) {\\n      address[] memory protected = new address[](3);\\n      protected[0] = tokenA;\\n      protected[1] = tokenB;\\n      protected[2] = tokenC;\\n      return protected;\\n    }"},"id":1115,"implemented":false,"kind":"function","modifiers":[],"name":"protectedTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"30929:2:8"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1115,"src":"30963:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"30963:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1112,"length":null,"nodeType":"ArrayTypeName","src":"30963:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"30962:18:8"},"scope":1190,"src":"30905:76:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1188,"nodeType":"Block","src":"31731:381:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1124,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"31749:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1127,"name":"want","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"31767:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}],"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31759:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"31759:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31759:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31749:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"2177616e74","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31774:7:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_231925ccfbf9a3618a033d2154443ccdf50c96b0c7e09098443d1ee47d2e02da","typeString":"literal_string \\"!want\\""},"value":"!want"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_231925ccfbf9a3618a033d2154443ccdf50c96b0c7e09098443d1ee47d2e02da","typeString":"literal_string \\"!want\\""}],"id":1123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31741:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31741:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"ExpressionStatement","src":"31741:41:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1134,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"31800:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1137,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"31818:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VaultAPI_$178","typeString":"contract VaultAPI"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31810:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"31810:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31810:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31800:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"21736861726573","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31826:9:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a260e14e85f4708f0331ef286c142a0afbf558408b64fafd24a23e404c959d74","typeString":"literal_string \\"!shares\\""},"value":"!shares"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a260e14e85f4708f0331ef286c142a0afbf558408b64fafd24a23e404c959d74","typeString":"literal_string \\"!shares\\""}],"id":1133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31792:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31792:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"31792:44:8"},{"assignments":[1147],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"_protectedTokens","nodeType":"VariableDeclaration","overrides":null,"scope":1188,"src":"31847:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"31847:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1146,"length":null,"nodeType":"ArrayTypeName","src":"31847:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"id":1150,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1148,"name":"protectedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"31883:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view returns (address[] memory)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31883:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"31847:53:8"},{"body":{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1162,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"31968:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1163,"name":"_protectedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"31978:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1165,"indexExpression":{"argumentTypes":null,"id":1164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"31995:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31978:19:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31968:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"2170726f746563746564","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31999:12:8","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e46755f6c68e6862a804f66019fefa4d62a5dcf5b8a7dfad5123628363623eae","typeString":"literal_string \\"!protected\\""},"value":"!protected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e46755f6c68e6862a804f66019fefa4d62a5dcf5b8a7dfad5123628363623eae","typeString":"literal_string \\"!protected\\""}],"id":1161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31960:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31960:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"31960:52:8"},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1154,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"31926:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1155,"name":"_protectedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"31930:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"31930:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31926:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1170,"initializationExpression":{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","overrides":null,"scope":1170,"src":"31915:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"31915:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1153,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"31915:9:8"},"loopExpression":{"expression":{"argumentTypes":null,"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"31955:3:8","subExpression":{"argumentTypes":null,"id":1158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"31955:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1160,"nodeType":"ExpressionStatement","src":"31955:3:8"},"nodeType":"ForStatement","src":"31910:102:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1175,"name":"governance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"32051:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32051:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"32098:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}],"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32090:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"32090:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32090:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1178,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"32072:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1177,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"32065:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$8203_$","typeString":"type(contract IERC20)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32065:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":8142,"src":"32065:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32065:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1172,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"32030:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1171,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"32023:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$8203_$","typeString":"type(contract IERC20)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32023:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$8203","typeString":"contract IERC20"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"32023:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$8203_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$8203_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32023:82:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"32023:82:8"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"30987:684:8","text":" @notice\\n  Removes tokens from this Strategy that are not the type of tokens\\n  managed by this Strategy. This may be used in case of accidentally\\n  sending the wrong kind of token to this Strategy.\\n  Tokens will be sent to `governance()`.\\n  This will fail if an attempt is made to sweep `want`, or any tokens\\n  that are protected by this Strategy.\\n  This may only be called by governance.\\n @dev\\n  Implement `protectedTokens()` to specify any additional tokens that\\n  should be protected from sweeping in addition to `want`.\\n @param _token The token to transfer out of this vault."},"functionSelector":"01681a62","id":1189,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1121,"modifierName":{"argumentTypes":null,"id":1120,"name":"onlyGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"31716:14:8","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"31716:14:8"}],"name":"sweep","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"_token","nodeType":"VariableDeclaration","overrides":null,"scope":1189,"src":"31691:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"31691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"31690:16:8"},"returnParameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"31731:0:8"},"scope":1190,"src":"31676:436:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1284,"src":"6314:25800:8"},{"abstract":true,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1191,"name":"BaseStrategy","nodeType":"UserDefinedTypeName","referencedDeclaration":1190,"src":"32163:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategy_$1190","typeString":"contract BaseStrategy"}},"id":1192,"nodeType":"InheritanceSpecifier","src":"32163:12:8"}],"contractDependencies":[1190],"contractKind":"contract","documentation":null,"fullyImplemented":false,"id":1283,"linearizedBaseContracts":[1283,1190],"name":"BaseStrategyInitializable","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":1196,"name":"Cloned","nodeType":"EventDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"indexed":true,"mutability":"mutable","name":"clone","nodeType":"VariableDeclaration","overrides":null,"scope":1196,"src":"32195:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"32195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"32194:23:8"},"src":"32182:36:8"},{"body":{"id":1204,"nodeType":"Block","src":"32280:2:8","statements":[]},"documentation":null,"id":1205,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"id":1201,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"32272:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1202,"modifierName":{"argumentTypes":null,"id":1200,"name":"BaseStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"32259:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaseStrategy_$1190_$","typeString":"type(contract BaseStrategy)"}},"nodeType":"ModifierInvocation","src":"32259:20:8"}],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"_vault","nodeType":"VariableDeclaration","overrides":null,"scope":1205,"src":"32236:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"32236:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"32235:16:8"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"32280:0:8"},"scope":1283,"src":"32224:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1223,"nodeType":"Block","src":"32427:68:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1217,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"32449:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1218,"name":"_strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"32457:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1219,"name":"_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"32470:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1220,"name":"_keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"32480:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1216,"name":"_initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"32437:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address,address)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32437:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"ExpressionStatement","src":"32437:51:8"}]},"documentation":null,"functionSelector":"f8c8765e","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"_vault","nodeType":"VariableDeclaration","overrides":null,"scope":1224,"src":"32317:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"32317:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"_strategist","nodeType":"VariableDeclaration","overrides":null,"scope":1224,"src":"32341:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"32341:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"_rewards","nodeType":"VariableDeclaration","overrides":null,"scope":1224,"src":"32370:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"32370:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"_keeper","nodeType":"VariableDeclaration","overrides":null,"scope":1224,"src":"32396:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"32396:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"32307:110:8"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"32427:0:8"},"scope":1283,"src":"32288:207:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1242,"nodeType":"Block","src":"32559:78:8","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1233,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"32587:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1234,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"32595:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"32595:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"32607:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"32607:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"32619:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"32619:10:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"argumentTypes":null,"id":1231,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"32576:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategyInitializable_$1283","typeString":"contract BaseStrategyInitializable"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":1282,"src":"32576:10:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address,address,address) external returns (address)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32576:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1230,"id":1241,"nodeType":"Return","src":"32569:61:8"}]},"documentation":null,"functionSelector":"8124b78e","id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"_vault","nodeType":"VariableDeclaration","overrides":null,"scope":1243,"src":"32516:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"32516:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"32515:16:8"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1243,"src":"32550:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"32550:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"32549:9:8"},"scope":1283,"src":"32501:136:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1281,"nodeType":"Block","src":"32807:729:8","statements":[{"assignments":[1257],"declarations":[{"constant":false,"id":1257,"mutability":"mutable","name":"addressBytes","nodeType":"VariableDeclaration","overrides":null,"scope":1281,"src":"32924:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1256,"name":"bytes20","nodeType":"ElementaryTypeName","src":"32924:7:8","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"value":null,"visibility":"internal"}],"id":1265,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"32963:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategyInitializable_$1283","typeString":"contract BaseStrategyInitializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseStrategyInitializable_$1283","typeString":"contract BaseStrategyInitializable"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32955:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"32955:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32955:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32947:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1258,"name":"bytes20","nodeType":"ElementaryTypeName","src":"32947:7:8","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32947:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"nodeType":"VariableDeclarationStatement","src":"32924:45:8"},{"AST":{"nodeType":"YulBlock","src":"32989:406:8","statements":[{"nodeType":"YulVariableDeclaration","src":"33036:29:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33060:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33054:5:8"},"nodeType":"YulFunctionCall","src":"33054:11:8"},"variables":[{"name":"clone_code","nodeType":"YulTypedName","src":"33040:10:8","type":""}]},{"expression":{"arguments":[{"name":"clone_code","nodeType":"YulIdentifier","src":"33085:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"33097:66:8","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33078:6:8"},"nodeType":"YulFunctionCall","src":"33078:86:8"},"nodeType":"YulExpressionStatement","src":"33078:86:8"},{"expression":{"arguments":[{"arguments":[{"name":"clone_code","nodeType":"YulIdentifier","src":"33188:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"33200:4:8","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33184:3:8"},"nodeType":"YulFunctionCall","src":"33184:21:8"},{"name":"addressBytes","nodeType":"YulIdentifier","src":"33207:12:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33177:6:8"},"nodeType":"YulFunctionCall","src":"33177:43:8"},"nodeType":"YulExpressionStatement","src":"33177:43:8"},{"expression":{"arguments":[{"arguments":[{"name":"clone_code","nodeType":"YulIdentifier","src":"33244:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"33256:4:8","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33240:3:8"},"nodeType":"YulFunctionCall","src":"33240:21:8"},{"kind":"number","nodeType":"YulLiteral","src":"33263:66:8","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33233:6:8"},"nodeType":"YulFunctionCall","src":"33233:97:8"},"nodeType":"YulExpressionStatement","src":"33233:97:8"},{"nodeType":"YulAssignment","src":"33343:42:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33365:1:8","type":"","value":"0"},{"name":"clone_code","nodeType":"YulIdentifier","src":"33368:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"33380:4:8","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"33358:6:8"},"nodeType":"YulFunctionCall","src":"33358:27:8"},"variableNames":[{"name":"newStrategy","nodeType":"YulIdentifier","src":"33343:11:8"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1257,"isOffset":false,"isSlot":false,"src":"33207:12:8","valueSize":1},{"declaration":1254,"isOffset":false,"isSlot":false,"src":"33343:11:8","valueSize":1}],"id":1266,"nodeType":"InlineAssembly","src":"32980:415:8"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1271,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"33455:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1272,"name":"_strategist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"33463:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1273,"name":"_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"33476:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1274,"name":"_keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"33486:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1268,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"33431:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1267,"name":"BaseStrategyInitializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"33405:25:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaseStrategyInitializable_$1283_$","typeString":"type(contract BaseStrategyInitializable)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33405:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaseStrategyInitializable_$1283","typeString":"contract BaseStrategyInitializable"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":1224,"src":"33405:49:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address,address) external"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33405:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"33405:89:8"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1278,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"33517:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1277,"name":"Cloned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"33510:6:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33510:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"EmitStatement","src":"33505:24:8"}]},"documentation":null,"functionSelector":"d0511842","id":1282,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"_vault","nodeType":"VariableDeclaration","overrides":null,"scope":1282,"src":"32667:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"32667:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"_strategist","nodeType":"VariableDeclaration","overrides":null,"scope":1282,"src":"32691:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"32691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"_rewards","nodeType":"VariableDeclaration","overrides":null,"scope":1282,"src":"32720:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"32720:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"_keeper","nodeType":"VariableDeclaration","overrides":null,"scope":1282,"src":"32746:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"32746:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"32657:110:8"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"newStrategy","nodeType":"VariableDeclaration","overrides":null,"scope":1282,"src":"32786:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"32786:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"32785:21:8"},"scope":1283,"src":"32643:893:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1284,"src":"32116:1422:8"}],"src":"36:33503:8"},"bytecode":"","bytecodeSha1":"da39a3ee5e6b4b0d3255bfef95601890afd80709","compiler":{"evm_version":"istanbul","optimizer":{"enabled":true,"runs":200},"version":"0.6.12+commit.27d51765"},"contractName":"VaultAPI","coverageMap":{"branches":{},"statements":{}},"dependencies":["OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20"],"deployedBytecode":"","deployedSourceMap":"","language":"Solidity","natspec":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller\'s tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender\'s allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"creditAvailable()":{"notice":"View how much the Vault would increase this Strategy\'s borrow limit, based on its present performance (since its last report). Can be used to determine expectedReturn in your Strategy."},"debtOutstanding()":{"notice":"View how much the Vault would like to pull back from the Strategy, based on its present performance (since its last report). Can be used to determine expectedReturn in your Strategy."},"expectedReturn()":{"notice":"View how much the Vault expect this Strategy to return at the current block, based on its present performance (since its last report). Can be used to determine expectedReturn in your Strategy."},"governance()":{"notice":"View the governance address of the Vault to assert privileged functions can only be called by governance. The Strategy serves the Vault, so it is subject to governance defined by the Vault."},"guardian()":{"notice":"View the guardian address of the Vault to assert privileged functions can only be called by guardian. The Strategy serves the Vault, so it is subject to guardian defined by the Vault."},"management()":{"notice":"View the management address of the Vault to assert privileged functions can only be called by management. The Strategy serves the Vault, so it is subject to management defined by the Vault."},"report(uint256,uint256,uint256)":{"notice":"This is the main contact point where the Strategy interacts with the Vault. It is critical that this call is handled as intended by the Strategy. Therefore, this function will be called by BaseStrategy to make sure the integration is correct."},"revokeStrategy()":{"notice":"This function should only be used in the scenario where the Strategy is being retired but no migration of the positions are possible, or in the extreme scenario that the Strategy needs to be put into \\"Emergency Exit\\" mode in order for it to exit as quickly as possible. The latter scenario could be for any reason that is considered \\"critical\\" that the Strategy exits its position as fast as possible, such as a sudden change in market conditions leading to losses, or an imminent failure in an external dependency."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller\'s account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller\'s allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"offset":[530,4647],"opcodes":"","pcMap":{},"sha1":"607c9b2728b3f3cafb33d75782511f0489937122","source":"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.6.0 <0.7.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\";\\nimport \\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\";\\nimport \\"@openzeppelin/contracts/math/SafeMath.sol\\";\\n\\nstruct StrategyParams {\\n    uint256 performanceFee;\\n    uint256 activation;\\n    uint256 debtRatio;\\n    uint256 minDebtPerHarvest;\\n    uint256 maxDebtPerHarvest;\\n    uint256 lastReport;\\n    uint256 totalDebt;\\n    uint256 totalGain;\\n    uint256 totalLoss;\\n}\\n\\ninterface VaultAPI is IERC20 {\\n    function name() external view returns (string calldata);\\n\\n    function symbol() external view returns (string calldata);\\n\\n    function decimals() external view returns (uint256);\\n\\n    function apiVersion() external pure returns (string memory);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 amount,\\n        uint256 expiry,\\n        bytes calldata signature\\n    ) external returns (bool);\\n\\n    // NOTE: Vyper produces multiple signatures for a given function with \\"default\\" args\\n    function deposit(uint256 amount) external returns (uint256);\\n\\n    function deposit(uint256 amount, address recipient) external returns (uint256);\\n\\n    // NOTE: Vyper produces multiple signatures for a given function with \\"default\\" args\\n    function withdraw(uint256 maxShares) external returns (uint256);\\n\\n    function withdraw(uint256 maxShares, address recipient) external returns (uint256);\\n\\n    function token() external view returns (address);\\n\\n    function strategies(address _strategy) external view returns (StrategyParams memory);\\n\\n    function pricePerShare() external view returns (uint256);\\n\\n    function totalAssets() external view returns (uint256);\\n\\n    function depositLimit() external view returns (uint256);\\n\\n    function maxAvailableShares() external view returns (uint256);\\n\\n    /**\\n     * View how much the Vault would increase this Strategy\'s borrow limit,\\n     * based on its present performance (since its last report). Can be used to\\n     * determine expectedReturn in your Strategy.\\n     */\\n    function creditAvailable() external view returns (uint256);\\n\\n    /**\\n     * View how much the Vault would like to pull back from the Strategy,\\n     * based on its present performance (since its last report). Can be used to\\n     * determine expectedReturn in your Strategy.\\n     */\\n    function debtOutstanding() external view returns (uint256);\\n\\n    /**\\n     * View how much the Vault expect this Strategy to return at the current\\n     * block, based on its present performance (since its last report). Can be\\n     * used to determine expectedReturn in your Strategy.\\n     */\\n    function expectedReturn() external view returns (uint256);\\n\\n    /**\\n     * This is the main contact point where the Strategy interacts with the\\n     * Vault. It is critical that this call is handled as intended by the\\n     * Strategy. Therefore, this function will be called by BaseStrategy to\\n     * make sure the integration is correct.\\n     */\\n    function report(\\n        uint256 _gain,\\n        uint256 _loss,\\n        uint256 _debtPayment\\n    ) external returns (uint256);\\n\\n    /**\\n     * This function should only be used in the scenario where the Strategy is\\n     * being retired but no migration of the positions are possible, or in the\\n     * extreme scenario that the Strategy needs to be put into \\"Emergency Exit\\"\\n     * mode in order for it to exit as quickly as possible. The latter scenario\\n     * could be for any reason that is considered \\"critical\\" that the Strategy\\n     * exits its position as fast as possible, such as a sudden change in\\n     * market conditions leading to losses, or an imminent failure in an\\n     * external dependency.\\n     */\\n    function revokeStrategy() external;\\n\\n    /**\\n     * View the governance address of the Vault to assert privileged functions\\n     * can only be called by governance. The Strategy serves the Vault, so it\\n     * is subject to governance defined by the Vault.\\n     */\\n    function governance() external view returns (address);\\n\\n    /**\\n     * View the management address of the Vault to assert privileged functions\\n     * can only be called by management. The Strategy serves the Vault, so it\\n     * is subject to management defined by the Vault.\\n     */\\n    function management() external view returns (address);\\n\\n    /**\\n     * View the guardian address of the Vault to assert privileged functions\\n     * can only be called by guardian. The Strategy serves the Vault, so it\\n     * is subject to guardian defined by the Vault.\\n     */\\n    function guardian() external view returns (address);\\n}\\n\\n/**\\n * This interface is here for the keeper bot to use.\\n */\\ninterface StrategyAPI {\\n    function name() external view returns (string memory);\\n\\n    function vault() external view returns (address);\\n\\n    function want() external view returns (address);\\n\\n    function apiVersion() external pure returns (string memory);\\n\\n    function keeper() external view returns (address);\\n\\n    function isActive() external view returns (bool);\\n\\n    function delegatedAssets() external view returns (uint256);\\n\\n    function estimatedTotalAssets() external view returns (uint256);\\n\\n    function tendTrigger(uint256 callCost) external view returns (bool);\\n\\n    function tend() external;\\n\\n    function harvestTrigger(uint256 callCost) external view returns (bool);\\n\\n    function harvest() external;\\n\\n    event Harvested(uint256 profit, uint256 loss, uint256 debtPayment, uint256 debtOutstanding);\\n}\\n\\n/**\\n * @title Yearn Base Strategy\\n * @author yearn.finance\\n * @notice\\n *  BaseStrategy implements all of the required functionality to interoperate\\n *  closely with the Vault contract. This contract should be inherited and the\\n *  abstract methods implemented to adapt the Strategy to the particular needs\\n *  it has to create a return.\\n *\\n *  Of special interest is the relationship between `harvest()` and\\n *  `vault.report()\'. `harvest()` may be called simply because enough time has\\n *  elapsed since the last report, and not because any funds need to be moved\\n *  or positions adjusted. This is critical so that the Vault may maintain an\\n *  accurate picture of the Strategy\'s performance. See  `vault.report()`,\\n *  `harvest()`, and `harvestTrigger()` for further details.\\n */\\nabstract contract BaseStrategy {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n    string public metadataURI;\\n\\n    /**\\n     * @notice\\n     *  Used to track which version of `StrategyAPI` this Strategy\\n     *  implements.\\n     * @dev The Strategy\'s version must match the Vault\'s `API_VERSION`.\\n     * @return A string which holds the current API version of this contract.\\n     */\\n    function apiVersion() public pure returns (string memory) {\\n        return \\"0.3.2\\";\\n    }\\n\\n    /**\\n     * @notice This Strategy\'s name.\\n     * @dev\\n     *  You can use this field to manage the \\"version\\" of this Strategy, e.g.\\n     *  `StrategySomethingOrOtherV1`. However, \\"API Version\\" is managed by\\n     *  `apiVersion()` function above.\\n     * @return This Strategy\'s name.\\n     */\\n    function name() external virtual view returns (string memory);\\n\\n    /**\\n     * @notice\\n     *  The amount (priced in want) of the total assets managed by this strategy should not count\\n     *  towards Yearn\'s TVL calculations.\\n     * @dev\\n     *  You can override this field to set it to a non-zero value if some of the assets of this\\n     *  Strategy is somehow delegated inside another part of of Yearn\'s ecosystem e.g. another Vault.\\n     *  Note that this value must be strictly less than or equal to the amount provided by\\n     *  `estimatedTotalAssets()` below, as the TVL calc will be total assets minus delegated assets.\\n     * @return\\n     *  The amount of assets this strategy manages that should not be included in Yearn\'s Total Value\\n     *  Locked (TVL) calculation across it\'s ecosystem.\\n     */\\n    function delegatedAssets() external virtual view returns (uint256) {\\n        return 0;\\n    }\\n\\n    VaultAPI public vault;\\n    address public strategist;\\n    address public rewards;\\n    address public keeper;\\n\\n    IERC20 public want;\\n\\n    // So indexers can keep track of this\\n    event Harvested(uint256 profit, uint256 loss, uint256 debtPayment, uint256 debtOutstanding);\\n\\n    event UpdatedStrategist(address newStrategist);\\n\\n    event UpdatedKeeper(address newKeeper);\\n\\n    event UpdatedRewards(address rewards);\\n\\n    event UpdatedMinReportDelay(uint256 delay);\\n\\n    event UpdatedMaxReportDelay(uint256 delay);\\n\\n    event UpdatedProfitFactor(uint256 profitFactor);\\n\\n    event UpdatedDebtThreshold(uint256 debtThreshold);\\n\\n    event EmergencyExitEnabled();\\n\\n    event UpdatedMetadataURI(string metadataURI);\\n\\n    // The minimum number of seconds between harvest calls. See\\n    // `setMinReportDelay()` for more details.\\n    uint256 public minReportDelay = 0;\\n\\n    // The maximum number of seconds between harvest calls. See\\n    // `setMaxReportDelay()` for more details.\\n    uint256 public maxReportDelay = 86400; // ~ once a day\\n\\n    // The minimum multiple that `callCost` must be above the credit/profit to\\n    // be \\"justifiable\\". See `setProfitFactor()` for more details.\\n    uint256 public profitFactor = 100;\\n\\n    // Use this to adjust the threshold at which running a debt causes a\\n    // harvest trigger. See `setDebtThreshold()` for more details.\\n    uint256 public debtThreshold = 0;\\n\\n    // See note on `setEmergencyExit()`.\\n    bool public emergencyExit;\\n\\n    // modifiers\\n    modifier onlyAuthorized() {\\n        require(msg.sender == strategist || msg.sender == governance(), \\"!authorized\\");\\n        _;\\n    }\\n\\n    modifier onlyStrategist() {\\n        require(msg.sender == strategist, \\"!strategist\\");\\n        _;\\n    }\\n\\n    modifier onlyGovernance() {\\n        require(msg.sender == governance(), \\"!authorized\\");\\n        _;\\n    }\\n\\n    modifier onlyKeepers() {\\n        require(\\n            msg.sender == keeper ||\\n                msg.sender == strategist ||\\n                msg.sender == governance() ||\\n                msg.sender == vault.guardian() ||\\n                msg.sender == vault.management(),\\n            \\"!authorized\\"\\n        );\\n        _;\\n    }\\n\\n    constructor(address _vault) public {\\n        _initialize(_vault, msg.sender, msg.sender, msg.sender);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Initializes the Strategy, this is called only once, when the\\n     *  contract is deployed.\\n     * @dev `_vault` should implement `VaultAPI`.\\n     * @param _vault The address of the Vault responsible for this Strategy.\\n     */\\n    function _initialize(\\n        address _vault,\\n        address _strategist,\\n        address _rewards,\\n        address _keeper\\n    ) internal {\\n        require(address(want) == address(0), \\"Strategy already initialized\\");\\n\\n        vault = VaultAPI(_vault);\\n        want = IERC20(vault.token());\\n        want.safeApprove(_vault, uint256(-1)); // Give Vault unlimited access (might save gas)\\n        strategist = _strategist;\\n        rewards = _rewards;\\n        keeper = _keeper;\\n        vault.approve(rewards, uint256(-1)); // Allow rewards to be pulled\\n    }\\n\\n    /**\\n     * @notice\\n     *  Used to change `strategist`.\\n     *\\n     *  This may only be called by governance or the existing strategist.\\n     * @param _strategist The new address to assign as `strategist`.\\n     */\\n    function setStrategist(address _strategist) external onlyAuthorized {\\n        require(_strategist != address(0));\\n        strategist = _strategist;\\n        emit UpdatedStrategist(_strategist);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Used to change `keeper`.\\n     *\\n     *  `keeper` is the only address that may call `tend()` or `harvest()`,\\n     *  other than `governance()` or `strategist`. However, unlike\\n     *  `governance()` or `strategist`, `keeper` may *only* call `tend()`\\n     *  and `harvest()`, and no other authorized functions, following the\\n     *  principle of least privilege.\\n     *\\n     *  This may only be called by governance or the strategist.\\n     * @param _keeper The new address to assign as `keeper`.\\n     */\\n    function setKeeper(address _keeper) external onlyAuthorized {\\n        require(_keeper != address(0));\\n        keeper = _keeper;\\n        emit UpdatedKeeper(_keeper);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Used to change `rewards`. EOA or smart contract which has the permission\\n     *  to pull rewards from the vault.\\n     *\\n     *  This may only be called by the strategist.\\n     * @param _rewards The address to use for pulling rewards.\\n     */\\n    function setRewards(address _rewards) external onlyStrategist {\\n        require(_rewards != address(0));\\n        vault.approve(rewards, 0);\\n        rewards = _rewards;\\n        vault.approve(rewards, uint256(-1));\\n        emit UpdatedRewards(_rewards);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Used to change `minReportDelay`. `minReportDelay` is the minimum number\\n     *  of blocks that should pass for `harvest()` to be called.\\n     *\\n     *  For external keepers (such as the Keep3r network), this is the minimum\\n     *  time between jobs to wait. (see `harvestTrigger()`\\n     *  for more details.)\\n     *\\n     *  This may only be called by governance or the strategist.\\n     * @param _delay The minimum number of seconds to wait between harvests.\\n     */\\n    function setMinReportDelay(uint256 _delay) external onlyAuthorized {\\n        minReportDelay = _delay;\\n        emit UpdatedMinReportDelay(_delay);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Used to change `maxReportDelay`. `maxReportDelay` is the maximum number\\n     *  of blocks that should pass for `harvest()` to be called.\\n     *\\n     *  For external keepers (such as the Keep3r network), this is the maximum\\n     *  time between jobs to wait. (see `harvestTrigger()`\\n     *  for more details.)\\n     *\\n     *  This may only be called by governance or the strategist.\\n     * @param _delay The maximum number of seconds to wait between harvests.\\n     */\\n    function setMaxReportDelay(uint256 _delay) external onlyAuthorized {\\n        maxReportDelay = _delay;\\n        emit UpdatedMaxReportDelay(_delay);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Used to change `profitFactor`. `profitFactor` is used to determine\\n     *  if it\'s worthwhile to harvest, given gas costs. (See `harvestTrigger()`\\n     *  for more details.)\\n     *\\n     *  This may only be called by governance or the strategist.\\n     * @param _profitFactor A ratio to multiply anticipated\\n     * `harvest()` gas cost against.\\n     */\\n    function setProfitFactor(uint256 _profitFactor) external onlyAuthorized {\\n        profitFactor = _profitFactor;\\n        emit UpdatedProfitFactor(_profitFactor);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Sets how far the Strategy can go into loss without a harvest and report\\n     *  being required.\\n     *\\n     *  By default this is 0, meaning any losses would cause a harvest which\\n     *  will subsequently report the loss to the Vault for tracking. (See\\n     *  `harvestTrigger()` for more details.)\\n     *\\n     *  This may only be called by governance or the strategist.\\n     * @param _debtThreshold How big of a loss this Strategy may carry without\\n     * being required to report to the Vault.\\n     */\\n    function setDebtThreshold(uint256 _debtThreshold) external onlyAuthorized {\\n        debtThreshold = _debtThreshold;\\n        emit UpdatedDebtThreshold(_debtThreshold);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Used to change `metadataURI`. `metadataURI` is used to store the URI\\n     * of the file describing the strategy.\\n     *\\n     *  This may only be called by governance or the strategist.\\n     * @param _metadataURI The URI that describe the strategy.\\n     */\\n    function setMetadataURI(string calldata _metadataURI) external onlyAuthorized {\\n        metadataURI = _metadataURI;\\n        emit UpdatedMetadataURI(_metadataURI);\\n    }\\n\\n    /**\\n     * Resolve governance address from Vault contract, used to make assertions\\n     * on protected functions in the Strategy.\\n     */\\n    function governance() internal view returns (address) {\\n        return vault.governance();\\n    }\\n\\n    /**\\n     * @notice\\n     *  Provide an accurate estimate for the total amount of assets\\n     *  (principle + return) that this Strategy is currently managing,\\n     *  denominated in terms of `want` tokens.\\n     *\\n     *  This total should be \\"realizable\\" e.g. the total value that could\\n     *  *actually* be obtained from this Strategy if it were to divest its\\n     *  entire position based on current on-chain conditions.\\n     * @dev\\n     *  Care must be taken in using this function, since it relies on external\\n     *  systems, which could be manipulated by the attacker to give an inflated\\n     *  (or reduced) value produced by this function, based on current on-chain\\n     *  conditions (e.g. this function is possible to influence through\\n     *  flashloan attacks, oracle manipulations, or other DeFi attack\\n     *  mechanisms).\\n     *\\n     *  It is up to governance to use this function to correctly order this\\n     *  Strategy relative to its peers in the withdrawal queue to minimize\\n     *  losses for the Vault based on sudden withdrawals. This value should be\\n     *  higher than the total debt of the Strategy and higher than its expected\\n     *  value to be \\"safe\\".\\n     * @return The estimated total assets in this Strategy.\\n     */\\n    function estimatedTotalAssets() public virtual view returns (uint256);\\n\\n    /*\\n     * @notice\\n     *  Provide an indication of whether this strategy is currently \\"active\\"\\n     *  in that it is managing an active position, or will manage a position in\\n     *  the future. This should correlate to `harvest()` activity, so that Harvest\\n     *  events can be tracked externally by indexing agents.\\n     * @return True if the strategy is actively managing a position.\\n     */\\n    function isActive() public view returns (bool) {\\n        return vault.strategies(address(this)).debtRatio > 0 || estimatedTotalAssets() > 0;\\n    }\\n\\n    /**\\n     * Perform any Strategy unwinding or other calls necessary to capture the\\n     * \\"free return\\" this Strategy has generated since the last time its core\\n     * position(s) were adjusted. Examples include unwrapping extra rewards.\\n     * This call is only used during \\"normal operation\\" of a Strategy, and\\n     * should be optimized to minimize losses as much as possible.\\n     *\\n     * This method returns any realized profits and/or realized losses\\n     * incurred, and should return the total amounts of profits/losses/debt\\n     * payments (in `want` tokens) for the Vault\'s accounting (e.g.\\n     * `want.balanceOf(this) >= _debtPayment + _profit - _loss`).\\n     *\\n     * `_debtOutstanding` will be 0 if the Strategy is not past the configured\\n     * debt limit, otherwise its value will be how far past the debt limit\\n     * the Strategy is. The Strategy\'s debt limit is configured in the Vault.\\n     *\\n     * NOTE: `_debtPayment` should be less than or equal to `_debtOutstanding`.\\n     *       It is okay for it to be less than `_debtOutstanding`, as that\\n     *       should only used as a guide for how much is left to pay back.\\n     *       Payments should be made to minimize loss from slippage, debt,\\n     *       withdrawal fees, etc.\\n     *\\n     * See `vault.debtOutstanding()`.\\n     */\\n    function prepareReturn(uint256 _debtOutstanding)\\n        internal\\n        virtual\\n        returns (\\n            uint256 _profit,\\n            uint256 _loss,\\n            uint256 _debtPayment\\n        );\\n\\n    /**\\n     * Perform any adjustments to the core position(s) of this Strategy given\\n     * what change the Vault made in the \\"investable capital\\" available to the\\n     * Strategy. Note that all \\"free capital\\" in the Strategy after the report\\n     * was made is available for reinvestment. Also note that this number\\n     * could be 0, and you should handle that scenario accordingly.\\n     *\\n     * See comments regarding `_debtOutstanding` on `prepareReturn()`.\\n     */\\n    function adjustPosition(uint256 _debtOutstanding) internal virtual;\\n\\n    /**\\n     * Liquidate up to `_amountNeeded` of `want` of this strategy\'s positions,\\n     * irregardless of slippage. Any excess will be re-invested with `adjustPosition()`.\\n     * This function should return the amount of `want` tokens made available by the\\n     * liquidation. If there is a difference between them, `_loss` indicates whether the\\n     * difference is due to a realized loss, or if there is some other sitution at play\\n     * (e.g. locked funds) where the amount made available is less than what is needed.\\n     * This function is used during emergency exit instead of `prepareReturn()` to\\n     * liquidate all of the Strategy\'s positions back to the Vault.\\n     *\\n     * NOTE: The invariant `_liquidatedAmount + _loss <= _amountNeeded` should always be maintained\\n     */\\n    function liquidatePosition(uint256 _amountNeeded) internal virtual returns (uint256 _liquidatedAmount, uint256 _loss);\\n\\n    /**\\n     * @notice\\n     *  Provide a signal to the keeper that `tend()` should be called. The\\n     *  keeper will provide the estimated gas cost that they would pay to call\\n     *  `tend()`, and this function should use that estimate to make a\\n     *  determination if calling it is \\"worth it\\" for the keeper. This is not\\n     *  the only consideration into issuing this trigger, for example if the\\n     *  position would be negatively affected if `tend()` is not called\\n     *  shortly, then this can return `true` even if the keeper might be\\n     *  \\"at a loss\\" (keepers are always reimbursed by Yearn).\\n     * @dev\\n     *  `callCost` must be priced in terms of `want`.\\n     *\\n     *  This call and `harvestTrigger()` should never return `true` at the same\\n     *  time.\\n     * @param callCost The keeper\'s estimated cast cost to call `tend()`.\\n     * @return `true` if `tend()` should be called, `false` otherwise.\\n     */\\n    function tendTrigger(uint256 callCost) public virtual view returns (bool) {\\n        // We usually don\'t need tend, but if there are positions that need\\n        // active maintainence, overriding this function is how you would\\n        // signal for that.\\n        return false;\\n    }\\n\\n    /**\\n     * @notice\\n     *  Adjust the Strategy\'s position. The purpose of tending isn\'t to\\n     *  realize gains, but to maximize yield by reinvesting any returns.\\n     *\\n     *  See comments on `adjustPosition()`.\\n     *\\n     *  This may only be called by governance, the strategist, or the keeper.\\n     */\\n    function tend() external onlyKeepers {\\n        // Don\'t take profits with this call, but adjust for better gains\\n        adjustPosition(vault.debtOutstanding());\\n    }\\n\\n    /**\\n     * @notice\\n     *  Provide a signal to the keeper that `harvest()` should be called. The\\n     *  keeper will provide the estimated gas cost that they would pay to call\\n     *  `harvest()`, and this function should use that estimate to make a\\n     *  determination if calling it is \\"worth it\\" for the keeper. This is not\\n     *  the only consideration into issuing this trigger, for example if the\\n     *  position would be negatively affected if `harvest()` is not called\\n     *  shortly, then this can return `true` even if the keeper might be \\"at a\\n     *  loss\\" (keepers are always reimbursed by Yearn).\\n     * @dev\\n     *  `callCost` must be priced in terms of `want`.\\n     *\\n     *  This call and `tendTrigger` should never return `true` at the\\n     *  same time.\\n     *\\n     *  See `min/maxReportDelay`, `profitFactor`, `debtThreshold` to adjust the\\n     *  strategist-controlled parameters that will influence whether this call\\n     *  returns `true` or not. These parameters will be used in conjunction\\n     *  with the parameters reported to the Vault (see `params`) to determine\\n     *  if calling `harvest()` is merited.\\n     *\\n     *  It is expected that an external system will check `harvestTrigger()`.\\n     *  This could be a script run off a desktop or cloud bot (e.g.\\n     *  https://github.com/iearn-finance/yearn-vaults/blob/master/scripts/keep.py),\\n     *  or via an integration with the Keep3r network (e.g.\\n     *  https://github.com/Macarse/GenericKeep3rV2/blob/master/contracts/keep3r/GenericKeep3rV2.sol).\\n     * @param callCost The keeper\'s estimated cast cost to call `harvest()`.\\n     * @return `true` if `harvest()` should be called, `false` otherwise.\\n     */\\n    function harvestTrigger(uint256 callCost) public virtual view returns (bool) {\\n        StrategyParams memory params = vault.strategies(address(this));\\n\\n        // Should not trigger if Strategy is not activated\\n        if (params.activation == 0) return false;\\n\\n        // Should not trigger if we haven\'t waited long enough since previous harvest\\n        if (block.timestamp.sub(params.lastReport) < minReportDelay) return false;\\n\\n        // Should trigger if hasn\'t been called in a while\\n        if (block.timestamp.sub(params.lastReport) >= maxReportDelay) return true;\\n\\n        // If some amount is owed, pay it back\\n        // NOTE: Since debt is based on deposits, it makes sense to guard against large\\n        //       changes to the value from triggering a harvest directly through user\\n        //       behavior. This should ensure reasonable resistance to manipulation\\n        //       from user-initiated withdrawals as the outstanding debt fluctuates.\\n        uint256 outstanding = vault.debtOutstanding();\\n        if (outstanding > debtThreshold) return true;\\n\\n        // Check for profits and losses\\n        uint256 total = estimatedTotalAssets();\\n        // Trigger if we have a loss to report\\n        if (total.add(debtThreshold) < params.totalDebt) return true;\\n\\n        uint256 profit = 0;\\n        if (total > params.totalDebt) profit = total.sub(params.totalDebt); // We\'ve earned a profit!\\n\\n        // Otherwise, only trigger if it \\"makes sense\\" economically (gas cost\\n        // is <N% of value moved)\\n        uint256 credit = vault.creditAvailable();\\n        return (profitFactor.mul(callCost) < credit.add(profit));\\n    }\\n\\n    /**\\n     * @notice\\n     *  Harvests the Strategy, recognizing any profits or losses and adjusting\\n     *  the Strategy\'s position.\\n     *\\n     *  In the rare case the Strategy is in emergency shutdown, this will exit\\n     *  the Strategy\'s position.\\n     *\\n     *  This may only be called by governance, the strategist, or the keeper.\\n     * @dev\\n     *  When `harvest()` is called, the Strategy reports to the Vault (via\\n     *  `vault.report()`), so in some cases `harvest()` must be called in order\\n     *  to take in profits, to borrow newly available funds from the Vault, or\\n     *  otherwise adjust its position. In other cases `harvest()` must be\\n     *  called to report to the Vault on the Strategy\'s position, especially if\\n     *  any losses have occurred.\\n     */\\n    function harvest() external onlyKeepers {\\n        uint256 profit = 0;\\n        uint256 loss = 0;\\n        uint256 debtOutstanding = vault.debtOutstanding();\\n        uint256 debtPayment = 0;\\n        if (emergencyExit) {\\n            // Free up as much capital as possible\\n            uint256 totalAssets = estimatedTotalAssets();\\n            // NOTE: use the larger of total assets or debt outstanding to book losses properly\\n            (debtPayment, loss) = liquidatePosition(totalAssets > debtOutstanding ? totalAssets : debtOutstanding);\\n            // NOTE: take up any remainder here as profit\\n            if (debtPayment > debtOutstanding) {\\n                profit = debtPayment.sub(debtOutstanding);\\n                debtPayment = debtOutstanding;\\n            }\\n        } else {\\n            // Free up returns for Vault to pull\\n            (profit, loss, debtPayment) = prepareReturn(debtOutstanding);\\n        }\\n\\n        // Allow Vault to take up to the \\"harvested\\" balance of this contract,\\n        // which is the amount it has earned since the last time it reported to\\n        // the Vault.\\n        debtOutstanding = vault.report(profit, loss, debtPayment);\\n\\n        // Check if free returns are left, and re-invest them\\n        adjustPosition(debtOutstanding);\\n\\n        emit Harvested(profit, loss, debtPayment, debtOutstanding);\\n    }\\n\\n    /**\\n     * @notice\\n     *  Withdraws `_amountNeeded` to `vault`.\\n     *\\n     *  This may only be called by the Vault.\\n     * @param _amountNeeded How much `want` to withdraw.\\n     * @return _loss Any realized losses\\n     */\\n    function withdraw(uint256 _amountNeeded) external returns (uint256 _loss) {\\n        require(msg.sender == address(vault), \\"!vault\\");\\n        // Liquidate as much as possible to `want`, up to `_amountNeeded`\\n        uint256 amountFreed;\\n        (amountFreed, _loss) = liquidatePosition(_amountNeeded);\\n        // Send it directly back (NOTE: Using `msg.sender` saves some gas here)\\n        want.safeTransfer(msg.sender, amountFreed);\\n        // NOTE: Reinvest anything leftover on next `tend`/`harvest`\\n    }\\n\\n    /**\\n     * Do anything necessary to prepare this Strategy for migration, such as\\n     * transferring any reserve or LP tokens, CDPs, or other tokens or stores of\\n     * value.\\n     */\\n    function prepareMigration(address _newStrategy) internal virtual;\\n\\n    /**\\n     * @notice\\n     *  Transfers all `want` from this Strategy to `_newStrategy`.\\n     *\\n     *  This may only be called by governance or the Vault.\\n     * @dev\\n     *  The new Strategy\'s Vault must be the same as this Strategy\'s Vault.\\n     * @param _newStrategy The Strategy to migrate to.\\n     */\\n    function migrate(address _newStrategy) external {\\n        require(msg.sender == address(vault) || msg.sender == governance());\\n        require(BaseStrategy(_newStrategy).vault() == vault);\\n        prepareMigration(_newStrategy);\\n        want.safeTransfer(_newStrategy, want.balanceOf(address(this)));\\n    }\\n\\n    /**\\n     * @notice\\n     *  Activates emergency exit. Once activated, the Strategy will exit its\\n     *  position upon the next harvest, depositing all funds into the Vault as\\n     *  quickly as is reasonable given on-chain conditions.\\n     *\\n     *  This may only be called by governance or the strategist.\\n     * @dev\\n     *  See `vault.setEmergencyShutdown()` and `harvest()` for further details.\\n     */\\n    function setEmergencyExit() external onlyAuthorized {\\n        emergencyExit = true;\\n        vault.revokeStrategy();\\n\\n        emit EmergencyExitEnabled();\\n    }\\n\\n    /**\\n     * Override this to add all tokens/tokenized positions this contract\\n     * manages on a *persistent* basis (e.g. not just for swapping back to\\n     * want ephemerally).\\n     *\\n     * NOTE: Do *not* include `want`, already included in `sweep` below.\\n     *\\n     * Example:\\n     *\\n     *    function protectedTokens() internal override view returns (address[] memory) {\\n     *      address[] memory protected = new address[](3);\\n     *      protected[0] = tokenA;\\n     *      protected[1] = tokenB;\\n     *      protected[2] = tokenC;\\n     *      return protected;\\n     *    }\\n     */\\n    function protectedTokens() internal virtual view returns (address[] memory);\\n\\n    /**\\n     * @notice\\n     *  Removes tokens from this Strategy that are not the type of tokens\\n     *  managed by this Strategy. This may be used in case of accidentally\\n     *  sending the wrong kind of token to this Strategy.\\n     *\\n     *  Tokens will be sent to `governance()`.\\n     *\\n     *  This will fail if an attempt is made to sweep `want`, or any tokens\\n     *  that are protected by this Strategy.\\n     *\\n     *  This may only be called by governance.\\n     * @dev\\n     *  Implement `protectedTokens()` to specify any additional tokens that\\n     *  should be protected from sweeping in addition to `want`.\\n     * @param _token The token to transfer out of this vault.\\n     */\\n    function sweep(address _token) external onlyGovernance {\\n        require(_token != address(want), \\"!want\\");\\n        require(_token != address(vault), \\"!shares\\");\\n\\n        address[] memory _protectedTokens = protectedTokens();\\n        for (uint256 i; i < _protectedTokens.length; i++) require(_token != _protectedTokens[i], \\"!protected\\");\\n\\n        IERC20(_token).safeTransfer(governance(), IERC20(_token).balanceOf(address(this)));\\n    }\\n}\\n\\nabstract contract BaseStrategyInitializable is BaseStrategy {\\n    event Cloned(address indexed clone);\\n\\n    constructor(address _vault) public BaseStrategy(_vault) {}\\n\\n    function initialize(\\n        address _vault,\\n        address _strategist,\\n        address _rewards,\\n        address _keeper\\n    ) external {\\n        _initialize(_vault, _strategist, _rewards, _keeper);\\n    }\\n\\n    function clone(address _vault) external returns (address) {\\n        return this.clone(_vault, msg.sender, msg.sender, msg.sender);\\n    }\\n\\n    function clone(\\n        address _vault,\\n        address _strategist,\\n        address _rewards,\\n        address _keeper\\n    ) external returns (address newStrategy) {\\n        // Copied from https://github.com/optionality/clone-factory/blob/master/contracts/CloneFactory.sol\\n        bytes20 addressBytes = bytes20(address(this));\\n\\n        assembly {\\n            // EIP-1167 bytecode\\n            let clone_code := mload(0x40)\\n            mstore(clone_code, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(clone_code, 0x14), addressBytes)\\n            mstore(add(clone_code, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            newStrategy := create(0, clone_code, 0x37)\\n        }\\n\\n        BaseStrategyInitializable(newStrategy).initialize(_vault, _strategist, _rewards, _keeper);\\n\\n        emit Cloned(newStrategy);\\n    }\\n}\\n","sourceMap":"","sourcePath":"contracts/BaseStrategy.sol","type":"interface"}')},198:function(e,t,n){"use strict";n.r(t),t.default=["BadgerRegistry"]},219:function(e){e.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"_addressesGeneratorAddress","type":"address"},{"internalType":"address","name":"_addressesMergeHelperAddress","type":"address"},{"internalType":"address","name":"_oracleAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"addressesGeneratorAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addressesMergeHelperAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"assetAddress","type":"address"}],"name":"assetStrategies","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"apiVersion","type":"string"},{"internalType":"address","name":"strategist","type":"address"},{"internalType":"address","name":"rewards","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"keeper","type":"address"},{"internalType":"address","name":"want","type":"address"},{"internalType":"uint256","name":"wantPriceUsdc","type":"uint256"},{"internalType":"uint8","name":"wantDecimals","type":"uint8"},{"internalType":"string","name":"wantSymbol","type":"string"},{"internalType":"bool","name":"emergencyExit","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"delegatedAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssetsUsdc","type":"uint256"},{"internalType":"bool","name":"doHealthCheck","type":"bool"},{"internalType":"address","name":"healthCheckAddress","type":"address"}],"internalType":"struct StrategiesHelper.StrategyMetadata[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"assetAddress","type":"address"}],"name":"assetStrategiesAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"assetAddress","type":"address"}],"name":"assetStrategiesDelegatedBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"assetAddress","type":"address"}],"name":"assetStrategiesLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_assetsAddresses","type":"address[]"}],"name":"assetsStrategies","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"apiVersion","type":"string"},{"internalType":"address","name":"strategist","type":"address"},{"internalType":"address","name":"rewards","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"keeper","type":"address"},{"internalType":"address","name":"want","type":"address"},{"internalType":"uint256","name":"wantPriceUsdc","type":"uint256"},{"internalType":"uint8","name":"wantDecimals","type":"uint8"},{"internalType":"string","name":"wantSymbol","type":"string"},{"internalType":"bool","name":"emergencyExit","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"delegatedAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssetsUsdc","type":"uint256"},{"internalType":"bool","name":"doHealthCheck","type":"bool"},{"internalType":"address","name":"healthCheckAddress","type":"address"}],"internalType":"struct StrategiesHelper.StrategyMetadata[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"assetsStrategies","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"apiVersion","type":"string"},{"internalType":"address","name":"strategist","type":"address"},{"internalType":"address","name":"rewards","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"keeper","type":"address"},{"internalType":"address","name":"want","type":"address"},{"internalType":"uint256","name":"wantPriceUsdc","type":"uint256"},{"internalType":"uint8","name":"wantDecimals","type":"uint8"},{"internalType":"string","name":"wantSymbol","type":"string"},{"internalType":"bool","name":"emergencyExit","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"delegatedAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssetsUsdc","type":"uint256"},{"internalType":"bool","name":"doHealthCheck","type":"bool"},{"internalType":"address","name":"healthCheckAddress","type":"address"}],"internalType":"struct StrategiesHelper.StrategyMetadata[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"assetsStrategiesAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_assetsAddresses","type":"address[]"}],"name":"assetsStrategiesAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[][]","name":"filter","type":"string[][]"}],"name":"assetsStrategiesAddressesByFilter","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_strategiesAddresses","type":"address[]"},{"internalType":"string[][]","name":"filter","type":"string[][]"}],"name":"assetsStrategiesAddressesByFilter","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[][]","name":"_filter","type":"string[][]"}],"name":"assetsStrategiesByFilter","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"apiVersion","type":"string"},{"internalType":"address","name":"strategist","type":"address"},{"internalType":"address","name":"rewards","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"keeper","type":"address"},{"internalType":"address","name":"want","type":"address"},{"internalType":"uint256","name":"wantPriceUsdc","type":"uint256"},{"internalType":"uint8","name":"wantDecimals","type":"uint8"},{"internalType":"string","name":"wantSymbol","type":"string"},{"internalType":"bool","name":"emergencyExit","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"delegatedAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssetsUsdc","type":"uint256"},{"internalType":"bool","name":"doHealthCheck","type":"bool"},{"internalType":"address","name":"healthCheckAddress","type":"address"}],"internalType":"struct StrategiesHelper.StrategyMetadata[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_assetsAddresses","type":"address[]"},{"internalType":"string[][]","name":"_filter","type":"string[][]"}],"name":"assetsStrategiesByFilter","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"apiVersion","type":"string"},{"internalType":"address","name":"strategist","type":"address"},{"internalType":"address","name":"rewards","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"keeper","type":"address"},{"internalType":"address","name":"want","type":"address"},{"internalType":"uint256","name":"wantPriceUsdc","type":"uint256"},{"internalType":"uint8","name":"wantDecimals","type":"uint8"},{"internalType":"string","name":"wantSymbol","type":"string"},{"internalType":"bool","name":"emergencyExit","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"delegatedAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssetsUsdc","type":"uint256"},{"internalType":"bool","name":"doHealthCheck","type":"bool"},{"internalType":"address","name":"healthCheckAddress","type":"address"}],"internalType":"struct StrategiesHelper.StrategyMetadata[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"assetsStrategiesDelegatedBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"assetsStrategiesLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracleAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ownerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_strategiesAddresses","type":"address[]"}],"name":"strategies","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"apiVersion","type":"string"},{"internalType":"address","name":"strategist","type":"address"},{"internalType":"address","name":"rewards","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"keeper","type":"address"},{"internalType":"address","name":"want","type":"address"},{"internalType":"uint256","name":"wantPriceUsdc","type":"uint256"},{"internalType":"uint8","name":"wantDecimals","type":"uint8"},{"internalType":"string","name":"wantSymbol","type":"string"},{"internalType":"bool","name":"emergencyExit","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"delegatedAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssetsUsdc","type":"uint256"},{"internalType":"bool","name":"doHealthCheck","type":"bool"},{"internalType":"address","name":"healthCheckAddress","type":"address"}],"internalType":"struct StrategiesHelper.StrategyMetadata[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategyAddress","type":"address"}],"name":"strategy","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"apiVersion","type":"string"},{"internalType":"address","name":"strategist","type":"address"},{"internalType":"address","name":"rewards","type":"address"},{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"keeper","type":"address"},{"internalType":"address","name":"want","type":"address"},{"internalType":"uint256","name":"wantPriceUsdc","type":"uint256"},{"internalType":"uint8","name":"wantDecimals","type":"uint8"},{"internalType":"string","name":"wantSymbol","type":"string"},{"internalType":"bool","name":"emergencyExit","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"delegatedAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssets","type":"uint256"},{"internalType":"uint256","name":"estimatedTotalAssetsUsdc","type":"uint256"},{"internalType":"bool","name":"doHealthCheck","type":"bool"},{"internalType":"address","name":"healthCheckAddress","type":"address"}],"internalType":"struct StrategiesHelper.StrategyMetadata","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategyAddress","type":"address"},{"internalType":"string[][]","name":"instructions","type":"string[][]"}],"name":"strategyPassesFilter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"name":"updateSlot","outputs":[],"stateMutability":"nonpayable","type":"function"}]')},220:function(e){e.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"_managementListAddress","type":"address"},{"internalType":"address","name":"_usdcAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"tokenAliasAddress","type":"address"}],"name":"TokenAliasAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"TokenAliasRemoved","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"tokenAliasAddress","type":"address"}],"name":"addTokenAlias","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"tokenAliasAddress","type":"address"}],"internalType":"struct Oracle.TokenAlias[]","name":"_tokenAliases","type":"tuple[]"}],"name":"addTokenAliases","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"calculations","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getNormalizedValueUsdc","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"priceUsdc","type":"uint256"}],"name":"getNormalizedValueUsdc","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"getPriceUsdcRecommended","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"managementList","outputs":[{"internalType":"contract ManagementList","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"removeTokenAlias","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"calculationAddresses","type":"address[]"}],"name":"setCalculations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenAliases","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdcAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]')},221:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return i}));var a=n(34);n(291).config({path:e+"../../.env"});var i=Object(a.memoize)((function(){return{env:"production",ethereumNetwork:"homestead",infuraProjectId:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).INFURA_PROJECT_ID,alchemyKey:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).ALCHEMY_KEY||Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_ALCHEMY_KEY,fbApiKey:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_FB_API_KEY,fbAuthDomain:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_FB_AUTH_DOMAIN,fbProjectId:Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_FB_PROJECT_ID}}))}).call(this,"/")},232:function(e){e.exports=JSON.parse('{"abi":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[],"name":"EmergencyExitEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"profit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loss","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"debtPayment","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"debtOutstanding","type":"uint256"}],"name":"Harvested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"debtThreshold","type":"uint256"}],"name":"UpdatedDebtThreshold","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newKeeper","type":"address"}],"name":"UpdatedKeeper","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"delay","type":"uint256"}],"name":"UpdatedMaxReportDelay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"metadataURI","type":"string"}],"name":"UpdatedMetadataURI","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"delay","type":"uint256"}],"name":"UpdatedMinReportDelay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"profitFactor","type":"uint256"}],"name":"UpdatedProfitFactor","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"rewards","type":"address"}],"name":"UpdatedRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newStrategist","type":"address"}],"name":"UpdatedStrategist","type":"event"},{"inputs":[],"name":"apiVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"debtThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"delegatedAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyExit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"estimatedTotalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"callCost","type":"uint256"}],"name":"harvestTrigger","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"keeper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxReportDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newStrategy","type":"address"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minReportDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"profitFactor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewards","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_debtThreshold","type":"uint256"}],"name":"setDebtThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setEmergencyExit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_keeper","type":"address"}],"name":"setKeeper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_delay","type":"uint256"}],"name":"setMaxReportDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_metadataURI","type":"string"}],"name":"setMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_delay","type":"uint256"}],"name":"setMinReportDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_profitFactor","type":"uint256"}],"name":"setProfitFactor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rewards","type":"address"}],"name":"setRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_strategist","type":"address"}],"name":"setStrategist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"strategist","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"sweep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"callCost","type":"uint256"}],"name":"tendTrigger","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract VaultAPI","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"want","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amountNeeded","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"_loss","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}]}')},233:function(e){e.exports=JSON.parse('{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]}')},265:function(e,t,n){},276:function(e,t){},277:function(e,t,n){var a={"./BadgerRegistry.ts":278,"./Vault.ts":158,"./addresses.ts":179,"./contracts.ts":198};function i(e){var t=r(e);return n(t)}function r(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}i.keys=function(){return Object.keys(a)},i.resolve=r,e.exports=i,i.id=277},278:function(e,t,n){"use strict";n.r(t),t.default=[{inputs:[{internalType:"address",name:"_governance",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"author",type:"address"},{indexed:!1,internalType:"address",name:"vault",type:"address"}],name:"NewVault",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"author",type:"address"},{indexed:!1,internalType:"address",name:"vault",type:"address"}],name:"PromoteVault",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"author",type:"address"},{indexed:!1,internalType:"address",name:"vault",type:"address"}],name:"RemoveVault",type:"event"},{inputs:[{internalType:"address",name:"vault",type:"address"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"author",type:"address"}],name:"fromAuthor",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"author",type:"address"}],name:"fromAuthorVaults",outputs:[{components:[{internalType:"address",name:"at",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"pendingGovernance",type:"address"},{internalType:"address",name:"governance",type:"address"},{internalType:"address",name:"rewards",type:"address"},{internalType:"address",name:"guardian",type:"address"},{internalType:"address",name:"management",type:"address"},{components:[{internalType:"address",name:"at",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"address",name:"strategist",type:"address"},{internalType:"address",name:"rewards",type:"address"},{internalType:"address",name:"keeper",type:"address"},{internalType:"uint256",name:"performanceFee",type:"uint256"},{internalType:"uint256",name:"activation",type:"uint256"},{internalType:"uint256",name:"debtRatio",type:"uint256"},{internalType:"uint256",name:"minDebtPerHarvest",type:"uint256"},{internalType:"uint256",name:"maxDebtPerHarvest",type:"uint256"},{internalType:"uint256",name:"lastReport",type:"uint256"},{internalType:"uint256",name:"totalDebt",type:"uint256"},{internalType:"uint256",name:"totalGain",type:"uint256"},{internalType:"uint256",name:"totalLoss",type:"uint256"}],internalType:"struct BadgerRegistry.StratInfo[]",name:"strategies",type:"tuple[]"}],internalType:"struct BadgerRegistry.VaultInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"author",type:"address"}],name:"fromAuthorWithDetails",outputs:[{components:[{internalType:"address",name:"at",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"pendingGovernance",type:"address"},{internalType:"address",name:"governance",type:"address"},{internalType:"address",name:"rewards",type:"address"},{internalType:"address",name:"guardian",type:"address"},{internalType:"address",name:"management",type:"address"},{components:[{internalType:"address",name:"at",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"address",name:"strategist",type:"address"},{internalType:"address",name:"rewards",type:"address"},{internalType:"address",name:"keeper",type:"address"},{internalType:"uint256",name:"performanceFee",type:"uint256"},{internalType:"uint256",name:"activation",type:"uint256"},{internalType:"uint256",name:"debtRatio",type:"uint256"},{internalType:"uint256",name:"minDebtPerHarvest",type:"uint256"},{internalType:"uint256",name:"maxDebtPerHarvest",type:"uint256"},{internalType:"uint256",name:"lastReport",type:"uint256"},{internalType:"uint256",name:"totalDebt",type:"uint256"},{internalType:"uint256",name:"totalGain",type:"uint256"},{internalType:"uint256",name:"totalLoss",type:"uint256"}],internalType:"struct BadgerRegistry.StratInfo[]",name:"strategies",type:"tuple[]"}],internalType:"struct BadgerRegistry.VaultInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"vault",type:"address"}],name:"promote",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"vault",type:"address"}],name:"remove",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newGov",type:"address"}],name:"setGovernance",outputs:[],stateMutability:"nonpayable",type:"function"}]},315:function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),r=n(31),s=n.n(r),l=(n(265),n(10)),o=n(11),d=n(14),p=n(13),u=n(117),y=n(38),c=n(6),m=n.n(c),f=n(28),b=n(44),g=n(400),T=n(367),_=n(141),v=n(33),h=n(361),D=n(397),S=n(359),I=n(1),x=Object(S.a)({searchInput:{width:"100%",margin:"15px",backgroundColor:"white",alignContent:"center"}}),V=function(e){var t=x(),n=Object(y.g)().strategist,i=Object(y.f)(),r=Object(a.useState)(n),s=Object(v.a)(r,2),l=s[0],o=s[1],d=e.items,p=void 0===d?[]:d;return Object(I.jsxs)(h.a,{children:[Object(I.jsx)("form",{onSubmit:function(e){e.preventDefault(),i.push("/strategist/".concat(l)),console.log("test")},children:Object(I.jsx)(D.a,{className:t.searchInput,variant:"outlined",type:"search",onChange:function(e){return o(e.target.value)},value:l,placeholder:"Search by strategist"})}),p.map((function(e,t){return Object(I.jsx)(h.a,{maxWidth:"lg",children:Object(I.jsx)(Re,{vault:e},t)},t)}))]})},w=n(34),P=n.n(w),C=n(107),j=n(179),L=function(e,t,a){return new C.a(P.a.get(j.default[e],t,"0x0000000000000000000000000000000000000000"),n(277)("./".concat(t,".ts")).default,a)};var $=n(69),k={137:{name:"polygon",chainId:137,rpcUrl:"https://matic-mainnet.chainstacklabs.com"}},O=Number(Object({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).NETWORK_ID)||137,R=Object(a.createContext)({provider:void 0,networkId:O}),E=function(e){var t=e.children,n=k[O]||k[137],a=new $.a(n.rpcUrl);return Object(I.jsx)(R.Provider,{value:{provider:a,networkId:O},children:t})},N=function(){return Object(a.useContext)(R)},M=Object(a.createContext)({BadgerRegistry:void 0,contracts:{}}),A=function(e){var t=e.children,i=N(),r=i.provider,s=function(e,t){var i=Object(a.useState)(),r=Object(v.a)(i,2),s=r[0],l=r[1];return Object(a.useEffect)((function(){function a(){return(a=Object(b.a)(m.a.mark((function a(){var i,r;return m.a.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if("undefined"!==typeof t)try{i=n(198).default,r=i.reduce((function(n,a){return n[a]=L(e,a,t),n}),{}),l(r)}catch(s){console.log("ERROR LOADING CONTRACTS!!",s)}case 1:case"end":return a.stop()}}),a)})))).apply(this,arguments)}!function(){a.apply(this,arguments)}()}),[e,t]),s}(i.networkId,r);null===r||void 0===r||r.getBlockNumber().then(console.log);var l=(s||{}).BadgerRegistry;return Object(I.jsx)(M.Provider,{value:{contracts:s,BadgerRegistry:l},children:t})},q=function(){var e=Object(y.g)().strategist,t=Object(a.useContext)(M).BadgerRegistry,n=Object(g.a)(Object(b.a)(m.a.mark((function n(){var a,i;return m.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(a=e){n.next=5;break}return n.next=4,null===t||void 0===t?void 0:t.governance();case 4:a=n.sent;case 5:return n.next=7,null===t||void 0===t?void 0:t.fromAuthorWithDetails(a);case 7:return i=n.sent,n.abrupt("return",i.map((function(e){return Object(f.a)(Object(f.a)({},e),{},{address:e[0],strategies:e.strategies.map((function(e){return Object(f.a)(Object(f.a)({},e),{},{address:e[0]})}))})})));case 9:case"end":return n.stop()}}),n)}))),[t,e]);return console.log(n),n.loading?Object(I.jsxs)("div",{style:{textAlign:"center",marginTop:"100px"},children:[Object(I.jsx)(T.a,{style:{color:"#fff"}}),Object(I.jsx)(_.a,{style:{color:"#fff"},children:"Loading vaults.."})]}):Object(I.jsx)(V,{items:n.value})},F=n(401),B=n(407),U=n(372),H=n(374),z=n(121),K=n.n(z),W=n(406),Y=n(375),G=n(377),J=n(373),Q=n(396),Z=n(376),X=n(369),ee=(n(113),n(89)),te=n(17),ne=n(57),ae=n.n(ne),ie=n(186),re=n(187),se=(n(219),n(220)),le=n(221),oe=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"homestead",t=Object(le.a)(),n=(t.infuraProjectId,t.alchemyKey);return console.log(n),new ee.providers.AlchemyProvider(e,n)},de="0.3.2",pe=new Map;pe.set("0.3.0",ie.abi),pe.set("0.3.1",ie.abi),pe.set(de,re.abi),pe.set("0.3.3",re.abi);var ue=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:de;return pe.get(e)||pe.get(de)},ye=function(){var e=oe();return new C.a(Te,se,e)},ce=function(e,t){return new ne.BigNumber(e.toString()).div(new ne.BigNumber(10).pow(t))},me=function(e){return e.substring(0,6)+"..."+e.substring(e.length-4,e.length)},fe=function(e,t){if(e===ee.constants.MaxUint256.toString())return" \u221e";var n=te.a.from(10).pow(t);return new ne.BigNumber(e).div(n.toString()).toFormat(5).replace(".00000","")},be=function(e){return(parseInt(e,10)/100).toString()},ge=function(e){var t={};return e.callsReturnContext.forEach((function(e){var n=e.methodName,a=e.returnValues;a&&a.length>0&&("string"===typeof a[0]||"boolean"===typeof a[0]||"number"===typeof a[0]?t[n]=a[0]:"BigNumber"===Object(w.get)(a[0],"type")&&(t[n]=te.a.from(a[0]).toString()))})),t},Te="0x83d95e0D5f402511dB06817Aff3f9eA88224B030",_e=n(224),ve=n.n(_e),he=n(405),De=n(370),Se=n(368),Ie=function(e){var t=e.address,n=e.transactionHash,i=e.dark,r=e.internalHref,s=Object(a.useState)(!1),l=Object(v.a)(s,2),o=l[0],d=l[1];Object(a.useEffect)((function(){var e=setTimeout((function(){d(!1)}),1e3);return function(){return clearTimeout(e)}}),[o]);var p=Object(S.a)((function(e){return Object(F.a)({button:{margin:e.spacing(1)},iconCall:{backgroundColor:"#fff",borderRadius:3,padding:2,boxShadow:"0 3px 6px 0 rgba(0,0,0,0.2)"},address:{fontSize:"14px",opacity:"0.7",color:i?"#fff":"black"},copiedText:{color:i?"#fff":"black"}})}))(),u="",y="";t&&(u=t,y=me(t)),n&&(u=n,y=me(n));var c=Object(I.jsx)(he.a,{title:u,"aria-label":"Etherscan",children:Object(I.jsx)("span",{children:y})}),m=n?"https://etherscan.io/tx/".concat(u):"https://etherscan.io/address/".concat(u);return Object(I.jsxs)("span",{children:[Object(I.jsx)("span",{className:p.address,children:r?Object(I.jsxs)(Se.a,{color:"inherit",href:r,children:[Object(I.jsx)(Q.a,{smUp:!0,children:"".concat(c)}),Object(I.jsx)(Q.a,{xsDown:!0,children:u})]}):Object(I.jsxs)(I.Fragment,{children:[Object(I.jsx)(Q.a,{smUp:!0,children:c}),Object(I.jsx)(Q.a,{xsDown:!0,children:u})]})}),Object(I.jsx)(he.a,{title:"Copy to clipboard","aria-label":"Clipboard",children:Object(I.jsxs)(X.a,{onClick:function(e){return function(e){e.stopPropagation(),navigator.clipboard.writeText(u),d(!0)}(e)},children:[Object(I.jsx)(De.a,{fontSize:"inherit",className:p.iconCall}),o?Object(I.jsx)("span",{className:p.copiedText,children:" Copied"}):""]})}),Object(I.jsx)(he.a,{title:"View on Etherscan","aria-label":"Etherscan",children:Object(I.jsx)(X.a,{href:m,target:"_blank",children:Object(I.jsx)(ve.a,{fontSize:"inherit",className:p.iconCall})})})]})},xe=n(86),Ve=n.n(xe),we=n(225);n.n(we)()(xe);var Pe=function(e){return xe.unix(parseInt(e)).isValid()},Ce=function(e){return Pe(e)?xe.unix(parseInt(e)).utc().toISOString():""},je=function(e){return Pe(e)?Ve.a(parseInt(e)).utc().toISOString():""},Le=function(e){if(!Pe(e))return"";var t=xe.unix(parseInt(e)).utc(),n=xe.utc();return xe.duration(n.diff(t)).format("d [days] hh [hours] m [minutes]",{trim:!1})},$e=function(e){var t=e.vault,n=e.expand,a=void 0===n||n,i=t.configOK,r=Object(S.a)((function(t){return Object(F.a)({root:{},rootGrid:{width:"100%"},address:{fontSize:"14px",opacity:"0.6",color:"#ffff"},text:{color:e.dark?"#ffff":"black",fontFamily:"Open Sans",lineHeight:"27px",fontSize:"18px",margin:10},iconCall:{backgroundColor:"white",borderRadius:3,padding:2},list:{background:"transparent",border:"none"},accordion:{background:e.dark?i?"#040e20":"#0552aa":"",borderRadius:5,margin:10},link:{color:e.dark?"#ffff":"black","&:hover":{fontWeight:600}},heading:{fontSize:t.typography.pxToRem(15),fontWeight:t.typography.fontWeightRegular},expandIcon:{color:e.dark?"#ffff":"black"},paper:{padding:t.spacing(2),textAlign:"center",color:t.palette.text.secondary}})}))();return Object(I.jsxs)("div",{className:r.root,children:[Object(I.jsx)(_.a,{variant:"body2",className:r.text,component:"p",children:"Strategies"}),t.strategies&&t.strategies.map((function(n,i){return Object(I.jsxs)(B.a,{className:r.accordion,defaultExpanded:a,children:[Object(I.jsx)(U.a,{expandIcon:Object(I.jsx)(K.a,{className:r.expandIcon}),"aria-controls":"panel1a-content",id:"panel1a-header",children:Object(I.jsx)(J.a,{className:r.rootGrid,children:Object(I.jsx)(J.a,{item:!0,md:12,xs:12,children:Object(I.jsxs)(J.a,{container:!0,spacing:1,direction:"row",justify:"center",alignItems:"center",children:[Object(I.jsx)(J.a,{item:!0,md:4,xs:12,children:Object(I.jsx)(_.a,{variant:"subtitle1",gutterBottom:!0,children:Object(I.jsxs)("a",{className:r.link,href:"/vault/".concat(t.address,"/strategy/").concat(n.address),rel:"noreferrer",children:[Object(I.jsx)(Q.a,{smUp:!0,children:n.name.length>20?(s=n.name,s.substring(0,20)+"..."):n.name}),Object(I.jsx)(Q.a,{xsDown:!0,children:n.name})]})})}),Object(I.jsxs)(Q.a,{xsDown:!0,children:[" ",Object(I.jsx)(J.a,{item:!0,md:8,xs:6,children:Object(I.jsx)(Ie,{address:n.address,dark:e.dark})})]})]})})})}),Object(I.jsx)(H.a,{children:Object(I.jsxs)(J.a,{container:!0,spacing:1,children:[Object(I.jsxs)(Q.a,{smUp:!0,children:[" ",Object(I.jsx)(_.a,{children:Object(I.jsx)(Ie,{address:n.address,dark:e.dark})})]}),Object(I.jsxs)(J.a,{item:!0,xs:12,md:3,className:r.link,children:["Time Since Last Report:",Object(I.jsx)("br",{})," ",Le(n.lastReport.toString())]}),Object(I.jsxs)(J.a,{item:!0,xs:12,md:2,className:r.link,children:["Total debt",Object(I.jsx)("br",{}),t&&fe(n.totalDebt.toString(),0)]}),Object(I.jsxs)(J.a,{item:!0,xs:12,md:2,className:r.link,children:["Debt ratio",Object(I.jsx)("br",{}),be(n.debtRatio.toString())," %"]})]})})]},i);var s}))]})},ke=n(12),Oe=Object(ke.a)((function(e){return{tooltip:{backgroundColor:"#f5f5f9",color:"rgba(0, 0, 0, 0.87)",maxWidth:700,fontSize:e.typography.pxToRem(12),border:"1px solid #dadde9"}}}))(he.a),Re=function(e){var t=e.vault,n=t.configOK,i=Object(S.a)((function(e){return Object(F.a)({root:{width:"100%",margin:"5px",borderRadius:"5px"},link:{color:"#fff",textDecoration:"none","&:hover":{textDecoration:"underline"}},textVault:{fontFamily:"Open Sans",lineHeight:"27px",fontSize:"18px","&:hover":{fontSize:19}},warningIcon:{borderRadius:3,padding:1,boxShadow:"0px 0px 0px 0 rgba(0,0,0,0.2)"},expandIcon:{color:"#fff"},list:{padding:0},alert:{background:"transparent",color:"red",fontWeight:400},divider:{background:"#1d265f",opacity:"0.3",marginLeft:"10px",marginRight:"10px"},accordion:{background:n?"#0a1d3f":"#006ae3",borderRadius:"8px",color:"#ffffff",marginTop:10},heading:{fontSize:e.typography.pxToRem(15),fontWeight:e.typography.fontWeightRegular},paper:{padding:e.spacing(2)}})}))();return Object(I.jsx)("div",{className:i.root,children:Object(I.jsxs)(B.a,{className:i.accordion,children:[Object(I.jsx)(U.a,{expandIcon:Object(I.jsx)(K.a,{className:i.expandIcon}),"aria-controls":"panel1a-content",id:"panel1a-header",children:Object(I.jsx)(J.a,{container:!0,className:i.root,spacing:2,children:Object(I.jsx)(J.a,{item:!0,md:12,xs:12,children:Object(I.jsxs)(J.a,{container:!0,spacing:1,direction:"row",justify:"center",alignItems:"center",children:[Object(I.jsx)(J.a,{item:!0,md:1,xs:3,children:t&&t.icon?Object(I.jsx)(Y.a,{children:Object(I.jsx)(W.a,{alt:t.icon,src:t.icon})}):Object(I.jsx)(Y.a,{children:Object(I.jsx)(W.a,{style:{color:"transparent"},children:"."})})}),Object(I.jsxs)(J.a,{item:!0,md:5,xs:9,children:[t.configErrors?Object(I.jsx)(Oe,{title:Object(I.jsxs)(a.Fragment,{children:[Object(I.jsxs)(_.a,{color:"inherit",children:[t.configErrors.length," ","warning(s) found"]}),t.configErrors.map((function(e,t){return Object(I.jsxs)("em",{children:[e,Object(I.jsx)("br",{})]},t)}))]}),children:Object(I.jsx)(Z.a,{className:i.warningIcon})}):"",Object(I.jsx)("a",{className:i.link,href:"/vault/".concat(t.address),rel:"noreferrer",children:Object(I.jsxs)("span",{className:i.textVault,children:[" ",t.name," "," (".concat(t.strategies.length,"  strats)")]})})]}),Object(I.jsxs)(Q.a,{xsDown:!0,children:[" ",Object(I.jsxs)(J.a,{item:!0,md:6,xs:9,children:[" ",Object(I.jsx)(Ie,{address:t.address,dark:!0})]})]})]})})})}),Object(I.jsx)(Q.a,{smUp:!0,children:Object(I.jsx)(J.a,{container:!0,className:i.root,spacing:2,children:Object(I.jsxs)(J.a,{item:!0,md:8,xs:12,children:[" ",Object(I.jsx)(Ie,{address:t.address,dark:!0})]})})}),Object(I.jsx)(G.a,{className:i.divider}),Object(I.jsx)(H.a,{children:Object(I.jsx)(h.a,{children:Object(I.jsx)($e,{vault:t,dark:!0})})})]})})},Ee=n(51),Ne=n(236),Me=n(384),Ae=n(385),qe=n(395),Fe=n(386),Be=n(394),Ue=n(166),He=n(158),ze=["apiVersion","management","governance","guardian","depositLimit","totalAssets","debtRatio","totalDebt","lastReport","rewards","symbol","name","managementFee","performanceFee","emergencyShutdown"],Ke=function(){var e=Object(b.a)(m.a.mark((function e(t,n){var a,i,r;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t&&ee.utils.isAddress(t)){e.next=2;break}throw new Error("Error: expect a valid vault address");case 2:return a=new Ue.a({ethersProvider:n}),new C.a(t,He.default,n),i=[{reference:t,contractAddress:t,abi:He.default,calls:ze.map((function(e){return{reference:e,methodName:e,methodParameters:[]}}))}],e.next=7,a.call(i);case 7:return r=e.sent,e.abrupt("return",Object(f.a)(Object(f.a)({},ge(r.results[t])),{},{address:t,strategies:[]}));case 9:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),We=Object(w.memoize)(Ke),Ye=n(399),Ge=Object(S.a)((function(e){return Object(F.a)({crumbs:{maxWidth:"80%",marginLeft:"auto",marginRight:"auto",marginBottom:15,marginTop:15,color:"#fff"},text:{color:"#ffff",fontWeight:"bolder"}})})),Je=function(e){var t,n=e.vaultId,a=e.strategyId,i=Ge();return void 0!==a&&(t=Object(I.jsx)(Se.a,{color:"inherit",href:"/vault/".concat(n.toLowerCase(),"/strategy/").concat(a.toLowerCase()),children:Object(I.jsxs)(_.a,{className:i.text,children:[Object(I.jsx)(Q.a,{smUp:!0,children:"".concat(me(a.toLowerCase()))}),Object(I.jsx)(Q.a,{xsDown:!0,children:a.toLowerCase()})]})})),Object(I.jsxs)(Ye.a,{className:i.crumbs,children:[Object(I.jsx)(Se.a,{color:"inherit",href:"/",children:"vaults"}),Object(I.jsxs)(Se.a,{color:"inherit",href:"/vault/".concat(n.toLowerCase()),children:[Object(I.jsx)(Q.a,{smUp:!0,children:"".concat(me(n.toLowerCase()))}),Object(I.jsx)(Q.a,{xsDown:!0,children:n.toLowerCase()})]}),t]})},Qe=n(181),Ze=n.n(Qe),Xe=n(227),et=n.n(Xe),tt=["performanceFee","activation","debtRatio","rateLimit","lastReport","totalDebt","totalGain","totalLoss"],nt=["performanceFee","activation","debtRatio","minDebtPerHarvest","maxDebtPerHarvest","lastReport","totalDebt","totalGain","totalLoss"],at=new Map;at.set("0.3.0",tt),at.set("0.3.1",tt),at.set("0.3.2",nt),at.set("0.3.3",nt),at.set("0.3.3.Edited",tt);var it=function(e){var t=e.strategies.map((function(e){var t=e.name,n=e.params;return console.log("debtratio",n.debtRatio.toString()),{name:t,y:Number((parseInt(n.debtRatio.toString(),10)/100).toFixed(2))}})),n=parseInt(e.debtUsage)/100;n<100&&t.push({name:"Not Allocated",y:Number((100-n).toFixed(2))});var a=Object(w.sortBy)(t,["y"]);return a[a.length-1].sliced=!0,a[a.length-1].selected=!0,a},rt=function(e,t){var n={};return e.callsReturnContext.forEach((function(e){var a=e.methodName,i=e.returnValues;if("strategies"===a&&i&&i.length>0){var r=at.get(t)||nt;i.forEach((function(e,t){n[r[t]]=te.a.from(e).toString()}))}})),function(e){if(e.activation&&Pe(e.activation)&&(e.activation=Ce(e.activation)),e.lastReport&&Pe(e.lastReport)){var t=e.lastReport;e.lastReport=Ce(t),e.lastReportText=Le(t)}return e}(n)},st=function(e){var t=e.vault,n={chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1,type:"pie"},title:{text:"".concat(t.name," Debt Allocation")},tooltip:{pointFormat:"{series.name}: <b>{point.percentage:.1f}%</b>"},accessibility:{point:{valueSuffix:"%"}},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"<b>{point.name}</b>: {point.percentage:.2f} %"}}},series:[{name:"Strategies",colorByPoint:!0,data:it(t)}]};return Object(I.jsx)("div",{children:Object(I.jsx)(et.a,{highcharts:Ze.a,options:n})})},lt=n(24),ot=n.n(lt),dt=n(383),pt=n(381),ut=n(382),yt=n(404),ct="0xfeb4acf3df3cdea7399794d0869ef76a6efaff52",mt="0x846e211e8ba920b353fb717631c015cf04061cc9",ft="0x16388463d60FFE0661Cf7F1f31a7D658aC790ff7",bt="0x93a62da5a14c80f265dabc077fcee437b1a0efde",gt=new Map;gt.set(ct.toLowerCase(),"ychad.eth"),gt.set(mt.toLowerCase(),"dev.ychad.eth"),gt.set(ft.toLowerCase(),"brain.ychad.eth"),gt.set(bt.toLowerCase(),"treasury.ychad.eth");var Tt=function(e){return gt.has(e.toLowerCase())?gt.get(e.toLowerCase()):e},_t=(new Set(["0.3.0","0.3.1"]),n(379)),vt=n(378),ht=n(238),Dt=Object(S.a)({table:{minWidth:650}}),St=function(e){var t=Dt();return Object(I.jsx)(vt.a,{component:ht.a,children:Object(I.jsx)(_t.a,{className:t.table,"aria-label":"simple table",children:e.children})})},It=n(380),xt=Object(ke.a)((function(e){return Object(F.a)({root:{height:10,borderRadius:5},colorPrimary:{backgroundColor:e.palette.grey["light"===e.palette.type?200:700]},bar:{borderRadius:5,backgroundColor:"#1a90ff"}})}))(It.a),Vt=Object(S.a)({root:{flexGrow:1}}),wt=function(e){var t=Vt(),n=e.vault,a=100*(n&&n.depositLimit>0?n.totalAssets/n.depositLimit:1),i=a?parseInt(a.toFixed(0)):0;return Object(I.jsx)("div",{className:t.root,children:Object(I.jsxs)(Be.a,{display:"flex",alignItems:"center",children:[Object(I.jsx)(Be.a,{width:"100%",mr:1,children:Object(I.jsx)(xt,{variant:"determinate",value:i})}),Object(I.jsx)(_.a,{variant:"body2",color:"textSecondary",children:"".concat(i,"%")})]})})},Pt=function(e){var t,n,a=e.vault,r=a.apiVersion,s=a.emergencyShutdown?Object(I.jsx)(yt.a,{label:"Emergency",clickable:!0,style:{color:"#fff",backgroundColor:"#ff6c6c"}}):Object(I.jsx)(yt.a,{label:"ok",clickable:!0,style:{color:"#fff",backgroundColor:"rgba(1,201,147,1)"}}),l=Tt(a.rewards),o=Tt(a.governance),d=Tt(a.management),p=Tt(a.guardian),u=fe(a.totalAssets,0)+" "+a.symbol,y=fe(a.totalDebt,0)+" "+a.symbol,c=fe((t=a.totalAssets,n=a.totalDebt,te.a.from(t).sub(n).toString()),0)+" "+a.symbol,m=Object(I.jsxs)(_.a,{variant:"body2",color:"textSecondary",children:["Deposit limit :",fe(a.depositLimit,0)+" "+a.symbol]}),f=be(a.managementFee),b=be(a.performanceFee),g=be(a.debtUsage),T=be(a.debtRatio),v=Le(a.lastReport),h=a.configErrors&&a.configErrors.map((function(e){return Object(I.jsx)("div",{style:{color:"#ff6c6c"},children:e},e)}));return Object(I.jsx)(i.a.Fragment,{children:Object(I.jsx)(St,{children:Object(I.jsxs)(pt.a,{children:[Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["API Version:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:r})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:r})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Emergency shut down:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:s})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:s})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Governance:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:o})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:o})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Management:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:d})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:d})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Guardian:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:p})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:p})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Rewards:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:l})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:l})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Assets:",Object(I.jsxs)(ot.a,{query:"(max-device-width: 1224px)",children:["Total asset:",u,Object(I.jsx)(wt,{vault:a}),m]})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsxs)(dt.a,{children:["Total asset:",u,Object(I.jsx)(wt,{vault:a}),m]})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Management fee:",Object(I.jsxs)(ot.a,{query:"(max-device-width: 1224px)",children:[f,"%"]})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsxs)(dt.a,{children:[f,"%"]})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Performance fee:",Object(I.jsxs)(ot.a,{query:"(max-device-width: 1224px)",children:[b,"%"]})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsxs)(dt.a,{children:[b,"%"]})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Time Since Last Report:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:v})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:v})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Total Debt:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:y})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:y})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["(Total Asset - Total Debt):",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:c})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:c})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Total Debt Ratio:",Object(I.jsxs)(ot.a,{query:"(max-device-width: 1224px)",children:[T,"%"]})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsxs)(dt.a,{children:[T,"%"]})})]}),Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:["Debt Usage:",Object(I.jsxs)(ot.a,{query:"(max-device-width: 1224px)",children:[g,"%"]})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsxs)(dt.a,{children:[g,"%"]})})]}),a&&!1===a.configOK?Object(I.jsxs)(ut.a,{style:{border:"2px solid #ff6c6c"},children:[Object(I.jsxs)(dt.a,{children:["Config Warnings:",Object(I.jsx)(ot.a,{query:"(max-device-width: 1224px)",children:h})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsx)(dt.a,{children:h})})]}):null]})})})},Ct=n(228),jt=function(e){return Object(I.jsxs)(Ct.a,{children:[Object(I.jsx)("meta",{charSet:"utf-8"}),Object(I.jsx)("title",{children:e.title})]})};function Lt(e){var t=e.children,n=e.value,a=e.index,i=Object(Ne.a)(e,["children","value","index"]);return Object(I.jsx)("div",Object(f.a)(Object(f.a)({role:"tabpanel",hidden:n!==a,id:"scrollable-auto-tabpanel-".concat(a),"aria-labelledby":"scrollable-auto-tab-".concat(a)},i),{},{children:n===a&&Object(I.jsx)(Be.a,{p:3,children:Object(I.jsx)(_.a,{children:t})})}))}function $t(e){return{id:"scrollable-auto-tab-".concat(e),"aria-controls":"scrollable-auto-tabpanel-".concat(e)}}var kt=function(){var e=N().provider,t=Object(y.g)().vaultId,n=i.a.useState(0),a=Object(v.a)(n,2),r=a[0],s=a[1],l=Object(g.a)(Object(b.a)(m.a.mark((function n(){return m.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(e){n.next=2;break}return n.abrupt("return");case 2:return n.next=4,We(t,e);case 4:return n.abrupt("return",n.sent);case 5:case"end":return n.stop()}}),n)}))),[t]),o=l.value,d=l.loading,p=Object(S.a)((function(e){var t;return{root:(t={},Object(Ee.a)(t,e.breakpoints.down("sm"),{maxWidth:"100%"}),Object(Ee.a)(t,e.breakpoints.up("md"),{maxWidth:"80%"}),Object(Ee.a)(t,e.breakpoints.up("lg"),{maxWidth:"80%"}),Object(Ee.a)(t,"marginLeft","auto"),Object(Ee.a)(t,"marginRight","auto"),Object(Ee.a)(t,"border",(null===o||void 0===o?void 0:o.configOK)?"":"5px solid #ff6c6c"),t),crumbs:{maxWidth:"80%",marginLeft:"auto",marginRight:"auto",marginBottom:15,marginTop:15,color:"#fff"},text:{color:"#ffff",fontWeight:"bolder"},row:{background:"#0a1d3f"},gridContainer:{flexGrow:1},media:{height:0,paddingTop:"56.25%"},expand:{transform:"rotate(0deg)",marginLeft:"auto",transition:e.transitions.create("transform",{duration:e.transitions.duration.shortest})},expandOpen:{transform:"rotate(180deg)"}}}))();return Object(I.jsxs)(i.a.Fragment,{children:[Object(I.jsx)(jt,{title:null===o||void 0===o?void 0:o.name}),Object(I.jsx)(Je,{vaultId:t}),Object(I.jsx)(Me.a,{className:p.root,children:d?Object(I.jsxs)("div",{style:{textAlign:"center",marginTop:"100px"},children:[Object(I.jsx)(T.a,{}),Object(I.jsx)(_.a,{children:"Loading vault.."})]}):Object(I.jsxs)(i.a.Fragment,{children:[Object(I.jsx)(Ae.a,{avatar:Object(I.jsx)(W.a,{src:null===o||void 0===o?void 0:o.icon,"aria-label":"recipe"}),title:null===o||void 0===o?void 0:o.name,subheader:Object(I.jsx)(Ie,{address:null===o||void 0===o?void 0:o.address})}),Object(I.jsxs)(qe.a,{value:r,onChange:function(e,t){s(t)},indicatorColor:"primary",textColor:"primary",variant:"scrollable",scrollButtons:"auto","aria-label":"scrollable auto tabs example",children:[Object(I.jsx)(Fe.a,Object(f.a)({label:"Details"},$t(0))),Object(I.jsx)(Fe.a,Object(f.a)({label:"Allocation"},$t(1))),Object(I.jsx)(Fe.a,Object(f.a)({label:"Strategies"},$t(2)))]}),Object(I.jsx)(Lt,{value:r,index:0,children:o&&Object(I.jsx)(Pt,{vault:o})}),Object(I.jsx)(Lt,{value:r,index:1,children:(null===o||void 0===o?void 0:o.strategies.length)&&Object(I.jsx)("div",{children:Object(I.jsx)(st,{vault:o})})}),Object(I.jsx)(Lt,{value:r,index:2,children:(null===o||void 0===o?void 0:o.strategies.length)&&Object(I.jsx)("div",{children:Object(I.jsx)($e,{vault:o,dark:!1})})})]})})]})},Ot=n(387),Rt=n(388),Et=n(319),Nt=Object(S.a)((function(e){return Object(F.a)({menuButton:{marginRight:e.spacing(2)},title:{flexGrow:1,fontFamily:"open sans",FontSize:"16px",fontWeight:400,lineHeight:"24px",fontColor:"rgb(255, 255, 255)"},logoYearnWatch:{height:"64px"}})})),Mt=function(){var e=Nt();return Object(I.jsx)(Ot.a,{position:"static",style:{background:"transparent",boxShadow:"none"},children:Object(I.jsx)(Rt.a,{children:Object(I.jsx)(Et.a,{edge:"start",className:e.menuButton,color:"inherit","aria-label":"menu",href:"/",children:"Badger Watch"})})})},At=n(389),qt=function(e){var t=e.data;return Object(I.jsx)(At.a,{children:Object(I.jsx)(St,{children:Object(I.jsx)(pt.a,{children:t.map((function(e,t){var n=e.render;return void 0!==n&&n?e.value:Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:[e.key,Object(I.jsxs)(ot.a,{query:"(max-device-width: 1224px)",children:[Object(I.jsx)("br",{}),e.value]})," "]}),Object(I.jsxs)(ot.a,{query:"(min-device-width: 1224px)",children:[" ",Object(I.jsx)(dt.a,{children:e.value})]})]},t)}))})})})},Ft=n(390),Bt=(n(231),function(){var e=Object(b.a)(m.a.mark((function e(t){var n,a;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=ye(),e.next=4,n.getPriceUsdcRecommended(t.address);case 4:return a=e.sent,e.abrupt("return",ce(a,6));case 8:return e.prev=8,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",new ae.a(0));case 12:case"end":return e.stop()}}),e,null,[[0,8]])})));return function(t){return e.apply(this,arguments)}}()),Ut=function(){var e=Object(b.a)(m.a.mark((function e(t,n){var a,i;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,a=ye(),e.next=4,a["getNormalizedValueUsdc(address,uint256)"](t.address,n.toString());case 4:return i=e.sent,e.abrupt("return",ce(i,6));case 8:return e.prev=8,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",new ae.a(0));case 12:case"end":return e.stop()}}),e,null,[[0,8]])})));return function(t,n){return e.apply(this,arguments)}}(),Ht=Object(S.a)({helpIcon:{verticalAlign:"middle"}}),zt=function(e){var t=Object(a.useState)(),n=Object(v.a)(t,2),i=n[0],r=n[1],s=Object(a.useState)(),l=Object(v.a)(s,2),o=l[0],d=l[1],p=e.label,u=void 0===p?"Token Price (USD):":p,y=e.loadingLabel,c=void 0===y?"Getting ".concat(e.token.symbol,"/USDC price..."):y,m=Ht();if(Object(a.useEffect)((function(){"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"===e.token.address.toLowerCase()?(d(new ae.a(1)),r(ce(e.amount.toString(),6))):(Bt(e.token).then((function(e){d(e)})),Ut(e.token,e.amount.toString()).then((function(e){r(e)})))}),[]),!i||!o)return Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:[u,Object(I.jsxs)(ot.a,{query:"(max-device-width: 1224px)",children:[Object(I.jsx)(T.a,{color:"inherit",size:"0.6rem"})," ",c]})]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsxs)(dt.a,{children:[Object(I.jsx)(T.a,{color:"inherit",size:"0.6rem"})," ",c]})})]});var f=Object(I.jsx)(Oe,{title:Object(I.jsxs)(a.Fragment,{children:[Object(I.jsx)(_.a,{color:"inherit",children:"Token Unit Price"}),"1 ".concat(e.token.symbol," ~= ").concat(null===o||void 0===o?void 0:o.toFixed(4)," USDC")]}),children:Object(I.jsx)(Ft.a,{fontSize:"small",className:m.helpIcon})});return Object(I.jsxs)(ut.a,{children:[Object(I.jsxs)(dt.a,{children:[u,Object(I.jsxs)(ot.a,{query:"(max-device-width: 1224px)",children:[" ",Object(I.jsx)("br",{}),i?fe(null===i||void 0===i?void 0:i.toFixed(2),2):"-"," ","USD"]})," "]}),Object(I.jsx)(ot.a,{query:"(min-device-width: 1224px)",children:Object(I.jsxs)(dt.a,{children:[i?"".concat(fe(null===i||void 0===i?void 0:i.toFixed(2),0)," USD"):"-"," ",f]})})]})},Kt=function(e){var t=e.strategy,n=t?t.apiVersion:"",a=t?t.params.activation:"",i=t?t.params.lastReportText:"",r=t&&!1===t.emergencyExit?Object(I.jsx)(yt.a,{label:"ok",clickable:!0,style:{color:"#fff",backgroundColor:"rgba(1,201,147,1)"}}):Object(I.jsx)(yt.a,{label:"Emergency",clickable:!0,style:{color:"#fff",backgroundColor:"#ff6c6c"}}),s=t&&!0===t.isActive?Object(I.jsx)(yt.a,{label:"true",clickable:!0,style:{color:"#fff",backgroundColor:"rgba(1,201,147,1)"}}):Object(I.jsx)(yt.a,{label:"false",clickable:!0,style:{color:"#fff",backgroundColor:"#ff6c6c"}}),l=t&&t.estimatedTotalAssets?fe(t.estimatedTotalAssets.toString(),t.token.decimals):"",o=t?fe(t.creditAvailable.toString(),t.token.decimals):"",d=t?fe(t.debtOutstanding.toString(),t.token.decimals):"",p=t?be(t.params.debtRatio.toString()):"",u=t?fe(t.params.totalDebt.toString(),t.token.decimals):"",y=t?fe(t.params.totalGain.toString(),t.token.decimals):"",c=t?fe(t.params.totalLoss.toString(),t.token.decimals):"",m=t?fe(t.expectedReturn.toString(),t.token.decimals):"",f=t?be(t.params.performanceFee.toString()):"",b=t&&t.params.rateLimit?fe(t.params.rateLimit.toString(),t.token.decimals):"N/A",g=t&&t.params.minDebtPerHarvest?fe(t.params.minDebtPerHarvest.toString(),t.token.decimals):"N/A",T=t&&t.params.maxDebtPerHarvest?fe(t.params.maxDebtPerHarvest.toString(),t.token.decimals):"N/A",_=t?Object(I.jsx)(Ie,{address:t.keeper}):"",v=t?Object(I.jsx)(Ie,{address:t.rewards}):"",h=t?Object(I.jsx)(Ie,{address:t.strategist}):"",D=t?Object(I.jsx)(Ie,{internalHref:"/vault/".concat(t.vault.toLowerCase()),address:t.vault}):"",S=[{key:"API Version:",value:n},{key:" Activation Date",value:a},{key:" Time Since Last Harvest:",value:i},{key:" Emergency exit:",value:r},{key:" Active:",value:s},{key:" Total Estimated Assets:",value:l},{key:" Total Estimated Assets (USD):",value:Object(I.jsx)(zt,{label:"Total Estimated Assets (USD):",token:t.token,amount:t.estimatedTotalAssets}),render:!0},{key:" Credit Available:",value:o},{key:" Debt Outstanding:",value:d},{key:" Debt Ratio:",value:p},{key:" Total Debt:",value:u},{key:" Total Gain:",value:y},{key:" Total Loss:",value:c},{key:" Expected Return:",value:m},{key:" Performance Fee:",value:f},{key:" Rate Limit:",value:b},{key:" Min Debt Per Harvest:",value:g},{key:" Max Debt Per Harvest:",value:T},{key:" Keeper:",value:_},{key:" Rewards:",value:v},{key:" Strategist:",value:h},{key:" Vault:",value:D}];return Object(I.jsx)(qt,{data:S},t.address)},Wt=n(232),Yt=n(233),Gt=["apiVersion","emergencyExit","isActive","keeper","rewards","strategist","name","vault","estimatedTotalAssets","delegatedAssets","want"],Jt=["debtOutstanding","creditAvailable","expectedReturn","strategies"],Qt=["decimals","symbol","name"],Zt=["0x2923a58c1831205c854dbea001809b194fdb3fa5"],Xt=function(e){return e.map((function(e){var t=Gt.filter((function(t){return!(Zt.includes(e.toLowerCase())&&"estimatedTotalAssets"===t)})).map((function(e){return{reference:e,methodName:e,methodParameters:[]}}));return{reference:e,contractAddress:e,abi:Wt.abi,calls:t}}))},en=function(e,t,n){return e.map((function(e){var a=t.get(e),i=n.get(a),r=ue(i.apiVersion),s=Jt.map((function(t){return{reference:"strategies"===t?"strategyParams":t,methodName:t,methodParameters:[e]}}));return{reference:"".concat(e,"_").concat(a),contractAddress:a,abi:r,calls:s}}))},tn=function(e,t,n){return e.map((function(e){var a=t.get(e),i=n.get(a),r=Qt.map((function(e){return{reference:e,methodName:e,methodParameters:[]}}));return{reference:"".concat(i.want),contractAddress:i.want,abi:Yt.abi,calls:r}}))},nn=function(e,t,n,a){return e.map((function(e){var i=t.results[e],r=t.results["".concat(e,"_").concat(a.get(e))],s=ge(i),l=Object(w.omit)(ge(r),"strategies"),o=rt(r,s.apiVersion),d=t.results[s.want];if(d){var p=ge(d);s.token=Object(f.a)(Object(f.a)({},p),{},{address:s.want})}var u=n.find((function(t){return t.address.toLowerCase()===e.toLowerCase()})),y=void 0===u?-1:u.queueIndex;return Object(f.a)(Object(f.a)(Object(f.a)({},l),s),{},{address:e,params:o,withdrawalQueueIndex:y})}))},an=function(){var e=Object(b.a)(m.a.mark((function e(t){var n,a,i,r,s,l,o,d,p,u,y;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(0!==t.length){e.next=2;break}throw new Error("Error: expect a valid strategy address");case 2:return t.forEach((function(e){if(!e||!ee.utils.isAddress(e))throw new Error("Error: expect a valid strategy address")})),n=oe(),a=new Ue.a({ethersProvider:n}),i=Xt(t),e.next=8,a.call(i);case 8:return r=e.sent,s=new Map,l=new Map,t.forEach((function(e){var t=r.results[e],n=ge(t);l.set(e,n.vault),s.set(n.vault,{apiVersion:n.apiVersion,want:n.want})})),o=en(t,l,s),d=tn(t,l,s),e.next=16,a.call(o.concat(d));case 16:return p=e.sent,u={results:Object(f.a)(Object(f.a)({},r.results),p.results),blockNumber:p.blockNumber},y=nn(t,u,[],l),e.abrupt("return",y);case 20:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),rn=Object(w.memoize)(an),sn=n(100),ln=n.n(sn),on=(ln.a.get,ln.a.all,ln.a.post,ln.a.put,ln.a.spread,function(){var e=Object(b.a)(m.a.mark((function e(t){var n,a;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=[],e.prev=1,e.next=4,ln.a.get("".concat("https://vaults.finance").concat(t));case 4:return a=e.sent,e.abrupt("return",a);case 8:e.prev=8,e.t0=e.catch(1),console.log("error");case 11:return e.abrupt("return",n.data);case 12:case"end":return e.stop()}}),e,null,[[1,8]])})));return function(t){return e.apply(this,arguments)}}()),dn=(Object(w.memoize)(on),function(){var e=Object(b.a)(m.a.mark((function e(t){var n;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,ln.a.post("".concat("https://api.thegraph.com/subgraphs/name/salazarguille/yearn-vaults-v2-subgraph-mainnet"),{query:t});case 3:if(!((n=e.sent).data.errors&&n.data.errors.length>0)){e.next=6;break}throw Error(n.data.errors[0].message||"Error: retrieving data from subgraph");case 6:return e.abrupt("return",{data:n.data.data});case 9:throw e.prev=9,e.t0=e.catch(0),console.error("subgraph error",e.t0),e.t0;case 13:case"end":return e.stop()}}),e,null,[[0,9]])})));return function(t){return e.apply(this,arguments)}}()),pn=Object(w.memoize)(dn),un=function(e){return'\n{\n    strategies(where: {\n      id: "'.concat(e,'"\n    }) {\n        id\n        reports(first: 10, orderBy: timestamp, orderDirection: desc)  {\n          id\n          transaction {\n            hash\n          }\n          timestamp\n          gain\n          loss\n          totalGain\n          totalLoss\n          totalDebt\n          debtLimit\n          debtAdded\n          debtPaid\n          results {\n            startTimestamp\n            endTimestamp\n            duration\n            apr\n            durationPr\n            currentReport {\n                id\n                gain\n                loss\n                totalDebt\n                totalGain\n                totalLoss\n                timestamp\n                transaction { hash blockNumber }\n            }\n            previousReport {\n                id\n                gain\n                loss\n                totalDebt\n                totalGain\n                totalLoss\n                timestamp\n                transaction { hash blockNumber }\n            }\n          }\n        }\n      }\n  }\n')},yn=function(){var e=Object(b.a)(m.a.mark((function e(t){var n,a,i,r;return m.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t&&""!==t){e.next=2;break}throw new Error("Error: getReportsForStrategy expected valid strategy address");case 2:return e.next=4,pn(un(t.toLowerCase()));case 4:return n=e.sent,a=Object(w.get)(n,"data.strategies[0].reports",[]),i=["results","transaction","id"],r=a.map((function(e){var t;if(e.results.length>0){var n=e.results[0];t=Object(f.a)(Object(f.a)({},n),{},{currentReport:Object(f.a)(Object(f.a)({},n.currentReport),{},{timestamp:n.currentReport.timestamp}),previousReport:Object(f.a)(Object(f.a)({},n.previousReport),{},{timestamp:n.previousReport.timestamp}),startTimestamp:parseInt(n.startTimestamp),endTimestamp:parseInt(n.endTimestamp),duration:parseInt(n.duration),durationPr:parseFloat(n.durationPr),apr:100*parseFloat(n.apr)})}return Object(f.a)(Object(f.a)({},Object(w.omit)(e,i)),{},{profit:e.gain,loss:e.loss,totalProfit:e.totalGain,transactionHash:e.transaction.hash,results:t})})),e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),cn=Object(w.memoize)(yn),mn=n(391),fn=Object(S.a)({subText:{marginBottom:10},grid:{marginBottom:10,borderBottom:"1px solid #e8e8e8"}}),bn=function(e){var t=e.xs,n=void 0===t?12:t,i=e.visible,r=void 0===i||i,s=fn();if(!r)return Object(I.jsx)(I.Fragment,{});var l=e.helpTitle&&e.helpDescription?Object(I.jsx)(Oe,{title:Object(I.jsxs)(a.Fragment,{children:[Object(I.jsx)(_.a,{color:"inherit",children:e.helpTitle}),e.helpDescription]}),children:Object(I.jsx)(mn.a,{fontSize:"small"})}):"";return Object(I.jsx)(J.a,{item:!0,xs:n,md:e.md,className:s.grid,children:Object(I.jsxs)(_.a,{className:s.subText,children:[" ",e.label,": ",l,Object(I.jsx)("br",{})," ",e.value]})})},gn=Object(S.a)((function(e){return Object(F.a)({root:{width:"100%"},heading:{fontSize:e.typography.pxToRem(15),fontWeight:e.typography.fontWeightRegular},accordion:{padding:10,margin:15},text:{margin:15,textAlign:"center",color:"black",fontSize:21},grid:{marginBottom:10,borderBottom:"1px solid #e8e8e8"},subText:{marginBottom:10}})})),Tn=function(e){var t=e.data,n=e.tokenDecimals,i=gn(),r=Object(w.compact)(t.map((function(e){var t;return null===(t=e.results)||void 0===t?void 0:t.apr}))),s=0===r.length?0:Object(w.mean)(r),l=0===r.length?0:function(e){if(e.length>=1)return(e=e.sort((function(e,t){return e-t}))).length%2===0?(e[e.length/2-1]+e[e.length/2])/2:e[(e.length-1)/2];throw new Error("expected a filled array")}(r),o="Average APR: ".concat(s.toFixed(2),"%"),d="Median APR: ".concat(l.toFixed(2),"%"),p=0===t.length?"No Reports Loaded":"Last ".concat(t.length," reports.");return Object(I.jsxs)("div",{className:i.root,children:[Object(I.jsxs)(_.a,{className:i.text,children:[p," ",o," / ",d]}),t.map((function(e,t){var r,s,l;return Object(I.jsxs)(B.a,{className:i.accordion,children:[Object(I.jsx)(U.a,{expandIcon:Object(I.jsx)(K.a,{}),"aria-controls":"panel1a-content",id:"panel1a-header",children:Object(I.jsxs)(J.a,{container:!0,spacing:1,children:[Object(I.jsx)(J.a,{item:!0,xs:12,md:9,children:Object(I.jsx)(_.a,{className:i.heading,children:Object(I.jsx)(Ie,{transactionHash:e.transactionHash})})}),Object(I.jsx)(J.a,{item:!0,xs:12,md:3,children:Object(I.jsxs)(_.a,{className:i.subText,children:[" ","Timestamp:",Object(I.jsx)("br",{}),je(e.timestamp)]})})]})}),Object(I.jsx)(H.a,{children:Object(I.jsxs)(J.a,{container:!0,spacing:1,children:[Object(I.jsxs)(J.a,{container:!0,spacing:1,children:[Object(I.jsx)(bn,{label:"Debt Added",value:fe(e.debtAdded,n),md:3}),Object(I.jsx)(bn,{label:"Debt Limit",value:fe(e.debtLimit,n),md:3}),Object(I.jsx)(bn,{label:"Debt Paid",value:fe(e.debtPaid,n),md:3}),Object(I.jsx)(bn,{label:"Total Debt",value:fe(e.totalDebt,n),md:3})]}),Object(I.jsxs)(J.a,{container:!0,spacing:1,children:[Object(I.jsx)(bn,{label:"Profit",value:fe(e.profit,n),md:3}),Object(I.jsx)(bn,{label:"Total Profit",value:fe(e.totalProfit,n),md:3}),Object(I.jsx)(bn,{label:"Loss",value:fe(e.loss,n),md:3}),Object(I.jsx)(bn,{label:"Total Loss",value:fe(e.totalLoss,n),md:3})]}),Object(I.jsxs)(J.a,{container:!0,spacing:1,children:[Object(I.jsx)(bn,{label:"Duration (hours)",value:(l=e.results?e.results.duration:0,Number((l/36e5).toFixed(2))).toFixed(2),visible:void 0!==e.results,md:3,helpTitle:"What is it?",helpDescription:Object(I.jsx)(a.Fragment,{children:"The duration is the time elapsed between this report and the previous."})}),Object(I.jsx)(bn,{label:"Duration PR",value:"".concat(null===(r=e.results)||void 0===r?void 0:r.durationPr.toFixed(6)," %"),visible:void 0!==e.results,md:3,helpTitle:"What is the duration PR?",helpDescription:Object(I.jsxs)(a.Fragment,{children:["It is the percentage rate for the given duration period:",Object(I.jsx)("pre",{children:"profit = current.totalGain - previous.totalGain"}),Object(I.jsx)("pre",{children:"durationPR = profit / current.totalDebt"})]})}),Object(I.jsx)(bn,{label:"APR",value:"".concat(null===(s=e.results)||void 0===s?void 0:s.apr.toFixed(2)," %"),visible:void 0!==e.results,md:3,helpTitle:"How is APR calculated?",helpDescription:Object(I.jsxs)(a.Fragment,{children:["It compares the current and previous reports applying this formula:",Object(I.jsx)("pre",{children:"profit = current.totalGain - previous.totalGain"}),Object(I.jsx)("pre",{children:"timeBetweenReports (days) = (current.timestamp - previous.timestamp ) * millisecondsPerDay"}),Object(I.jsx)("pre",{children:"yearOverDuration = daysPerYear (365) / timeBetweenReports"}),Object(I.jsx)("pre",{children:"profitOverTotalDebt = profit / current.totalDebt"}),Object(I.jsx)("pre",{children:"APR = profitOverTotalDebt * yearOverDuration"})]})})]})]})})]},t)}))]})},_n=function(e){var t=e.reports,n=e.tokenDecimals;return Object(I.jsx)(Tn,{data:t,tokenDecimals:n})},vn=function(){var e=Object(y.g)(),t=e.strategyId,n=e.vaultId,r=Object(a.useState)([]),s=Object(v.a)(r,2),l=s[0],o=s[1],d=Object(a.useState)(!0),p=Object(v.a)(d,2),u=p[0],c=p[1],m=Object(a.useState)([]),f=Object(v.a)(m,2),b=f[0],g=f[1],h=Object(a.useState)(!0),D=Object(v.a)(h,2),x=D[0],V=D[1];Object(a.useEffect)((function(){rn([t]).then((function(e){o(e),c(!1)})),cn(t).then((function(e){g(e),V(!1)}))}),[t]);var w=l&&l[0],P=Object(S.a)((function(e){var t;return Object(F.a)({root:(t={},Object(Ee.a)(t,e.breakpoints.down("sm"),{maxWidth:"100%"}),Object(Ee.a)(t,e.breakpoints.up("md"),{maxWidth:"80%"}),Object(Ee.a)(t,e.breakpoints.up("lg"),{maxWidth:"80%"}),Object(Ee.a)(t,"marginLeft","auto"),Object(Ee.a)(t,"marginRight","auto"),Object(Ee.a)(t,"border",w&&w.emergencyExit?"2px solid #ff6c6c":"#fff"),t),demo1:{borderBottom:"1px solid #e8e8e8"}})})),C=i.a.useState(0),j=Object(v.a)(C,2),L=j[0],$=j[1],k=P();return Object(I.jsxs)(i.a.Fragment,{children:[Object(I.jsx)(jt,{title:w?w.name:""}),Object(I.jsx)(Je,{vaultId:n,strategyId:t}),u||x?Object(I.jsxs)("div",{style:{textAlign:"center",marginTop:"100px"},children:[Object(I.jsx)(T.a,{style:{color:"#fff"}})," ",Object(I.jsx)(_.a,{style:{color:"#fff"},children:"Loading strategy.."})]}):Object(I.jsxs)(Me.a,{className:k.root,children:[Object(I.jsx)(Ae.a,{title:w?w.name:"",subheader:w?Object(I.jsx)(Ie,{address:w.address}):""}),Object(I.jsxs)(qe.a,{className:k.demo1,value:L,indicatorColor:"primary",textColor:"primary",onChange:function(e,t){$(t)},children:[Object(I.jsx)(Fe.a,{label:"Detail"}),Object(I.jsx)(Fe.a,{label:"Reports"})]}),0===L?Object(I.jsx)(Kt,{strategy:w}):Object(I.jsx)(_n,{reports:b,tokenDecimals:w?w.token.decimals:18})]})]})},hn=(n(392),n(398),n(8),n(18));Object(S.a)((function(e){return Object(F.a)({root:{paddingLeft:e.spacing(2),paddingRight:e.spacing(1)},highlight:"light"===e.palette.type?{color:e.palette.secondary.main,backgroundColor:Object(hn.e)(e.palette.secondary.light,.85)}:{color:e.palette.text.primary,backgroundColor:e.palette.secondary.dark},title:{flex:"1 1 100%"}})})),Object(S.a)((function(e){return Object(F.a)({root:{width:"100%"},paper:{width:"100%",marginBottom:e.spacing(2)},table:{minWidth:750},visuallyHidden:{border:0,clip:"rect(0 0 0 0)",height:1,margin:-1,overflow:"hidden",padding:0,position:"absolute",top:20,width:1}})}));n(402),n(371),n(235),n(234);var Dn=function(e){Object(d.a)(n,e);var t=Object(p.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){return Object(I.jsxs)(u.a,{children:[Object(I.jsx)(Mt,{}),Object(I.jsxs)(y.c,{children:[Object(I.jsx)(y.a,{exact:!0,path:"/",component:q}),Object(I.jsx)(y.a,{exact:!0,path:"/strategist/:strategist",component:q}),Object(I.jsx)(y.a,{exact:!0,path:"/vault/:vaultId",component:kt}),Object(I.jsx)(y.a,{exact:!0,path:"/vault/:vaultId/strategy/:strategyId",component:vn})]})]})}}]),n}(i.a.Component);s.a.render(Object(I.jsx)(i.a.StrictMode,{children:Object(I.jsx)(E,{children:Object(I.jsx)(A,{children:Object(I.jsx)(Dn,{})})})}),document.getElementById("root"))}},[[315,1,2]]]);
//# sourceMappingURL=main.85b68e70.chunk.js.map