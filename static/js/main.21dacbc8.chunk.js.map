{"version":3,"sources":["contracts/Vault.ts","contracts/addresses.ts","contracts/contracts.ts","utils/env.ts","contracts sync /^/.//.*/.ts$","contracts/BadgerRegistry.ts","components/common/VaultsList/index.tsx","hooks/ContractLoader.ts","constants.ts","providers/Web3ContextProvider.tsx","providers/ContractsProvider.tsx","components/app/Home/index.tsx","utils/ethers.ts","utils/abi.ts","utils/commonUtils.ts","components/common/EtherScanLink/index.tsx","utils/dateUtils.ts","components/app/StrategistList/index.tsx","components/common/HtmlTooltip/index.ts","components/app/VaultItemList/index.tsx","utils/vaults.ts","components/app/SingleStrategy/BreadCrumbs.tsx","utils/strategyParams.ts","components/app/Charts/Pie/index.tsx","utils/checks.ts","components/common/Table/index.tsx","components/common/ProgressBar/index.tsx","components/app/SingleVault/VaultDescription.tsx","components/common/ReactHelmet/index.tsx","components/app/SingleVault/index.tsx","components/app/NavBar/index.tsx","components/app/SingleStrategy/CardContent.tsx","utils/oracle.ts","components/common/TokenPrice/index.tsx","components/app/SingleStrategy/StrategyDetail.tsx","utils/strategies.ts","utils/apisRequest.ts","utils/reports.ts","components/common/ItemDescription/index.tsx","components/app/SingleStrategy/AccordionReport.tsx","utils/math.ts","components/app/SingleStrategy/StrategyReports.tsx","components/app/SingleStrategy/index.tsx","components/app/GenericList/EnhancedTableToolbar.tsx","components/app/GenericList/useStyles.tsx","App.tsx","index.tsx"],"names":["name","inputs","type","indexed","anonymous","stateMutability","outputs","addresses","137","BadgerRegistry","require","config","path","__dirname","getEnv","memoize","env","process","ethereumNetwork","infuraProjectId","INFURA_PROJECT_ID","alchemyKey","ALCHEMY_KEY","REACT_APP_ALCHEMY_KEY","fbApiKey","REACT_APP_FB_API_KEY","fbAuthDomain","REACT_APP_FB_AUTH_DOMAIN","fbProjectId","REACT_APP_FB_PROJECT_ID","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","internalType","components","useStyles","makeStyles","searchInput","width","margin","backgroundColor","alignContent","VaultsList","props","classes","strategist","useParams","history","useHistory","useState","author","setAuthor","items","Container","onSubmit","preventDefault","push","console","log","TextField","className","variant","onChange","target","value","placeholder","vault","index","maxWidth","loadContract","networkId","contractName","provider","Contract","_","get","default","NETWORKS","chainId","rpcUrl","targetNetworkId","Number","NETWORK_ID","Web3Context","createContext","undefined","Web3ContextProvider","children","network","JsonRpcProvider","Provider","useWeb3Context","useContext","ContractsContext","contracts","ContractsProvider","setContracts","useEffect","a","contractList","newContracts","reduce","accumulator","loadContracts","useContractLoader","getBlockNumber","then","Home","state","useAsync","governance","fromAuthorWithDetails","response","address","strategies","strategy","loading","style","textAlign","marginTop","CircularProgress","color","Typography","getEthersDefaultProvider","providers","AlchemyProvider","v0_3_2","abiMap","Map","set","VaultABI_030","abi","VaultABI_032","getABI","apiVersion","getOracleInstance","ORACLE_CONTRACT_ADDRESS","Oracle","toUnits","amount","decimals","BN","toString","div","pow","extractAddress","substring","length","displayAmount","constants","MaxUint256","tokenBits","BigNumber","from","toFormat","replace","formatBPS","val","parseInt","mapContractCalls","result","mappedObj","callsReturnContext","forEach","methodName","returnValues","EtherScanLink","transactionHash","dark","internalHref","copied","setCopied","timeId","setTimeout","clearTimeout","theme","createStyles","button","spacing","iconCall","borderRadius","padding","boxShadow","fontSize","opacity","copiedText","extractedValue","maskedValue","Tooltip","title","aria-label","refLink","Link","href","Hidden","smUp","xsDown","Button","onClick","stopPropagation","navigator","clipboard","writeText","onCopyToClipboard","FileCopy","momentDurationFormatSetup","moment","isValidTimestamp","timestamp","isValid","toIsoString","utc","toISOString","unixMsToIsoString","toHumanDateText","unixTimestamp","now","diff","format","trim","StrategistList","expand","configOK","root","rootGrid","text","fontFamily","lineHeight","list","background","border","accordion","link","fontWeight","heading","typography","pxToRem","fontWeightRegular","expandIcon","paper","palette","secondary","component","Accordion","defaultExpanded","AccordionSummary","aria-controls","Grid","item","md","xs","container","direction","justify","alignItems","gutterBottom","rel","AccordionDetails","lastReport","totalDebt","debtRatio","HtmlTooltip","withStyles","tooltip","VaultItemList","textDecoration","textVault","warningIcon","alert","divider","marginLeft","marginRight","icon","ListItemAvatar","Avatar","alt","src","configErrors","error","ReportProblem","Divider","VAULT_VIEW_METHODS","_getVault","utils","isAddress","multicall","Multicall","ethersProvider","VaultABI","vaultCall","reference","contractAddress","calls","method","methodParameters","call","results","getVault","crumbs","marginBottom","BreadCrumbs","strategyLevel","vaultId","strategyId","toLowerCase","STRAT_PARAMS_V030","STRAT_PARAMS_V032","mapVersions","getChartData","strategiesAllocations","params","y","toFixed","debtUsage","sortedAllocs","sortBy","sliced","selected","mapStrategyParams","i","param","activation","lastReportText","mapParamDisplayValues","Pie","options","chart","plotBackgroundColor","plotBorderWidth","plotShadow","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","series","colorByPoint","data","highcharts","Highcharts","GOVERNANCE","GUARDIAN","MANAGEMENT","TREASURY","addressMap","checkLabel","has","Set","table","minWidth","Table","TableContainer","Paper","BorderLinearProgress","height","colorPrimary","grey","bar","LinearProgress","flexGrow","ProgressBars","p","depositLimit","totalAssets","f","Box","display","mr","VaultDescription","amountA","amountB","emergencyShutDown","emergencyShutdown","Chip","label","clickable","rewards","management","guardian","totalAsset","symbol","unallocated","sub","vaultList","managementFee","performanceFee","renderError","message","Fragment","TableHead","TableRow","TableCell","query","ProgressBar","ReactHelmet","Helmet","charSet","TabPanel","other","role","hidden","aria-labelledby","a11yProps","SingleVault","React","setValue","breakpoints","down","up","row","gridContainer","media","paddingTop","transform","transition","transitions","create","duration","shortest","expandOpen","Card","CardHeader","avatar","subheader","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","Tab","menuButton","FontSize","fontColor","NavBar","AppBar","position","Toolbar","IconButton","edge","CardContent","res","render","key","getTokenUnitPrice","token","oracle","getPriceUsdcRecommended","getTokenPrice","helpIcon","verticalAlign","TokenPrice","tokenPrice","setTokenPrice","tokenUnitPrice","setTokenUnitPrice","loadingLabel","unitPrice","usdcAmount","size","HelpOutlineRounded","StrategyDetail","activationDate","emergencyExit","isActive","estimatedAsset","estimatedTotalAssets","creditAvailable","debtOutstanding","totalGain","totalLoss","expectReturn","expectedReturn","rateLimit","minDebtPerHarvest","maxDebtPerHarvest","keeper","vaults","STRAT_VIEW_METHODS","STRAT_PARAM_METHODS","TOKEN_VIEW_METHODS","filterList","buildViewMethodsCall","stratAddres","filter","viewMethod","includes","StratABI","buildParamMethodsCall","strategyMap","vaultMap","vaultAddress","vaultInfo","abiParams","buildTokenCallMethods","want","TokenABI","mapStrategiesCalls","contractCallsResults","strategiesQueueIndexes","stratData","vaultStratData","mappedStrat","mappedVaultStratInfo","omit","mappedStratParams","tokenData","strategyWithdrawalQueueIndex","find","queueIndex","withdrawalQueueIndex","innerGetStrategies","stratCalls","resultsViewMethods","stratParamCalls","tokenMethodCalls","concat","stratParamResults","mergedResults","blockNumber","mappedStrategies","getStrategies","getData","axios","all","post","put","spread","url","payload","querySubgraph","errors","querySubgraphData","buildReportsQuery","_getReportsForStrategy","reportResults","reports","OMIT_FIELDS","values","report","currentReport","previousReport","startTimestamp","endTimestamp","durationPr","parseFloat","apr","profit","gain","loss","totalProfit","transaction","hash","getReportsForStrategy","subText","grid","borderBottom","ItemDescription","visible","helpTooltip","helpTitle","helpDescription","HelpOutlined","AccordionReport","tokenDecimals","aprList","compact","averageApr","mean","medianApr","array","sort","b","median","averageAprLabel","medianAprLabel","topLabel","ms","debtAdded","debtLimit","debtPaid","StrategyReports","SingleStrategy","strategyData","setStrategyData","isLoaded","setIsLoaded","strategyReports","setStrategyReports","isReportsLoading","setIsReportsLoading","loadedStrategy","demo1","paddingLeft","paddingRight","highlight","main","lighten","light","primary","flex","visuallyHidden","clip","overflow","top","App","exact","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21dacbc8.chunk.js","sourcesContent":["export default [\n    {\n        name: 'Transfer',\n        inputs: [\n            { name: 'sender', type: 'address', indexed: true },\n            { name: 'receiver', type: 'address', indexed: true },\n            { name: 'value', type: 'uint256', indexed: false },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'Approval',\n        inputs: [\n            { name: 'owner', type: 'address', indexed: true },\n            { name: 'spender', type: 'address', indexed: true },\n            { name: 'value', type: 'uint256', indexed: false },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyAdded',\n        inputs: [\n            { name: 'strategy', type: 'address', indexed: true },\n            { name: 'debtRatio', type: 'uint256', indexed: false },\n            { name: 'minDebtPerHarvest', type: 'uint256', indexed: false },\n            { name: 'maxDebtPerHarvest', type: 'uint256', indexed: false },\n            { name: 'performanceFee', type: 'uint256', indexed: false },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyReported',\n        inputs: [\n            { name: 'strategy', type: 'address', indexed: true },\n            { name: 'gain', type: 'uint256', indexed: false },\n            { name: 'loss', type: 'uint256', indexed: false },\n            { name: 'debtPaid', type: 'uint256', indexed: false },\n            { name: 'totalGain', type: 'uint256', indexed: false },\n            { name: 'totalLoss', type: 'uint256', indexed: false },\n            { name: 'totalDebt', type: 'uint256', indexed: false },\n            { name: 'debtAdded', type: 'uint256', indexed: false },\n            { name: 'debtRatio', type: 'uint256', indexed: false },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateGovernance',\n        inputs: [{ name: 'governance', type: 'address', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'NewPendingGovernance',\n        inputs: [{ name: 'governance', type: 'address', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateManagement',\n        inputs: [{ name: 'management', type: 'address', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateGuestList',\n        inputs: [{ name: 'guestList', type: 'address', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateRewards',\n        inputs: [{ name: 'rewards', type: 'address', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateDepositLimit',\n        inputs: [{ name: 'depositLimit', type: 'uint256', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateWithdrawalFee',\n        inputs: [{ name: 'withdrawalFee', type: 'uint256', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdatePerformanceFee',\n        inputs: [{ name: 'performanceFee', type: 'uint256', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateManagementFee',\n        inputs: [{ name: 'managementFee', type: 'uint256', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateGuardian',\n        inputs: [{ name: 'guardian', type: 'address', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'EmergencyShutdown',\n        inputs: [{ name: 'active', type: 'bool', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'UpdateWithdrawalQueue',\n        inputs: [{ name: 'queue', type: 'address[20]', indexed: false }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyUpdateDebtRatio',\n        inputs: [\n            { name: 'strategy', type: 'address', indexed: true },\n            { name: 'debtRatio', type: 'uint256', indexed: false },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyUpdateMinDebtPerHarvest',\n        inputs: [\n            { name: 'strategy', type: 'address', indexed: true },\n            { name: 'minDebtPerHarvest', type: 'uint256', indexed: false },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyUpdateMaxDebtPerHarvest',\n        inputs: [\n            { name: 'strategy', type: 'address', indexed: true },\n            { name: 'maxDebtPerHarvest', type: 'uint256', indexed: false },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyUpdatePerformanceFee',\n        inputs: [\n            { name: 'strategy', type: 'address', indexed: true },\n            { name: 'performanceFee', type: 'uint256', indexed: false },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyMigrated',\n        inputs: [\n            { name: 'oldVersion', type: 'address', indexed: true },\n            { name: 'newVersion', type: 'address', indexed: true },\n        ],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyRevoked',\n        inputs: [{ name: 'strategy', type: 'address', indexed: true }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyRemovedFromQueue',\n        inputs: [{ name: 'strategy', type: 'address', indexed: true }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        name: 'StrategyAddedToQueue',\n        inputs: [{ name: 'strategy', type: 'address', indexed: true }],\n        anonymous: false,\n        type: 'event',\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'initialize',\n        inputs: [\n            { name: 'token', type: 'address' },\n            { name: 'governance', type: 'address' },\n            { name: 'rewards', type: 'address' },\n            { name: 'nameOverride', type: 'string' },\n            { name: 'symbolOverride', type: 'string' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'initialize',\n        inputs: [\n            { name: 'token', type: 'address' },\n            { name: 'governance', type: 'address' },\n            { name: 'rewards', type: 'address' },\n            { name: 'nameOverride', type: 'string' },\n            { name: 'symbolOverride', type: 'string' },\n            { name: 'guardian', type: 'address' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'initialize',\n        inputs: [\n            { name: 'token', type: 'address' },\n            { name: 'governance', type: 'address' },\n            { name: 'rewards', type: 'address' },\n            { name: 'nameOverride', type: 'string' },\n            { name: 'symbolOverride', type: 'string' },\n            { name: 'guardian', type: 'address' },\n            { name: 'management', type: 'address' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'pure',\n        type: 'function',\n        name: 'apiVersion',\n        inputs: [],\n        outputs: [{ name: '', type: 'string' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setName',\n        inputs: [{ name: 'name', type: 'string' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setSymbol',\n        inputs: [{ name: 'symbol', type: 'string' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setGovernance',\n        inputs: [{ name: 'governance', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'acceptGovernance',\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setManagement',\n        inputs: [{ name: 'management', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setGuestList',\n        inputs: [{ name: 'guestList', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setRewards',\n        inputs: [{ name: 'rewards', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setLockedProfitDegradation',\n        inputs: [{ name: 'degradation', type: 'uint256' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setDepositLimit',\n        inputs: [{ name: 'limit', type: 'uint256' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setWithdrawalFee',\n        inputs: [{ name: 'fee', type: 'uint256' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setPerformanceFee',\n        inputs: [{ name: 'fee', type: 'uint256' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setManagementFee',\n        inputs: [{ name: 'fee', type: 'uint256' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setGuardian',\n        inputs: [{ name: 'guardian', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'approveContractAccess',\n        inputs: [{ name: 'account', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'revokeContractAccess',\n        inputs: [{ name: 'account', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'pause',\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'unpause',\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setEmergencyShutdown',\n        inputs: [{ name: 'active', type: 'bool' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'setWithdrawalQueue',\n        inputs: [{ name: 'queue', type: 'address[20]' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'transfer',\n        inputs: [\n            { name: 'receiver', type: 'address' },\n            { name: 'amount', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'transferFrom',\n        inputs: [\n            { name: 'sender', type: 'address' },\n            { name: 'receiver', type: 'address' },\n            { name: 'amount', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'approve',\n        inputs: [\n            { name: 'spender', type: 'address' },\n            { name: 'amount', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'increaseAllowance',\n        inputs: [\n            { name: 'spender', type: 'address' },\n            { name: 'amount', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'decreaseAllowance',\n        inputs: [\n            { name: 'spender', type: 'address' },\n            { name: 'amount', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'permit',\n        inputs: [\n            { name: 'owner', type: 'address' },\n            { name: 'spender', type: 'address' },\n            { name: 'amount', type: 'uint256' },\n            { name: 'expiry', type: 'uint256' },\n            { name: 'signature', type: 'bytes' },\n        ],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'totalAssets',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'deposit',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'deposit',\n        inputs: [{ name: '_amount', type: 'uint256' }],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'deposit',\n        inputs: [\n            { name: '_amount', type: 'uint256' },\n            { name: 'recipient', type: 'address' },\n        ],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'maxAvailableShares',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'withdraw',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'withdraw',\n        inputs: [{ name: 'maxShares', type: 'uint256' }],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'withdraw',\n        inputs: [\n            { name: 'maxShares', type: 'uint256' },\n            { name: 'recipient', type: 'address' },\n        ],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'withdraw',\n        inputs: [\n            { name: 'maxShares', type: 'uint256' },\n            { name: 'recipient', type: 'address' },\n            { name: 'maxLoss', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'pricePerShare',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'pricePerFullShare',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'addStrategy',\n        inputs: [\n            { name: 'strategy', type: 'address' },\n            { name: 'debtRatio', type: 'uint256' },\n            { name: 'minDebtPerHarvest', type: 'uint256' },\n            { name: 'maxDebtPerHarvest', type: 'uint256' },\n            { name: 'performanceFee', type: 'uint256' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'updateStrategyDebtRatio',\n        inputs: [\n            { name: 'strategy', type: 'address' },\n            { name: 'debtRatio', type: 'uint256' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'updateStrategyMinDebtPerHarvest',\n        inputs: [\n            { name: 'strategy', type: 'address' },\n            { name: 'minDebtPerHarvest', type: 'uint256' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'updateStrategyMaxDebtPerHarvest',\n        inputs: [\n            { name: 'strategy', type: 'address' },\n            { name: 'maxDebtPerHarvest', type: 'uint256' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'updateStrategyPerformanceFee',\n        inputs: [\n            { name: 'strategy', type: 'address' },\n            { name: 'performanceFee', type: 'uint256' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'migrateStrategy',\n        inputs: [\n            { name: 'oldVersion', type: 'address' },\n            { name: 'newVersion', type: 'address' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'revokeStrategy',\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'revokeStrategy',\n        inputs: [{ name: 'strategy', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'addStrategyToQueue',\n        inputs: [{ name: 'strategy', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'removeStrategyFromQueue',\n        inputs: [{ name: 'strategy', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'debtOutstanding',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'debtOutstanding',\n        inputs: [{ name: 'strategy', type: 'address' }],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'creditAvailable',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'creditAvailable',\n        inputs: [{ name: 'strategy', type: 'address' }],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'availableDepositLimit',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'expectedReturn',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'expectedReturn',\n        inputs: [{ name: 'strategy', type: 'address' }],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'report',\n        inputs: [\n            { name: 'gain', type: 'uint256' },\n            { name: 'loss', type: 'uint256' },\n            { name: '_debtPayment', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'sweep',\n        inputs: [{ name: 'token', type: 'address' }],\n        outputs: [],\n    },\n    {\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'sweep',\n        inputs: [\n            { name: 'token', type: 'address' },\n            { name: 'amount', type: 'uint256' },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'name',\n        inputs: [],\n        outputs: [{ name: '', type: 'string' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'symbol',\n        inputs: [],\n        outputs: [{ name: '', type: 'string' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'decimals',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'balanceOf',\n        inputs: [{ name: 'arg0', type: 'address' }],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'allowance',\n        inputs: [\n            { name: 'arg0', type: 'address' },\n            { name: 'arg1', type: 'address' },\n        ],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'totalSupply',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'token',\n        inputs: [],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'governance',\n        inputs: [],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'management',\n        inputs: [],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'guardian',\n        inputs: [],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'pendingGovernance',\n        inputs: [],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'guestList',\n        inputs: [],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'blockLock',\n        inputs: [{ name: 'arg0', type: 'address' }],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'approved',\n        inputs: [{ name: 'arg0', type: 'address' }],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'paused',\n        inputs: [],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'strategies',\n        inputs: [{ name: 'arg0', type: 'address' }],\n        outputs: [\n            { name: 'performanceFee', type: 'uint256' },\n            { name: 'activation', type: 'uint256' },\n            { name: 'debtRatio', type: 'uint256' },\n            { name: 'minDebtPerHarvest', type: 'uint256' },\n            { name: 'maxDebtPerHarvest', type: 'uint256' },\n            { name: 'lastReport', type: 'uint256' },\n            { name: 'totalDebt', type: 'uint256' },\n            { name: 'totalGain', type: 'uint256' },\n            { name: 'totalLoss', type: 'uint256' },\n        ],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'withdrawalQueue',\n        inputs: [{ name: 'arg0', type: 'uint256' }],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'emergencyShutdown',\n        inputs: [],\n        outputs: [{ name: '', type: 'bool' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'depositLimit',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'debtRatio',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'totalDebt',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'lastReport',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'activation',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'lockedProfit',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'lockedProfitDegradation',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'rewards',\n        inputs: [],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'managementFee',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'performanceFee',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'withdrawalFee',\n        inputs: [],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'nonces',\n        inputs: [{ name: 'arg0', type: 'address' }],\n        outputs: [{ name: '', type: 'uint256' }],\n    },\n    {\n        stateMutability: 'view',\n        type: 'function',\n        name: 'DOMAIN_SEPARATOR',\n        inputs: [],\n        outputs: [{ name: '', type: 'bytes32' }],\n    },\n];\n","const addresses: any = {\n    137: {\n        BadgerRegistry: '0x74f0ef73242c32375dda80e8c45af1d463916d1a',\n    },\n};\n\nexport default addresses;\n","export default ['BadgerRegistry'];\n","import { memoize } from 'lodash';\nimport { Env } from '../types';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nrequire('dotenv').config({ path: __dirname + '../../.env' });\n\nexport const getEnv = memoize(\n    (): Env => ({\n        env: process.env.NODE_ENV,\n        ethereumNetwork: 'homestead',\n        infuraProjectId: process.env.INFURA_PROJECT_ID,\n        alchemyKey:\n            process.env.ALCHEMY_KEY || process.env.REACT_APP_ALCHEMY_KEY,\n        fbApiKey: process.env.REACT_APP_FB_API_KEY,\n        fbAuthDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\n        fbProjectId: process.env.REACT_APP_FB_PROJECT_ID,\n    })\n);\n","var map = {\n\t\"./BadgerRegistry.ts\": 278,\n\t\"./Vault.ts\": 158,\n\t\"./addresses.ts\": 179,\n\t\"./contracts.ts\": 198\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 277;","export default [\n    {\n        inputs: [\n            { internalType: 'address', name: '_governance', type: 'address' },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'author',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'vault',\n                type: 'address',\n            },\n        ],\n        name: 'NewVault',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'author',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'vault',\n                type: 'address',\n            },\n        ],\n        name: 'PromoteVault',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'author',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'vault',\n                type: 'address',\n            },\n        ],\n        name: 'RemoveVault',\n        type: 'event',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'vault', type: 'address' }],\n        name: 'add',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'author', type: 'address' }],\n        name: 'fromAuthor',\n        outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'author', type: 'address' }],\n        name: 'fromAuthorVaults',\n        outputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'at', type: 'address' },\n                    { internalType: 'string', name: 'name', type: 'string' },\n                    { internalType: 'string', name: 'symbol', type: 'string' },\n                    { internalType: 'address', name: 'token', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'pendingGovernance',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'governance',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'rewards',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'guardian',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'management',\n                        type: 'address',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'address',\n                                name: 'at',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'string',\n                                name: 'name',\n                                type: 'string',\n                            },\n                            {\n                                internalType: 'address',\n                                name: 'strategist',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'address',\n                                name: 'rewards',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'address',\n                                name: 'keeper',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'performanceFee',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'activation',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'debtRatio',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'minDebtPerHarvest',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'maxDebtPerHarvest',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'lastReport',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'totalDebt',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'totalGain',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'totalLoss',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct BadgerRegistry.StratInfo[]',\n                        name: 'strategies',\n                        type: 'tuple[]',\n                    },\n                ],\n                internalType: 'struct BadgerRegistry.VaultInfo[]',\n                name: '',\n                type: 'tuple[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'author', type: 'address' }],\n        name: 'fromAuthorWithDetails',\n        outputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'at', type: 'address' },\n                    { internalType: 'string', name: 'name', type: 'string' },\n                    { internalType: 'string', name: 'symbol', type: 'string' },\n                    { internalType: 'address', name: 'token', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'pendingGovernance',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'governance',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'rewards',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'guardian',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'management',\n                        type: 'address',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'address',\n                                name: 'at',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'string',\n                                name: 'name',\n                                type: 'string',\n                            },\n                            {\n                                internalType: 'address',\n                                name: 'strategist',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'address',\n                                name: 'rewards',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'address',\n                                name: 'keeper',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'performanceFee',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'activation',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'debtRatio',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'minDebtPerHarvest',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'maxDebtPerHarvest',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'lastReport',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'totalDebt',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'totalGain',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'totalLoss',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct BadgerRegistry.StratInfo[]',\n                        name: 'strategies',\n                        type: 'tuple[]',\n                    },\n                ],\n                internalType: 'struct BadgerRegistry.VaultInfo[]',\n                name: '',\n                type: 'tuple[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'governance',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'vault', type: 'address' }],\n        name: 'promote',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'vault', type: 'address' }],\n        name: 'remove',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: '_newGov', type: 'address' }],\n        name: 'setGovernance',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n];\n","import { FormEvent, useState } from 'react';\nimport { Container, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Vault } from '../../../types';\nimport { VaultItemList } from '../../app';\nimport _ from 'lodash';\n\nconst useStyles = makeStyles({\n    searchInput: {\n        width: '100%',\n        margin: '15px',\n        backgroundColor: 'white',\n        alignContent: 'center',\n    },\n});\n\ntype VaultsListProps = {\n    items: Vault[];\n};\n\nexport const VaultsList = (props: VaultsListProps) => {\n    const classes = useStyles();\n    const { strategist } = useParams<any>();\n    const history = useHistory();\n    const [author, setAuthor] = useState(strategist);\n    const { items = [] } = props;\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        history.push(`/strategist/${author}`);\n        console.log('test');\n    };\n\n    return (\n        <Container>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    className={classes.searchInput}\n                    variant=\"outlined\"\n                    type=\"search\"\n                    onChange={(e) => setAuthor(e.target.value)}\n                    value={author}\n                    placeholder=\"Search by strategist\"\n                />\n            </form>\n            {items.map((vault: Vault, index: number) => (\n                <Container maxWidth=\"lg\" key={index}>\n                    <VaultItemList vault={vault} key={index} />\n                </Container>\n            ))}\n        </Container>\n    );\n};\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\nimport { useEffect, useState } from 'react';\nimport _ from 'lodash';\n\nimport { Provider } from '@ethersproject/abstract-provider';\nimport { Contract } from '@ethersproject/contracts';\nimport addresses from '../contracts/addresses';\n\nexport type Mutable<T> = {\n    -readonly [k in keyof T]: T[k];\n};\n\nconst loadContract = (\n    networkId: number,\n    contractName: string,\n    provider: Provider\n) => {\n    const newContract = new Contract(\n        _.get(\n            addresses[networkId],\n            contractName,\n            '0x0000000000000000000000000000000000000000'\n        ),\n        require(`../contracts/${contractName}.ts`).default,\n        provider\n    );\n\n    return newContract;\n};\n\nexport default function useContractLoader(\n    networkId: number,\n    provider: Provider\n): { [key: string]: Contract } {\n    const [contracts, setContracts] = useState<{ [key: string]: Contract }>();\n    useEffect(() => {\n        async function loadContracts() {\n            if (typeof provider !== 'undefined') {\n                try {\n                    const contractList = require('../contracts/contracts.ts')\n                        .default;\n\n                    const newContracts = contractList.reduce(\n                        (accumulator: any, contractName: string) => {\n                            accumulator[contractName] = loadContract(\n                                networkId,\n                                contractName,\n                                provider\n                            );\n                            return accumulator;\n                        },\n                        {}\n                    );\n                    setContracts(newContracts);\n                } catch (e) {\n                    console.log('ERROR LOADING CONTRACTS!!', e);\n                }\n            }\n        }\n        loadContracts();\n    }, [networkId, provider]);\n    return contracts as { [key: string]: Contract };\n}\n","export interface NetworkInfo {\n    name: string;\n    chainId: number;\n    rpcUrl: string;\n}\n\nexport const NETWORKS: any = {\n    137: {\n        name: 'polygon',\n        chainId: 137,\n        rpcUrl: 'https://matic-mainnet.chainstacklabs.com',\n    },\n};\n\nexport const getNetworkById: (chainId: number) => NetworkInfo = (\n    chainId: number\n) => {\n    return NETWORKS[chainId] || NETWORKS[137];\n};\n","import { createContext, ReactChild, ReactChildren, useContext } from 'react';\n\nimport { JsonRpcProvider } from '@ethersproject/providers';\n\nimport { getNetworkById } from '../constants';\n\nconst targetNetworkId = Number(process.env.NETWORK_ID) || 137;\n\ninterface Web3ContextProps {\n    provider: JsonRpcProvider | undefined;\n    networkId: number;\n}\n\ninterface Web3ContextProviderProps {\n    children: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\n}\n\nexport const Web3Context = createContext<Web3ContextProps>({\n    provider: undefined,\n    networkId: targetNetworkId,\n});\n\nexport const Web3ContextProvider = ({\n    children,\n}: Web3ContextProviderProps): JSX.Element => {\n    const network = getNetworkById(targetNetworkId);\n    const provider = new JsonRpcProvider(network.rpcUrl);\n\n    return (\n        <Web3Context.Provider\n            value={{\n                provider,\n                networkId: targetNetworkId,\n            }}\n        >\n            {children}\n        </Web3Context.Provider>\n    );\n};\n\nexport const useWeb3Context: () => Web3ContextProps = () =>\n    useContext(Web3Context);\n","import { Contract } from 'ethers';\nimport { createContext, useContext, ReactChild, ReactChildren } from 'react';\n\nimport { Provider } from '@ethersproject/abstract-provider';\n\nimport useContractLoader from '../hooks/ContractLoader';\nimport { useWeb3Context } from './Web3ContextProvider';\n\ninterface ContractsContextProps {\n    BadgerRegistry: Contract | undefined;\n    contracts: { [key: string]: Contract };\n}\n\nexport const ContractsContext = createContext<ContractsContextProps>({\n    BadgerRegistry: undefined,\n    contracts: {},\n});\n\ninterface ContractsProviderProps {\n    children: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\n}\n\nexport const ContractsProvider = ({ children }: ContractsProviderProps) => {\n    const { provider, networkId } = useWeb3Context();\n    const contracts = useContractLoader(networkId, provider as Provider);\n    provider?.getBlockNumber().then(console.log);\n\n    const { BadgerRegistry } = contracts || {};\n\n    return (\n        <ContractsContext.Provider\n            value={{\n                contracts,\n                BadgerRegistry,\n            }}\n        >\n            {children}\n        </ContractsContext.Provider>\n    );\n};\n\nexport const useContractsContext: () => ContractsContextProps = () =>\n    useContext(ContractsContext);\n","import React from 'react';\nimport { useAsync } from 'react-use';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { VaultsList } from '../../common/VaultsList';\nimport { useContractsContext } from '../../../providers/ContractsProvider';\n\nexport const Home = () => {\n    const { strategist } = useParams<any>();\n    const { BadgerRegistry } = useContractsContext();\n\n    const state = useAsync(async () => {\n        let author = strategist;\n        if (!author) {\n            author = await BadgerRegistry?.governance();\n        }\n\n        const response = await BadgerRegistry?.fromAuthorWithDetails(author);\n\n        return response.map((vault: any) => {\n            return {\n                ...vault,\n                address: vault[0],\n                strategies: vault.strategies.map((strategy: any) => ({\n                    ...strategy,\n                    address: strategy[0],\n                })),\n            };\n        });\n    }, [BadgerRegistry, strategist]);\n\n    console.log(state);\n    if (state.loading) {\n        return (\n            <div\n                style={{\n                    textAlign: 'center',\n                    marginTop: '100px',\n                }}\n            >\n                <CircularProgress style={{ color: '#fff' }} />\n                <Typography style={{ color: '#fff' }}>\n                    Loading vaults..\n                </Typography>\n            </div>\n        );\n    }\n\n    return <VaultsList items={state.value} />;\n};\n","import { ethers, providers, BigNumber, BigNumberish } from 'ethers';\nimport { getEnv } from './env';\n\nexport const getEthersDefaultProvider = (\n    network = 'homestead'\n): ethers.providers.BaseProvider => {\n    const { infuraProjectId, alchemyKey } = getEnv();\n    console.log(alchemyKey);\n    // return new providers.InfuraProvider(network, infuraProjectId);\n    return new providers.AlchemyProvider(network, alchemyKey);\n};\n\nexport const formatAmount = (amount: string, decimals: number) => {\n    const [whole, fraction] = amount.split('.');\n    return `${whole}${fraction ? '.' + fraction.substring(0, decimals) : ''}`;\n};\n\nexport const weiToUnits = (amount: string) => BigNumber.from(amount);\n","import VaultABI_030 from './ABI/VaultAPI_030.json';\nimport VaultABI_032 from './ABI/VaultAPI_032.json';\nimport StrategiesHelper from './ABI/StrategiesHelper.json';\nimport Oracle from './ABI/Oracle.json';\nimport { Contract } from 'ethers';\nimport {\n    ORACLE_CONTRACT_ADDRESS,\n    STRATEGIES_HELPER_CONTRACT_ADDRESS,\n} from './commonUtils';\nimport { getEthersDefaultProvider } from './ethers';\n\nexport const v0_3_2 = '0.3.2';\n\nconst abiMap = new Map<string, any>();\nabiMap.set('0.3.0', VaultABI_030.abi);\nabiMap.set('0.3.1', VaultABI_030.abi);\nabiMap.set(v0_3_2, VaultABI_032.abi);\nabiMap.set('0.3.3', VaultABI_032.abi);\n\nexport const getABI_032 = (): any => {\n    return getABI(v0_3_2);\n};\n\nexport const getABI = (apiVersion: string = v0_3_2): any => {\n    return abiMap.get(apiVersion) || abiMap.get(v0_3_2);\n};\n\nexport const getABIStrategiesHelper = (): any => StrategiesHelper;\n\nexport const getABIOracle = (): any => Oracle;\n\nexport const getOracleInstance = (): Contract => {\n    const provider = getEthersDefaultProvider();\n    return new Contract(ORACLE_CONTRACT_ADDRESS, getABIOracle(), provider);\n};\n\nexport const getStrategiesHelperInstance = (): Contract => {\n    const provider = getEthersDefaultProvider();\n    return new Contract(\n        STRATEGIES_HELPER_CONTRACT_ADDRESS,\n        getABIStrategiesHelper(),\n        provider\n    );\n};\n","import { get } from 'lodash';\nimport { BigNumber, BigNumberish, constants } from 'ethers';\nimport { BigNumber as BN } from 'bignumber.js';\nimport { StrategyAddressQueueIndex, VaultApi } from '../types';\nimport { getABIStrategiesHelper } from './abi';\nimport { values } from 'lodash';\n\nexport const USDC_DECIMALS = 6;\nexport const USDC_ADDRESS = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48';\n\nexport const isUSDC = (token: string): boolean => {\n    return token.toLowerCase() === USDC_ADDRESS;\n};\n\nexport const toUnits = (amount: BigNumberish, decimals: number): BN => {\n    return new BN(amount.toString()).div(new BN(10).pow(decimals));\n};\n\nexport const toDecimals = (amount: BigNumberish, decimals: number): BN => {\n    return new BN(amount.toString()).times(new BN(10).pow(decimals));\n};\n\nexport const extractAddress = (address: string) => {\n    return (\n        address.substring(0, 6) +\n        '...' +\n        address.substring(address.length - 4, address.length)\n    );\n};\n\nexport const extractText = (text: string) => {\n    return text.substring(0, 20) + '...';\n};\n\nexport const displayAmount = (amount: string, decimals: number): string => {\n    if (amount === constants.MaxUint256.toString()) return ' ∞';\n    const tokenBits = BigNumber.from(10).pow(decimals);\n\n    const display = new BN(amount)\n        .div(tokenBits.toString())\n        .toFormat(5)\n        // strip trailing zeros for display\n        .replace('.00000', '');\n\n    return display;\n};\n\nexport const msToHours = (ms: number): number => {\n    return Number((ms / (1000 * 60 * 60)).toFixed(2));\n};\n\nexport const sub = (amountA: string, amountB: string): string => {\n    return BigNumber.from(amountA).sub(amountB).toString();\n};\n\nexport const formatBPS = (val: string): string => {\n    return (parseInt(val, 10) / 100).toString();\n};\n\nexport const mapContractCalls = (result: any) => {\n    const mappedObj: any = {};\n    result.callsReturnContext.forEach(({ methodName, returnValues }: any) => {\n        if (returnValues && returnValues.length > 0) {\n            if (\n                typeof returnValues[0] === 'string' ||\n                typeof returnValues[0] === 'boolean' ||\n                typeof returnValues[0] === 'number'\n            ) {\n                mappedObj[methodName] = returnValues[0];\n            } else if (get(returnValues[0], 'type') === 'BigNumber') {\n                mappedObj[methodName] = BigNumber.from(\n                    returnValues[0]\n                ).toString();\n            }\n        }\n    });\n    return mappedObj;\n};\n\nexport const ORACLE_CONTRACT_ADDRESS =\n    '0x83d95e0D5f402511dB06817Aff3f9eA88224B030';\n\nexport const STRATEGIES_HELPER_CONTRACT_ADDRESS =\n    '0x2114d9a16da30fA5B59795e4f8C9eAd19E40f0a0';\n\nexport const createStrategiesHelperCallAssetStrategiesAddresses = (\n    vaults: VaultApi[]\n): any => {\n    const strategiesHelperCalls: any[] = vaults.map((vault) => {\n        return {\n            methodName: 'assetStrategiesAddresses',\n            methodParameters: [vault.address],\n            reference: STRATEGIES_HELPER_CONTRACT_ADDRESS,\n        };\n    });\n    return {\n        reference: STRATEGIES_HELPER_CONTRACT_ADDRESS,\n        contractAddress: STRATEGIES_HELPER_CONTRACT_ADDRESS,\n        abi: getABIStrategiesHelper(),\n        calls: strategiesHelperCalls,\n    };\n};\n\nexport const mapToStrategyAddressQueueIndex = (\n    vaultAddress: string,\n    strategiesHelperCallsResults: any\n): StrategyAddressQueueIndex[] => {\n    const strategiesHelperCallsReturnContext =\n        strategiesHelperCallsResults.results[STRATEGIES_HELPER_CONTRACT_ADDRESS]\n            .callsReturnContext;\n\n    const strategiesHelperCallsReturnContextList = values(\n        strategiesHelperCallsReturnContext\n    );\n    const strategiesQueuePosition = strategiesHelperCallsReturnContextList.find(\n        (item) =>\n            item.methodParameters[0].toLowerCase() ===\n            vaultAddress.toLowerCase()\n    );\n    let strategiesQueueIndexes: Array<StrategyAddressQueueIndex>;\n    if (strategiesQueuePosition === undefined) {\n        strategiesQueueIndexes = Array<{\n            queueIndex: number;\n            address: string;\n        }>();\n    } else {\n        strategiesQueueIndexes = strategiesQueuePosition?.returnValues.map(\n            (value: unknown, index: number) => {\n                return {\n                    queueIndex: index,\n                    address: (value as string).toLowerCase(),\n                };\n            }\n        );\n    }\n    return strategiesQueueIndexes;\n};\n\nexport const amountToString = (amount: BN): string => {\n    const amountInMMs = amount.div(new BN(1000000));\n    if (amountInMMs.gt(0)) {\n        return `${amountInMMs.toFixed(2)} MM`;\n    }\n    const amountInKs = amount.div(new BN(100000));\n    if (amountInKs.gt(0)) {\n        return `${amountInKs.toFixed(2)} K`;\n    }\n    return `${amount.toFixed(2)}`;\n};\n\nexport const amountToMMs = (amount: BN): number => {\n    return amount.div(new BN(1000000)).toNumber();\n};\n\n/*\n    Extreme\t> 100M\t5\n    Very High\tless than 100M\t4\n    High\tless than 50M\t3\n    Medium \tless than 10M\t2\n    Low\tless than 1M\t1\n*/\nexport const getTvlImpact = (tvl: number): number => {\n    if (tvl < 1) {\n        return 1;\n    }\n    if (tvl < 10) {\n        return 2;\n    }\n    if (tvl < 50) {\n        return 3;\n    }\n    if (tvl < 100) {\n        return 4;\n    }\n    return 5;\n};\n\nexport const getMedian = (arr: number[]) => {\n    const mid = Math.floor(arr.length / 2),\n        numbers = [...arr].sort((a, b) => a - b);\n    return arr.length % 2 !== 0\n        ? numbers[mid]\n        : (numbers[mid - 1] + numbers[mid]) / 2;\n};\n\nexport const getAverage = (arr: number[]) =>\n    arr.reduce((a, b) => a + b, 0) / arr.length;\n\nexport const flattenArrays = (arr: any[]): string[] => {\n    return arr.reduce((flat, toFlatten) => {\n        return flat.concat(\n            Array.isArray(toFlatten) ? flattenArrays(toFlatten) : toFlatten\n        );\n    }, []);\n};\n","import { MouseEvent, useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { extractAddress } from '../../../utils/commonUtils';\nimport Hidden from '@material-ui/core/Hidden';\nimport CallMadeIcon from '@material-ui/icons/CallMade';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FileCopy } from '@material-ui/icons';\nimport { Link } from '@material-ui/core';\n\ntype EtherScanLinkProps = {\n    address?: string;\n    transactionHash?: string;\n    dark?: boolean | false;\n    internalHref?: string;\n};\nconst EtherScanLink = (props: EtherScanLinkProps) => {\n    const { address, transactionHash, dark, internalHref } = props;\n    const [copied, setCopied] = useState(false);\n\n    useEffect(() => {\n        const timeId = setTimeout(() => {\n            setCopied(false);\n        }, 1000);\n\n        return () => clearTimeout(timeId);\n    }, [copied]);\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            button: {\n                margin: theme.spacing(1),\n            },\n            iconCall: {\n                backgroundColor: '#fff',\n                borderRadius: 3,\n                padding: 2,\n                boxShadow: '0 3px 6px 0 rgba(0,0,0,0.2)',\n            },\n            address: {\n                fontSize: '14px',\n                opacity: '0.7',\n                color: dark ? '#fff' : 'black',\n            },\n            copiedText: {\n                color: dark ? '#fff' : 'black',\n            },\n        })\n    );\n    const classes = useStyles();\n    let value = '';\n    let extractedValue = '';\n    if (address) {\n        value = address;\n        extractedValue = extractAddress(address);\n    }\n    if (transactionHash) {\n        value = transactionHash;\n        extractedValue = extractAddress(transactionHash);\n    }\n\n    const maskedValue = (\n        <Tooltip title={value} aria-label=\"Etherscan\">\n            <span>{extractedValue}</span>\n        </Tooltip>\n    );\n    const onCopyToClipboard = (e: MouseEvent<HTMLElement>) => {\n        e.stopPropagation();\n        navigator.clipboard.writeText(value);\n        setCopied(true);\n    };\n    const refLink = transactionHash\n        ? `https://etherscan.io/tx/${value}`\n        : `https://etherscan.io/address/${value}`;\n    return (\n        <span>\n            <span className={classes.address}>\n                {internalHref ? (\n                    <Link color=\"inherit\" href={internalHref}>\n                        <Hidden smUp>{`${maskedValue}`}</Hidden>\n                        <Hidden xsDown>{value}</Hidden>\n                    </Link>\n                ) : (\n                    <>\n                        <Hidden smUp>{maskedValue}</Hidden>\n                        <Hidden xsDown>{value}</Hidden>\n                    </>\n                )}\n            </span>\n            <Tooltip title=\"Copy to clipboard\" aria-label=\"Clipboard\">\n                <Button onClick={(e) => onCopyToClipboard(e)}>\n                    <FileCopy fontSize=\"inherit\" className={classes.iconCall} />\n                    {copied ? (\n                        <span className={classes.copiedText}> Copied</span>\n                    ) : (\n                        ''\n                    )}\n                </Button>\n            </Tooltip>\n            <Tooltip title=\"View on Etherscan\" aria-label=\"Etherscan\">\n                <Button href={refLink} target=\"_blank\">\n                    <CallMadeIcon\n                        fontSize=\"inherit\"\n                        className={classes.iconCall}\n                    />\n                </Button>\n            </Tooltip>\n        </span>\n    );\n};\n\nexport default EtherScanLink;\n","import { BigNumber } from 'ethers';\nimport * as moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\n\nmomentDurationFormatSetup(moment);\n\nexport const isValidTimestamp = (timestamp: string): boolean => {\n    return moment.unix(parseInt(timestamp)).isValid();\n};\n// Unix Timestamp (seconds)\nexport const toIsoString = (timestamp: string): string => {\n    if (!isValidTimestamp(timestamp)) return '';\n    const unixTimestamp = moment.unix(parseInt(timestamp)).utc();\n\n    return unixTimestamp.toISOString();\n};\n\n// Unix Timestamp (milliseconds)\nexport const unixMsToIsoString = (timestamp: string): string => {\n    if (!isValidTimestamp(timestamp)) return '';\n    const unixTimestamp = moment.default(parseInt(timestamp)).utc();\n\n    return unixTimestamp.toISOString();\n};\n\nexport const toHumanDateText = (timestamp: string): string => {\n    if (!isValidTimestamp(timestamp)) return '';\n    const unixTimestamp = moment.unix(parseInt(timestamp)).utc();\n    const now = moment.utc();\n\n    return moment\n        .duration(now.diff(unixTimestamp))\n        .format('d [days] hh [hours] m [minutes]', { trim: false });\n};\n\ninterface LastReportLike {\n    lastReportText: string;\n    lastReport: string | BigNumber;\n}\n\nexport const displayLastReport = (value?: LastReportLike): string => {\n    return value && value.lastReport\n        ? `${value.lastReportText} (${unixMsToIsoString(\n              value.lastReport.toString()\n          )})`\n        : '';\n};\n","import { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Hidden from '@material-ui/core/Hidden';\nimport EtherScanLink from '../../common/EtherScanLink';\nimport {\n    extractText,\n    displayAmount,\n    formatBPS,\n} from '../../../utils/commonUtils';\nimport { toHumanDateText } from '../../../utils/dateUtils';\n\nimport { Strategy, Vault } from '../../../types';\nimport Grid from '@material-ui/core/Grid';\n\ntype StrategistListProps = {\n    vault: Vault;\n    dark: boolean;\n    expand?: boolean;\n};\n\nexport const StrategistList = (props: StrategistListProps) => {\n    const { vault, expand = true } = props;\n    const config = vault.configOK;\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            root: {},\n            rootGrid: {\n                width: '100%',\n            },\n            address: {\n                fontSize: '14px',\n                opacity: '0.6',\n                color: '#ffff',\n            },\n            text: {\n                color: props.dark ? '#ffff' : 'black',\n                fontFamily: 'Open Sans',\n                lineHeight: '27px',\n                fontSize: '18px',\n                margin: 10,\n            },\n            iconCall: {\n                backgroundColor: 'white',\n                borderRadius: 3,\n                padding: 2,\n            },\n            list: {\n                background: 'transparent',\n                border: 'none',\n            },\n            accordion: {\n                background: props.dark ? (config ? '#040e20' : '#0552aa') : '',\n                borderRadius: 5,\n                margin: 10,\n            },\n            link: {\n                color: props.dark ? '#ffff' : 'black',\n                '&:hover': {\n                    fontWeight: 600,\n                },\n            },\n            heading: {\n                fontSize: theme.typography.pxToRem(15),\n                fontWeight: theme.typography.fontWeightRegular,\n            },\n            expandIcon: {\n                color: props.dark ? '#ffff' : 'black',\n            },\n            paper: {\n                padding: theme.spacing(2),\n                textAlign: 'center',\n                color: theme.palette.text.secondary,\n            },\n        })\n    );\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"body2\" className={classes.text} component=\"p\">\n                Strategies\n            </Typography>\n            {vault.strategies &&\n                vault.strategies.map((strategy: Strategy, index: number) => (\n                    <Accordion\n                        key={index}\n                        className={classes.accordion}\n                        defaultExpanded={expand}\n                    >\n                        <AccordionSummary\n                            expandIcon={\n                                <ExpandMoreIcon\n                                    className={classes.expandIcon}\n                                />\n                            }\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Grid className={classes.rootGrid}>\n                                <Grid item md={12} xs={12}>\n                                    <Grid\n                                        container\n                                        spacing={1}\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Grid item md={4} xs={12}>\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                gutterBottom\n                                            >\n                                                <a\n                                                    className={classes.link}\n                                                    href={`/vault/${vault.address}/strategy/${strategy.address}`}\n                                                    rel=\"noreferrer\"\n                                                >\n                                                    <Hidden smUp>\n                                                        {strategy.name.length >\n                                                        20\n                                                            ? extractText(\n                                                                  strategy.name\n                                                              )\n                                                            : strategy.name}\n                                                    </Hidden>\n\n                                                    <Hidden xsDown>\n                                                        {strategy.name}\n                                                    </Hidden>\n                                                </a>\n                                            </Typography>\n                                        </Grid>\n                                        <Hidden xsDown>\n                                            {' '}\n                                            <Grid item md={8} xs={6}>\n                                                <EtherScanLink\n                                                    address={strategy.address}\n                                                    dark={props.dark}\n                                                />\n                                            </Grid>\n                                        </Hidden>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Grid container spacing={1}>\n                                <Hidden smUp>\n                                    {' '}\n                                    <Typography>\n                                        <EtherScanLink\n                                            address={strategy.address}\n                                            dark={props.dark}\n                                        />\n                                    </Typography>\n                                </Hidden>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={3}\n                                    className={classes.link}\n                                >\n                                    Time Since Last Report:\n                                    <br />{' '}\n                                    {toHumanDateText(\n                                        strategy.lastReport.toString()\n                                    )}\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={2}\n                                    className={classes.link}\n                                >\n                                    Total debt\n                                    <br />\n                                    {vault &&\n                                        displayAmount(\n                                            strategy.totalDebt.toString(),\n                                            0\n                                        )}\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={2}\n                                    className={classes.link}\n                                >\n                                    Debt ratio\n                                    <br />\n                                    {formatBPS(strategy.debtRatio.toString())} %\n                                </Grid>\n                            </Grid>\n                        </AccordionDetails>\n                    </Accordion>\n                ))}\n        </div>\n    );\n};\n","import { withStyles } from '@material-ui/core/styles';\nimport { Tooltip } from '@material-ui/core';\n\nexport const HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 700,\n        fontSize: theme.typography.pxToRem(12),\n        border: '1px solid #dadde9',\n    },\n}))(Tooltip);\n","import { Fragment } from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport { ReportProblem } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\n\nimport { Vault } from '../../../types';\nimport { StrategistList } from '../StrategistList';\nimport EtherScanLink from '../../common/EtherScanLink';\nimport { HtmlTooltip } from '../../common/HtmlTooltip';\n\ntype VaultItemListProps = {\n    vault: Vault;\n    key: number;\n};\n\nexport const VaultItemList = (props: VaultItemListProps) => {\n    const { vault } = props;\n    const config = vault.configOK;\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            root: {\n                width: '100%',\n                margin: '5px',\n                borderRadius: '5px',\n            },\n            link: {\n                color: '#fff',\n                textDecoration: 'none',\n                '&:hover': {\n                    textDecoration: 'underline',\n                },\n            },\n            textVault: {\n                fontFamily: 'Open Sans',\n                lineHeight: '27px',\n                fontSize: '18px',\n                '&:hover': {\n                    fontSize: 19,\n                },\n            },\n            warningIcon: {\n                borderRadius: 3,\n                padding: 1,\n                boxShadow: '0px 0px 0px 0 rgba(0,0,0,0.2)',\n            },\n            expandIcon: {\n                color: '#fff',\n            },\n            list: {\n                padding: 0,\n            },\n            alert: {\n                background: 'transparent',\n                color: 'red',\n                fontWeight: 400,\n            },\n\n            divider: {\n                background: '#1d265f',\n                opacity: '0.3',\n                marginLeft: '10px',\n                marginRight: '10px',\n            },\n            accordion: {\n                background: config ? '#0a1d3f' : '#006ae3',\n                borderRadius: '8px',\n                color: '#ffffff',\n                marginTop: 10,\n            },\n            heading: {\n                fontSize: theme.typography.pxToRem(15),\n                fontWeight: theme.typography.fontWeightRegular,\n            },\n            paper: {\n                padding: theme.spacing(2),\n            },\n        })\n    );\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <MuiAccordion className={classes.accordion}>\n                <AccordionSummary\n                    expandIcon={\n                        <ExpandMoreIcon className={classes.expandIcon} />\n                    }\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Grid container className={classes.root} spacing={2}>\n                        <Grid item md={12} xs={12}>\n                            <Grid\n                                container\n                                spacing={1}\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item md={1} xs={3}>\n                                    {vault && vault.icon ? (\n                                        <ListItemAvatar>\n                                            {\n                                                <Avatar\n                                                    alt={vault.icon}\n                                                    src={vault.icon}\n                                                />\n                                            }\n                                        </ListItemAvatar>\n                                    ) : (\n                                        <ListItemAvatar>\n                                            <Avatar\n                                                style={{\n                                                    color: 'transparent',\n                                                }}\n                                            >\n                                                .\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                    )}\n                                </Grid>\n                                <Grid item md={5} xs={9}>\n                                    {vault.configErrors ? (\n                                        <HtmlTooltip\n                                            title={\n                                                <Fragment>\n                                                    <Typography color=\"inherit\">\n                                                        {\n                                                            vault.configErrors\n                                                                .length\n                                                        }{' '}\n                                                        warning(s) found\n                                                    </Typography>\n                                                    {vault.configErrors.map(\n                                                        (error, index) => (\n                                                            <em key={index}>\n                                                                {error}\n                                                                <br />\n                                                            </em>\n                                                        )\n                                                    )}\n                                                </Fragment>\n                                            }\n                                        >\n                                            <ReportProblem\n                                                className={classes.warningIcon}\n                                            />\n                                        </HtmlTooltip>\n                                    ) : (\n                                        ''\n                                    )}\n                                    <a\n                                        className={classes.link}\n                                        href={`/vault/${vault.address}`}\n                                        rel=\"noreferrer\"\n                                    >\n                                        <span className={classes.textVault}>\n                                            {' '}\n                                            {vault.name}{' '}\n                                            {` (${vault.strategies.length}  strats)`}\n                                        </span>\n                                    </a>\n                                </Grid>\n                                <Hidden xsDown>\n                                    {' '}\n                                    <Grid item md={6} xs={9}>\n                                        {' '}\n                                        <EtherScanLink\n                                            address={vault.address}\n                                            dark={true}\n                                        />\n                                    </Grid>\n                                </Hidden>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </AccordionSummary>\n                <Hidden smUp>\n                    <Grid container className={classes.root} spacing={2}>\n                        <Grid item md={8} xs={12}>\n                            {' '}\n                            <EtherScanLink\n                                address={vault.address}\n                                dark={true}\n                            />\n                        </Grid>\n                    </Grid>\n                </Hidden>\n                <Divider className={classes.divider} />\n                <AccordionDetails>\n                    <Container>\n                        <StrategistList vault={vault} dark={true} />\n                    </Container>\n                </AccordionDetails>\n            </MuiAccordion>\n        </div>\n    );\n};\n","import { Multicall } from 'ethereum-multicall';\nimport { utils, Contract } from 'ethers';\nimport { get, memoize } from 'lodash';\nimport { Provider } from '@ethersproject/abstract-provider';\nimport { Vault, Strategy } from '../types';\nimport VaultABI from '../contracts/Vault';\nimport { mapContractCalls } from './commonUtils';\n\nconst VAULT_VIEW_METHODS = [\n    'apiVersion',\n    'management',\n    'governance',\n    'guardian',\n    'depositLimit',\n    'totalAssets',\n    'debtRatio',\n    'totalDebt',\n    'lastReport',\n    'rewards',\n    'symbol',\n    'name',\n    'managementFee',\n    'performanceFee',\n    'emergencyShutdown',\n];\n\nconst _getVault = async (\n    address: string,\n    provider: Provider\n): Promise<Vault> => {\n    if (!address || !utils.isAddress(address)) {\n        throw new Error('Error: expect a valid vault address');\n    }\n    const multicall = new Multicall({ ethersProvider: provider });\n\n    const vaultContract = new Contract(address, VaultABI as any, provider);\n    const vaultCall = [\n        {\n            reference: address,\n            contractAddress: address,\n            abi: VaultABI,\n            calls: VAULT_VIEW_METHODS.map((method) => ({\n                reference: method,\n                methodName: method,\n                methodParameters: [],\n            })),\n        },\n    ];\n\n    const results = await multicall.call(vaultCall);\n    return {\n        ...mapContractCalls(results.results[address]),\n        address,\n        strategies: [],\n    };\n};\n\nexport const getVault = memoize(_getVault);\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport MuiBreadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Typography } from '@material-ui/core';\nimport { extractAddress } from '../../../utils/commonUtils';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        crumbs: {\n            maxWidth: '80%',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginBottom: 15,\n            marginTop: 15,\n            color: '#fff',\n        },\n        text: {\n            color: '#ffff',\n            fontWeight: 'bolder',\n        },\n    })\n);\ntype BreadCrumbsProps = {\n    vaultId: string;\n    strategyId?: string;\n};\nconst BreadCrumbs = (props: BreadCrumbsProps) => {\n    const { vaultId, strategyId } = props;\n    const classes = useStyles();\n\n    let strategyLevel;\n    if (strategyId !== undefined) {\n        strategyLevel = (\n            <Link\n                color=\"inherit\"\n                href={`/vault/${vaultId.toLowerCase()}/strategy/${strategyId.toLowerCase()}`}\n            >\n                <Typography className={classes.text}>\n                    <Hidden smUp>{`${extractAddress(\n                        strategyId.toLowerCase()\n                    )}`}</Hidden>\n                    <Hidden xsDown>{strategyId.toLowerCase()}</Hidden>\n                </Typography>\n            </Link>\n        );\n    }\n\n    return (\n        <MuiBreadcrumbs className={classes.crumbs}>\n            <Link color=\"inherit\" href=\"/\">\n                vaults\n            </Link>\n            <Link color=\"inherit\" href={`/vault/${vaultId.toLowerCase()}`}>\n                <Hidden smUp>{`${extractAddress(\n                    vaultId.toLowerCase()\n                )}`}</Hidden>\n                <Hidden xsDown>{vaultId.toLowerCase()}</Hidden>\n            </Link>\n            {strategyLevel}\n        </MuiBreadcrumbs>\n    );\n};\n\nexport default BreadCrumbs;\n","import { ContractCallReturnContext } from 'ethereum-multicall';\nimport { BigNumber } from 'ethers';\nimport { sortBy } from 'lodash';\nimport { StrategyParams, Strategy, Vault } from '../types';\nimport { isValidTimestamp, toIsoString, toHumanDateText } from './dateUtils';\n\nconst STRATEGIES_METHOD = 'strategies';\n\nconst STRAT_PARAMS_V030: string[] = [\n    'performanceFee',\n    'activation',\n    'debtRatio',\n    'rateLimit',\n    'lastReport',\n    'totalDebt',\n    'totalGain',\n    'totalLoss',\n];\n\nconst STRAT_PARAMS_V032: string[] = [\n    'performanceFee',\n    'activation',\n    'debtRatio',\n    'minDebtPerHarvest',\n    'maxDebtPerHarvest',\n    'lastReport',\n    'totalDebt',\n    'totalGain',\n    'totalLoss',\n];\n\nconst mapVersions = new Map<string, string[]>();\nmapVersions.set('0.3.0', STRAT_PARAMS_V030);\nmapVersions.set('0.3.1', STRAT_PARAMS_V030);\nmapVersions.set('0.3.2', STRAT_PARAMS_V032);\nmapVersions.set('0.3.3', STRAT_PARAMS_V032);\nmapVersions.set('0.3.3.Edited', STRAT_PARAMS_V030);\n\nexport type ChartSeriesData = {\n    name: string;\n    y: number;\n    sliced?: boolean;\n    selected?: boolean;\n};\n\nexport const getChartData = (vault: Vault): ChartSeriesData[] => {\n    const strategiesAllocations = vault.strategies.map(({ name, params }) => {\n        console.log('debtratio', params.debtRatio.toString());\n        return {\n            name,\n            y: Number(\n                (parseInt(params.debtRatio.toString(), 10) / 100).toFixed(2)\n            ),\n        };\n    });\n\n    const debtUsage = parseInt(vault.debtUsage) / 100;\n\n    if (debtUsage < 100) {\n        strategiesAllocations.push({\n            name: 'Not Allocated',\n            y: Number((100 - debtUsage).toFixed(2)),\n        });\n    }\n\n    const sortedAllocs = sortBy(strategiesAllocations, [\n        'y',\n    ]) as ChartSeriesData[];\n\n    sortedAllocs[sortedAllocs.length - 1].sliced = true;\n    sortedAllocs[sortedAllocs.length - 1].selected = true;\n\n    return sortedAllocs;\n};\n\nconst mapParamDisplayValues = (param: any): StrategyParams => {\n    if (param.activation && isValidTimestamp(param.activation)) {\n        param.activation = toIsoString(param.activation);\n    }\n    if (param.lastReport && isValidTimestamp(param.lastReport)) {\n        const { lastReport } = param;\n        param.lastReport = toIsoString(lastReport);\n        param.lastReportText = toHumanDateText(lastReport);\n    }\n\n    return param;\n};\n\nexport const getTotalDebtUsage = (strategies: Strategy[]): string => {\n    let debtUsed = BigNumber.from(0);\n    strategies.forEach(({ params }) => {\n        debtUsed = debtUsed.add(params.debtRatio);\n    });\n    return debtUsed.toString();\n};\n\nexport const mapStrategyParams = (\n    result: ContractCallReturnContext,\n    apiVersion: string\n): StrategyParams => {\n    const params: any = {};\n    result.callsReturnContext.forEach(({ methodName, returnValues }) => {\n        if (\n            methodName === STRATEGIES_METHOD &&\n            returnValues &&\n            returnValues.length > 0\n        ) {\n            // TODO: resolve version ABI based on vault instead of strategy\n            const props = mapVersions.get(apiVersion) || STRAT_PARAMS_V032;\n\n            returnValues.forEach((val, i) => {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                params[props[i]] = BigNumber.from(val).toString();\n            });\n        }\n    });\n\n    return mapParamDisplayValues(params);\n};\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport { Vault } from '../../../../types';\nimport { getChartData } from '../../../../utils/strategyParams';\n\ninterface PieProps {\n    vault: Vault;\n}\n\nconst Pie = (props: PieProps) => {\n    const { vault } = props;\n\n    const options = {\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie',\n        },\n        title: {\n            text: `${vault.name} Debt Allocation`,\n        },\n        tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',\n        },\n        accessibility: {\n            point: {\n                valueSuffix: '%',\n            },\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: '<b>{point.name}</b>: {point.percentage:.2f} %',\n                },\n            },\n        },\n        series: [\n            {\n                name: 'Strategies',\n                colorByPoint: true,\n                data: getChartData(vault),\n            },\n        ],\n    };\n\n    return (\n        <div>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n        </div>\n    );\n};\n\nexport default Pie;\n","import { Vault } from '../types';\n\nexport type VaultCheck = {\n    checkOK: boolean;\n    errors?: string[];\n};\n\n// ychad.eth\nconst GOVERNANCE = '0xfeb4acf3df3cdea7399794d0869ef76a6efaff52';\n// dev.ychad.eth\nconst GUARDIAN = '0x846e211e8ba920b353fb717631c015cf04061cc9';\n// brain.ychad.eth\nconst MANAGEMENT = '0x16388463d60FFE0661Cf7F1f31a7D658aC790ff7';\n// treasury.ychad.eth\nconst TREASURY = '0x93a62da5a14c80f265dabc077fcee437b1a0efde';\n\nconst MANAGEMENT_FEE = 200;\n\nconst PERF_FEE = 2000;\n\nconst addressMap = new Map<string, string>();\naddressMap.set(GOVERNANCE.toLowerCase(), 'ychad.eth');\naddressMap.set(GUARDIAN.toLowerCase(), 'dev.ychad.eth');\naddressMap.set(MANAGEMENT.toLowerCase(), 'brain.ychad.eth');\naddressMap.set(TREASURY.toLowerCase(), 'treasury.ychad.eth');\n\nexport const checkLabel = (address: string) => {\n    if (addressMap.has(address.toLowerCase())) {\n        return addressMap.get(address.toLowerCase());\n    }\n    return address;\n};\n\nconst INCOMPATIBLE_VERSIONS_API = new Set(['0.3.0', '0.3.1']);\n\nexport const isLegacyVault = (apiVersion: string): boolean => {\n    return INCOMPATIBLE_VERSIONS_API.has(apiVersion);\n};\n\nconst checks = [\n    {\n        field: 'governance',\n        validate: (value: any): boolean =>\n            typeof value === 'string' &&\n            value.toLowerCase() === GOVERNANCE.toLowerCase(),\n        error: 'value incorrect for governance',\n    },\n    {\n        field: 'guardian',\n        validate: (value: any): boolean =>\n            typeof value === 'string' &&\n            value.toLowerCase() === GUARDIAN.toLowerCase(),\n        error: 'value incorrect for guardian',\n    },\n    {\n        field: 'management',\n        validate: (value: any): boolean =>\n            typeof value === 'string' &&\n            value.toLowerCase() === MANAGEMENT.toLowerCase(),\n        error: 'value incorrect for management',\n    },\n    {\n        field: 'managementFee',\n        validate: (value: any): boolean =>\n            typeof value === 'number' && value === MANAGEMENT_FEE,\n        error: 'value incorrect for management fee',\n    },\n    {\n        field: 'performanceFee',\n        validate: (value: any): boolean =>\n            typeof value === 'number' && value === PERF_FEE,\n        error: 'value incorrect for performance fee',\n    },\n    {\n        field: 'rewards',\n        validate: (value: any): boolean =>\n            typeof value === 'string' &&\n            value.toLowerCase() === TREASURY.toLowerCase(),\n        error: 'value incorrect for rewards',\n    },\n];\n\nexport const vaultChecks = (vault: Vault): Vault => {\n    const result: VaultCheck = { checkOK: true };\n\n    checks.forEach((check) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (!check.validate(vault[check.field])) {\n            result.checkOK = false;\n            result.errors = result.errors\n                ? [...result.errors, check.error]\n                : [check.error];\n        }\n    });\n\n    return {\n        ...vault,\n        configOK: result.checkOK,\n        configErrors: result.errors,\n    };\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiTable from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nconst Table = (props: any) => {\n    const classes = useStyles();\n\n    return (\n        <TableContainer component={Paper}>\n            <MuiTable className={classes.table} aria-label=\"simple table\">\n                {props.children}\n            </MuiTable>\n        </TableContainer>\n    );\n};\nexport default Table;\n","import {\n    makeStyles,\n    createStyles,\n    withStyles,\n    Theme,\n} from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            height: 10,\n            borderRadius: 5,\n        },\n        colorPrimary: {\n            backgroundColor:\n                theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n        },\n        bar: {\n            borderRadius: 5,\n            backgroundColor: '#1a90ff',\n        },\n    })\n)(LinearProgress);\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst ProgressBars = (props: any) => {\n    const classes = useStyles();\n    const vault = props.vault;\n    const value =\n        vault && vault.depositLimit > 0\n            ? vault.totalAssets / vault.depositLimit\n            : 1;\n    const p = value * 100;\n    const f = p ? parseInt(p.toFixed(0)) : 0;\n    return (\n        <div className={classes.root}>\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box width=\"100%\" mr={1}>\n                    <BorderLinearProgress variant=\"determinate\" value={f} />\n                </Box>\n                <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >{`${f}%`}</Typography>\n            </Box>\n        </div>\n    );\n};\n\nexport default ProgressBars;\n","import React from 'react';\nimport MediaQuery from 'react-responsive';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Typography } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\n\nimport TokenPrice from '../../common/TokenPrice';\nimport { checkLabel } from '../../../utils/checks';\nimport { formatBPS, displayAmount, sub } from '../../../utils/commonUtils';\nimport Table from '../../common/Table';\nimport ProgressBars from '../../common/ProgressBar';\nimport { Vault } from '../../../types';\nimport { toHumanDateText } from '../../../utils/dateUtils';\n\ninterface VaultDescriptionProps {\n    vault: Vault;\n}\n\nexport const VaultDescription = (props: VaultDescriptionProps) => {\n    const { vault } = props;\n\n    const renderErrors = () =>\n        vault.configErrors &&\n        vault.configErrors.map((message: string) => {\n            return (\n                <div key={message} style={{ color: '#ff6c6c' }}>\n                    {message}\n                </div>\n            );\n        });\n    const apiVersion = vault.apiVersion;\n    const emergencyShutDown = !vault.emergencyShutdown ? (\n        <Chip\n            label=\"ok\"\n            clickable\n            style={{\n                color: '#fff',\n                backgroundColor: 'rgba(1,201,147,1)',\n            }}\n        />\n    ) : (\n        <Chip\n            label=\"Emergency\"\n            clickable\n            style={{\n                color: '#fff',\n                backgroundColor: '#ff6c6c',\n            }}\n        />\n    );\n    const rewards = checkLabel(vault.rewards);\n    const governance = checkLabel(vault.governance);\n    const management = checkLabel(vault.management);\n    const guardian = checkLabel(vault.guardian);\n    const totalAsset = displayAmount(vault.totalAssets, 0) + ' ' + vault.symbol;\n    const totalDebt = displayAmount(vault.totalDebt, 0) + ' ' + vault.symbol;\n    const unallocated =\n        displayAmount(sub(vault.totalAssets, vault.totalDebt), 0) +\n        ' ' +\n        vault.symbol;\n    const vaultList = (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n            Deposit limit :\n            {displayAmount(vault.depositLimit, 0) + ' ' + vault.symbol}\n        </Typography>\n    );\n    const managementFee = formatBPS(vault.managementFee);\n    const performanceFee = formatBPS(vault.performanceFee);\n    const debtUsage = formatBPS(vault.debtUsage);\n    const debtRatio = formatBPS(vault.debtRatio);\n    const lastReportText = toHumanDateText(vault.lastReport);\n    const renderError = renderErrors();\n\n    return (\n        <React.Fragment>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            API Version:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {apiVersion}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{apiVersion}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            Emergency shut down:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {emergencyShutDown}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{emergencyShutDown}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            Governance:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {governance}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{governance}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            Management:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {management}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{management}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>\n                            Guardian:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {guardian}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{guardian}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            Rewards:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {rewards}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{rewards}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            Assets:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                Total asset:\n                                {totalAsset}\n                                <ProgressBars vault={vault} />\n                                {vaultList}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>\n                                Total asset:\n                                {totalAsset}\n                                <ProgressBars vault={vault} />\n                                {vaultList}\n                            </TableCell>\n                        </MediaQuery>\n                    </TableRow>\n                    {/* {vault && (\n                        <TokenPrice\n                            label=\"Total Assets (USD):\"\n                            token={vault.token}\n                            amount={vault.totalAssets}\n                        />\n                    )} */}\n                    <TableRow>\n                        <TableCell>\n                            Management fee:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {managementFee}%\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{managementFee}%</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            Performance fee:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {performanceFee}%\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{performanceFee}%</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            Time Since Last Report:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {lastReportText}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{lastReportText}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>\n                            Total Debt:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {totalDebt}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{totalDebt}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>\n                            {`(Total Asset - Total Debt):`}\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {unallocated}\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{unallocated}</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>\n                            Total Debt Ratio:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {debtRatio}%\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{debtRatio}%</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>\n                            Debt Usage:\n                            <MediaQuery query=\"(max-device-width: 1224px)\">\n                                {debtUsage}%\n                            </MediaQuery>\n                        </TableCell>\n                        <MediaQuery query=\"(min-device-width: 1224px)\">\n                            <TableCell>{debtUsage}%</TableCell>\n                        </MediaQuery>\n                    </TableRow>\n\n                    {vault && vault.configOK === false ? (\n                        <TableRow\n                            style={{\n                                border: '2px solid #ff6c6c',\n                            }}\n                        >\n                            <TableCell>\n                                Config Warnings:\n                                <MediaQuery query=\"(max-device-width: 1224px)\">\n                                    {renderError}\n                                </MediaQuery>\n                            </TableCell>\n                            <MediaQuery query=\"(min-device-width: 1224px)\">\n                                <TableCell>{renderError}</TableCell>\n                            </MediaQuery>\n                        </TableRow>\n                    ) : null}\n                </TableHead>\n            </Table>\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst ReactHelmet = (props: any) => {\n    return (\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>{props.title}</title>\n        </Helmet>\n    );\n};\n\nexport default ReactHelmet;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAsync } from 'react-use';\n\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport { getVault } from '../../../utils/vaults';\nimport BreadCrumbs from '../SingleStrategy/BreadCrumbs';\nimport Pie from '../Charts/Pie';\nimport { StrategistList } from '../StrategistList';\nimport { VaultDescription } from './VaultDescription';\nimport EtherScanLink from '../../common/EtherScanLink';\nimport ReactHelmet from '../../common/ReactHelmet';\nimport { useWeb3Context } from '../../../providers/Web3ContextProvider';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\ninterface ParamTypes {\n    vaultId: string;\n}\nexport const SingleVault = () => {\n    const { provider } = useWeb3Context();\n    const { vaultId } = useParams<ParamTypes>();\n    const [value, setValue] = React.useState(0);\n    const { value: vault, loading } = useAsync(async () => {\n        if (!provider) {\n            return;\n        }\n\n        return await getVault(vaultId, provider);\n    }, [vaultId]);\n\n    const useStyles = makeStyles((theme: Theme) => ({\n        root: {\n            [theme.breakpoints.down('sm')]: {\n                maxWidth: '100%',\n            },\n            [theme.breakpoints.up('md')]: {\n                maxWidth: '80%',\n            },\n            [theme.breakpoints.up('lg')]: {\n                maxWidth: '80%',\n            },\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            border: !vault?.configOK ? '5px solid #ff6c6c' : '',\n        },\n        crumbs: {\n            maxWidth: '80%',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginBottom: 15,\n            marginTop: 15,\n            color: '#fff',\n        },\n        text: {\n            color: '#ffff',\n            fontWeight: 'bolder',\n        },\n        row: {\n            background: '#0a1d3f',\n        },\n        gridContainer: {\n            flexGrow: 1,\n        },\n\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n    }));\n    const classes = useStyles();\n    const handleChange = (event: any, newValue: number) => {\n        setValue(newValue);\n    };\n\n    // let content =\n\n    return (\n        <React.Fragment>\n            <ReactHelmet title={vault?.name} />\n            <BreadCrumbs vaultId={vaultId} />\n            <Card className={classes.root}>\n                {loading ? (\n                    <div\n                        style={{\n                            textAlign: 'center',\n                            marginTop: '100px',\n                        }}\n                    >\n                        <CircularProgress />\n                        <Typography>Loading vault..</Typography>\n                    </div>\n                ) : (\n                    <React.Fragment>\n                        <CardHeader\n                            avatar={\n                                <Avatar src={vault?.icon} aria-label=\"recipe\" />\n                            }\n                            title={vault?.name}\n                            subheader={\n                                <EtherScanLink address={vault?.address} />\n                            }\n                        />\n\n                        <Tabs\n                            value={value}\n                            onChange={handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            variant=\"scrollable\"\n                            scrollButtons=\"auto\"\n                            aria-label=\"scrollable auto tabs example\"\n                        >\n                            <Tab label=\"Details\" {...a11yProps(0)} />\n                            <Tab label=\"Allocation\" {...a11yProps(1)} />\n                            <Tab label=\"Strategies\" {...a11yProps(2)} />\n                        </Tabs>\n\n                        <TabPanel value={value} index={0}>\n                            {vault && <VaultDescription vault={vault} />}\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            {vault?.strategies.length && (\n                                <div>\n                                    <Pie vault={vault} />\n                                </div>\n                            )}\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            {vault?.strategies.length && (\n                                <div>\n                                    <StrategistList\n                                        vault={vault}\n                                        dark={false}\n                                    />\n                                </div>\n                            )}\n                        </TabPanel>\n                    </React.Fragment>\n                )}\n            </Card>\n        </React.Fragment>\n    );\n};\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n            fontFamily: 'open sans',\n            FontSize: '16px',\n            fontWeight: 400,\n            lineHeight: '24px',\n            fontColor: 'rgb(255, 255, 255)',\n        },\n    })\n);\n\nexport const NavBar = () => {\n    const classes = useStyles();\n\n    return (\n        <AppBar\n            position=\"static\"\n            style={{ background: 'transparent', boxShadow: 'none' }}\n        >\n            <Toolbar>\n                <IconButton\n                    edge=\"start\"\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    href=\"/\"\n                >\n                    Badger Watch\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import MuiCardContent from '@material-ui/core/CardContent';\nimport Table from '../../common/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MediaQuery from 'react-responsive';\n\ntype KeyValue = {\n    key: string;\n    value: string | JSX.Element;\n    render?: boolean;\n};\n\ntype CardContentProps = {\n    data: KeyValue[];\n};\n\nconst CardContent = (props: CardContentProps) => {\n    const { data } = props;\n\n    return (\n        <MuiCardContent>\n            <Table>\n                <TableHead>\n                    {data.map((res: KeyValue, index: number) => {\n                        const { render = false } = res;\n                        if (render) {\n                            return res.value;\n                        }\n                        return (\n                            <TableRow key={index}>\n                                <TableCell>\n                                    {res.key}\n                                    <MediaQuery query=\"(max-device-width: 1224px)\">\n                                        <br />\n                                        {res.value}\n                                    </MediaQuery>{' '}\n                                </TableCell>\n                                <MediaQuery query=\"(min-device-width: 1224px)\">\n                                    {' '}\n                                    <TableCell>{res.value}</TableCell>\n                                </MediaQuery>\n                            </TableRow>\n                        );\n                    })}\n                </TableHead>\n            </Table>\n        </MuiCardContent>\n    );\n};\n\nexport default CardContent;\n","import { getOracleInstance } from './abi';\nimport BigNumber from 'bignumber.js';\nimport { Token } from '../types';\nimport { BigNumberish } from 'ethers';\nimport { toUnits, USDC_DECIMALS } from './commonUtils';\n\nexport const getTokenUnitPrice = async (token: Token): Promise<BigNumber> => {\n    try {\n        const oracle = getOracleInstance();\n        const result = await oracle.getPriceUsdcRecommended(token.address);\n        return toUnits(result, USDC_DECIMALS);\n    } catch (error) {\n        console.error(error);\n        return new BigNumber(0);\n    }\n};\n\nexport const getTokenUnitPrices = async (\n    tokens: Token[]\n): Promise<BigNumber[]> => {\n    const result = new Array<BigNumber>();\n    for (const token of tokens) {\n        result.push(await getTokenUnitPrice(token));\n    }\n    return result;\n};\n\nexport const getTokenPrice = async (\n    token: Token,\n    amount: BigNumberish\n): Promise<BigNumber> => {\n    try {\n        const oracle = getOracleInstance();\n        const result = await oracle['getNormalizedValueUsdc(address,uint256)'](\n            token.address,\n            amount.toString()\n        );\n        return toUnits(result, USDC_DECIMALS);\n    } catch (error) {\n        console.error(error);\n        return new BigNumber(0);\n    }\n};\n","import { Fragment, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { HtmlTooltip } from '../HtmlTooltip';\nimport { HelpOutlineRounded } from '@material-ui/icons';\nimport MediaQuery from 'react-responsive';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { getTokenPrice, getTokenUnitPrice } from '../../../utils/oracle';\nimport BigNumber from 'bignumber.js';\nimport { Token } from '../../../types';\nimport { BigNumberish } from 'ethers';\nimport {\n    displayAmount,\n    isUSDC,\n    toUnits,\n    USDC_DECIMALS,\n} from '../../../utils/commonUtils';\nimport { Typography, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    helpIcon: {\n        verticalAlign: 'middle',\n    },\n});\n\ntype TokenPriceProps = {\n    token: Token;\n    label?: string;\n    loadingLabel?: string;\n    amount: BigNumberish;\n};\n\nconst TokenPrice = (props: TokenPriceProps) => {\n    const [tokenPrice, setTokenPrice] = useState<BigNumber>();\n    const [tokenUnitPrice, setTokenUnitPrice] = useState<BigNumber>();\n    const {\n        label = 'Token Price (USD):',\n        loadingLabel = `Getting ${props.token.symbol}/USDC price...`,\n    } = props;\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (isUSDC(props.token.address)) {\n            setTokenUnitPrice(new BigNumber(1));\n            setTokenPrice(toUnits(props.amount.toString(), USDC_DECIMALS));\n        } else {\n            getTokenUnitPrice(props.token).then((unitPrice: BigNumber) => {\n                setTokenUnitPrice(unitPrice);\n            });\n            getTokenPrice(props.token, props.amount.toString()).then(\n                (usdcAmount: BigNumber) => {\n                    setTokenPrice(usdcAmount);\n                }\n            );\n        }\n    }, []);\n\n    if (!tokenPrice || !tokenUnitPrice) {\n        return (\n            <TableRow>\n                <TableCell>\n                    {label}\n                    <MediaQuery query=\"(max-device-width: 1224px)\">\n                        <CircularProgress color=\"inherit\" size=\"0.6rem\" />{' '}\n                        {loadingLabel}\n                    </MediaQuery>\n                </TableCell>\n                <MediaQuery query=\"(min-device-width: 1224px)\">\n                    <TableCell>\n                        <CircularProgress color=\"inherit\" size=\"0.6rem\" />{' '}\n                        {loadingLabel}\n                    </TableCell>\n                </MediaQuery>\n            </TableRow>\n        );\n    }\n    const tooltip = (\n        <HtmlTooltip\n            title={\n                <Fragment>\n                    <Typography color=\"inherit\">\n                        {'Token Unit Price'}\n                    </Typography>\n                    {`1 ${props.token.symbol} ~= ${tokenUnitPrice?.toFixed(\n                        4\n                    )} USDC`}\n                </Fragment>\n            }\n        >\n            <HelpOutlineRounded fontSize=\"small\" className={classes.helpIcon} />\n        </HtmlTooltip>\n    );\n\n    return (\n        <TableRow>\n            <TableCell>\n                {label}\n                <MediaQuery query=\"(max-device-width: 1224px)\">\n                    {' '}\n                    <br />\n                    {tokenPrice\n                        ? displayAmount(tokenPrice?.toFixed(2), 2)\n                        : '-'}{' '}\n                    USD\n                </MediaQuery>{' '}\n            </TableCell>\n            <MediaQuery query=\"(min-device-width: 1224px)\">\n                <TableCell>\n                    {tokenPrice\n                        ? `${displayAmount(tokenPrice?.toFixed(2), 0)} USD`\n                        : '-'}{' '}\n                    {tooltip}\n                </TableCell>\n            </MediaQuery>\n        </TableRow>\n    );\n};\n\nexport default TokenPrice;\n","import Chip from '@material-ui/core/Chip';\n\nimport EtherScanLink from '../../common/EtherScanLink';\nimport { formatBPS, displayAmount } from '../../../utils/commonUtils';\nimport CardContent from './CardContent';\nimport { Strategy } from '../../../types';\nimport TokenPrice from '../../common/TokenPrice';\n\ntype StrategyDetailProps = {\n    strategy: Strategy;\n};\nexport const StrategyDetail = (props: StrategyDetailProps) => {\n    const { strategy } = props;\n\n    const apiVersion = strategy ? strategy.apiVersion : '';\n    const activationDate = strategy ? strategy.params.activation : '';\n    const lastReportText = strategy ? strategy.params.lastReportText : '';\n    const emergencyExit =\n        strategy && strategy.emergencyExit === false ? (\n            <Chip\n                label=\"ok\"\n                clickable\n                style={{\n                    color: '#fff',\n                    backgroundColor: 'rgba(1,201,147,1)',\n                }}\n            />\n        ) : (\n            <Chip\n                label=\"Emergency\"\n                clickable\n                style={{\n                    color: '#fff',\n                    backgroundColor: '#ff6c6c',\n                }}\n            />\n        );\n    const isActive =\n        strategy && strategy.isActive === true ? (\n            <Chip\n                label=\"true\"\n                clickable\n                style={{\n                    color: '#fff',\n                    backgroundColor: 'rgba(1,201,147,1)',\n                }}\n            />\n        ) : (\n            <Chip\n                label=\"false\"\n                clickable\n                style={{\n                    color: '#fff',\n                    backgroundColor: '#ff6c6c',\n                }}\n            />\n        );\n\n    const estimatedAsset =\n        strategy && strategy.estimatedTotalAssets\n            ? displayAmount(\n                  strategy.estimatedTotalAssets.toString(),\n                  strategy.token.decimals\n              )\n            : '';\n    const creditAvailable = strategy\n        ? displayAmount(\n              strategy.creditAvailable.toString(),\n              strategy.token.decimals\n          )\n        : '';\n    const debtOutstanding = strategy\n        ? displayAmount(\n              strategy.debtOutstanding.toString(),\n              strategy.token.decimals\n          )\n        : '';\n    const debtRatio = strategy\n        ? formatBPS(strategy.params.debtRatio.toString())\n        : '';\n    const totalDebt = strategy\n        ? displayAmount(\n              strategy.params.totalDebt.toString(),\n              strategy.token.decimals\n          )\n        : '';\n    const totalGain = strategy\n        ? displayAmount(\n              strategy.params.totalGain.toString(),\n              strategy.token.decimals\n          )\n        : '';\n    const totalLoss = strategy\n        ? displayAmount(\n              strategy.params.totalLoss.toString(),\n              strategy.token.decimals\n          )\n        : '';\n    const expectReturn = strategy\n        ? displayAmount(\n              strategy.expectedReturn.toString(),\n              strategy.token.decimals\n          )\n        : '';\n    const performanceFee = strategy\n        ? formatBPS(strategy.params.performanceFee.toString())\n        : '';\n    const rateLimit =\n        strategy && strategy.params.rateLimit\n            ? displayAmount(\n                  strategy.params.rateLimit.toString(),\n                  strategy.token.decimals\n              )\n            : 'N/A';\n    const minDebtPerHarvest =\n        strategy && strategy.params.minDebtPerHarvest\n            ? displayAmount(\n                  strategy.params.minDebtPerHarvest.toString(),\n                  strategy.token.decimals\n              )\n            : 'N/A';\n    const maxDebtPerHarvest =\n        strategy && strategy.params.maxDebtPerHarvest\n            ? displayAmount(\n                  strategy.params.maxDebtPerHarvest.toString(),\n                  strategy.token.decimals\n              )\n            : 'N/A';\n    const keeper = strategy ? <EtherScanLink address={strategy.keeper} /> : '';\n    const rewards = strategy ? (\n        <EtherScanLink address={strategy.rewards} />\n    ) : (\n        ''\n    );\n    const strategist = strategy ? (\n        <EtherScanLink address={strategy.strategist} />\n    ) : (\n        ''\n    );\n    const vaults = strategy ? (\n        <EtherScanLink\n            internalHref={`/vault/${strategy.vault.toLowerCase()}`}\n            address={strategy.vault}\n        />\n    ) : (\n        ''\n    );\n    const tokenPrice = (\n        <TokenPrice\n            label=\"Total Estimated Assets (USD):\"\n            token={strategy.token}\n            amount={strategy.estimatedTotalAssets}\n        />\n    );\n    const data = [\n        { key: 'API Version:', value: apiVersion },\n        { key: ' Activation Date', value: activationDate },\n        { key: ' Time Since Last Harvest:', value: lastReportText },\n        { key: ' Emergency exit:', value: emergencyExit },\n        { key: ' Active:', value: isActive },\n        { key: ' Total Estimated Assets:', value: estimatedAsset },\n        {\n            key: ' Total Estimated Assets (USD):',\n            value: tokenPrice,\n            render: true,\n        },\n        { key: ' Credit Available:', value: creditAvailable },\n        { key: ' Debt Outstanding:', value: debtOutstanding },\n        { key: ' Debt Ratio:', value: debtRatio },\n        { key: ' Total Debt:', value: totalDebt },\n        { key: ' Total Gain:', value: totalGain },\n        { key: ' Total Loss:', value: totalLoss },\n        { key: ' Expected Return:', value: expectReturn },\n        { key: ' Performance Fee:', value: performanceFee },\n        { key: ' Rate Limit:', value: rateLimit },\n        { key: ' Min Debt Per Harvest:', value: minDebtPerHarvest },\n        { key: ' Max Debt Per Harvest:', value: maxDebtPerHarvest },\n        { key: ' Keeper:', value: keeper },\n        { key: ' Rewards:', value: rewards },\n        { key: ' Strategist:', value: strategist },\n        { key: ' Vault:', value: vaults },\n    ];\n    return <CardContent data={data} key={strategy.address} />;\n};\n\nexport default StrategyDetail;\n","import {\n    Multicall,\n    ContractCallResults,\n    ContractCallContext,\n} from 'ethereum-multicall';\nimport { utils } from 'ethers';\nimport { omit, memoize } from 'lodash';\n\nimport { getEthersDefaultProvider } from './ethers';\nimport {\n    Strategy,\n    StrategyAddressQueueIndex,\n    VaultApi,\n    StrategyParams,\n} from '../types';\nimport { getABI } from './abi';\nimport { mapStrategyParams } from './strategyParams';\nimport { mapContractCalls } from './commonUtils';\n\nimport StratABI from './ABI/Strategy.json';\nimport TokenABI from './ABI/Token.json';\n\ninterface VaultVersionInfo {\n    apiVersion: string;\n    want: string;\n}\n\nconst STRAT_VIEW_METHODS = [\n    'apiVersion',\n    'emergencyExit',\n    'isActive',\n    'keeper',\n    'rewards',\n    'strategist',\n    'name',\n    'vault',\n    'estimatedTotalAssets',\n    'delegatedAssets',\n    'want',\n];\n\nconst STRAT_PARAM_METHODS: string[] = [\n    'debtOutstanding',\n    'creditAvailable',\n    'expectedReturn',\n    'strategies',\n];\n\nconst TOKEN_VIEW_METHODS: string[] = ['decimals', 'symbol', 'name'];\nconst filterList = ['0x2923a58c1831205c854dbea001809b194fdb3fa5'];\nconst buildViewMethodsCall = (strategies: string[]): ContractCallContext[] => {\n    return strategies.map((stratAddres) => {\n        // TODO: this is a hack since a strategy is failing on this specific call\n        // remove after on chain fix\n        const filterCalls = STRAT_VIEW_METHODS.filter((viewMethod) => {\n            return !(\n                filterList.includes(stratAddres.toLowerCase()) &&\n                viewMethod === 'estimatedTotalAssets'\n            );\n        });\n        const calls = filterCalls.map((method) => ({\n            reference: method,\n            methodName: method,\n            methodParameters: [] as string[],\n        }));\n        return {\n            reference: stratAddres,\n            contractAddress: stratAddres,\n            abi: StratABI.abi,\n            calls,\n        };\n    });\n};\n\nconst buildParamMethodsCall = (\n    strategies: string[],\n    strategyMap: Map<string, string>,\n    vaultMap: Map<string, VaultVersionInfo>\n): ContractCallContext[] => {\n    return strategies.map((stratAddres) => {\n        const vaultAddress = strategyMap.get(stratAddres) as string;\n        const vaultInfo = vaultMap.get(vaultAddress) as VaultVersionInfo;\n        const abiParams = getABI(vaultInfo.apiVersion);\n        const calls = STRAT_PARAM_METHODS.map((method) => ({\n            reference: method === 'strategies' ? 'strategyParams' : method,\n            methodName: method,\n            methodParameters: [stratAddres],\n        }));\n        return {\n            reference: `${stratAddres}_${vaultAddress}`,\n            contractAddress: vaultAddress,\n            abi: abiParams,\n            calls,\n        };\n    });\n};\n\nconst buildTokenCallMethods = (\n    strategies: string[],\n    strategyMap: Map<string, string>,\n    vaultMap: Map<string, VaultVersionInfo>\n): ContractCallContext[] => {\n    return strategies.map((stratAddres) => {\n        const vaultAddress = strategyMap.get(stratAddres) as string;\n        const vaultInfo = vaultMap.get(vaultAddress) as VaultVersionInfo;\n\n        const calls = TOKEN_VIEW_METHODS.map((method) => ({\n            reference: method,\n            methodName: method,\n            methodParameters: [] as string[],\n        }));\n        return {\n            reference: `${vaultInfo.want}`,\n            contractAddress: vaultInfo.want,\n            abi: TokenABI.abi,\n            calls,\n        };\n    });\n};\n\nexport const buildStrategyCalls = (\n    strategies: string[],\n    vaultMap: Map<string, VaultApi>,\n    strategyMap: Map<string, string>\n): ContractCallContext[] => {\n    const stratViewMethods = buildViewMethodsCall(strategies);\n\n    const stratParamMethods = buildParamMethodsCall(\n        strategies,\n        strategyMap,\n        vaultMap\n    );\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return stratViewMethods.concat(stratParamMethods);\n};\n\nexport const mapStrategiesCalls = (\n    strategies: string[],\n    contractCallsResults: ContractCallResults,\n    strategiesQueueIndexes: Array<StrategyAddressQueueIndex>,\n    strategyMap: Map<string, string>\n): Strategy[] => {\n    return strategies.map((address) => {\n        const stratData = contractCallsResults.results[address];\n        const vaultStratData =\n            contractCallsResults.results[\n                `${address}_${strategyMap.get(address)}`\n            ];\n        const mappedStrat: any = mapContractCalls(stratData);\n        const mappedVaultStratInfo: any = omit(\n            mapContractCalls(vaultStratData),\n            'strategies'\n        );\n        const mappedStratParams: StrategyParams = mapStrategyParams(\n            vaultStratData,\n            mappedStrat.apiVersion\n        );\n        const tokenData = contractCallsResults.results[mappedStrat.want];\n        if (tokenData) {\n            const token = mapContractCalls(tokenData);\n            mappedStrat.token = {\n                ...token,\n                address: mappedStrat.want,\n            };\n        }\n        const strategyWithdrawalQueueIndex = strategiesQueueIndexes.find(\n            (queueIndex) =>\n                queueIndex.address.toLowerCase() === address.toLowerCase()\n        );\n        const withdrawalQueueIndex =\n            strategyWithdrawalQueueIndex === undefined\n                ? -1\n                : strategyWithdrawalQueueIndex.queueIndex;\n        return {\n            ...mappedVaultStratInfo,\n            ...mappedStrat,\n            address,\n            params: mappedStratParams,\n            withdrawalQueueIndex,\n        };\n    });\n};\n\nconst innerGetStrategies = async (addresses: string[]): Promise<Strategy[]> => {\n    if (addresses.length === 0) {\n        throw new Error('Error: expect a valid strategy address');\n    }\n\n    addresses.forEach((address) => {\n        if (!address || !utils.isAddress(address)) {\n            throw new Error('Error: expect a valid strategy address');\n        }\n    });\n\n    const provider = getEthersDefaultProvider();\n\n    const multicall = new Multicall({ ethersProvider: provider });\n\n    // do call to strategy apiVersion and vault\n    const stratCalls: ContractCallContext[] = buildViewMethodsCall(addresses);\n\n    const resultsViewMethods: ContractCallResults = await multicall.call(\n        stratCalls\n    );\n    const vaultMap = new Map<string, VaultVersionInfo>();\n    const strategyMap = new Map<string, string>();\n\n    addresses.forEach((address) => {\n        const stratData = resultsViewMethods.results[address];\n        const mappedStrat: any = mapContractCalls(stratData);\n        strategyMap.set(address, mappedStrat.vault);\n        vaultMap.set(mappedStrat.vault, {\n            apiVersion: mappedStrat.apiVersion,\n            want: mappedStrat.want,\n        });\n    });\n\n    const stratParamCalls = buildParamMethodsCall(\n        addresses,\n        strategyMap,\n        vaultMap\n    );\n    const tokenMethodCalls = buildTokenCallMethods(\n        addresses,\n        strategyMap,\n        vaultMap\n    );\n\n    const stratParamResults: ContractCallResults = await multicall.call(\n        stratParamCalls.concat(tokenMethodCalls)\n    );\n\n    const mergedResults: ContractCallResults = {\n        results: {\n            ...resultsViewMethods.results,\n            ...stratParamResults.results,\n        },\n        blockNumber: stratParamResults.blockNumber,\n    };\n\n    const mappedStrategies = mapStrategiesCalls(\n        addresses,\n        mergedResults,\n        [],\n        strategyMap\n    );\n\n    return mappedStrategies;\n};\n\nexport const getStrategies = memoize(innerGetStrategies);\n","import axios from 'axios';\nimport { memoize } from 'lodash';\n\nexport const { get, all, post, put, spread } = axios;\n\nconst API_URL = 'https://vaults.finance';\nconst SUBGRAPH_URL =\n    'https://api.thegraph.com/subgraphs/name/salazarguille/yearn-vaults-v2-subgraph-mainnet';\n\nconst getData = async (url: string) => {\n    const payload: any = [];\n    try {\n        const response = await axios.get(`${API_URL}${url}`);\n\n        return response;\n    } catch (error) {\n        console.log('error');\n    }\n    return payload.data;\n};\n\nexport const BuildGet = memoize(getData);\n\ntype SubgraphAPIResponse = {\n    data: {\n        data?: any;\n        errors?: any[];\n    };\n    status: number;\n    statusText: string;\n    config: any;\n    request: any;\n    headers: any;\n};\n\ntype SubgraphResponse = {\n    data: any;\n};\n\n/*\nconfig: {url: \"https://api.thegraph.com/subgraphs/name/salazarguille/yearn-vaults-v2-subgraph-mainnet\", method: \"post\", data: \"{\"query\":\"\\n{\\n\\tvaults {\\n    id\\n    tags\\n    t…it\\n        debtAdded\\n      }\\n    }\\n  }\\n}\\n\"}\", headers: {…}, transformRequest: Array(1), …}\ndata: {data: {…}}\nheaders: {content-type: \"application/json\"}\nrequest: XMLHttpRequest {readyState: 4, timeout: 0, withCredentials: false, upload: XMLHttpRequestUpload, onreadystatechange: ƒ, …}\nstatus: 200\nstatusText: \"\"\n*/\nconst querySubgraph = async (query: string): Promise<SubgraphResponse> => {\n    try {\n        const response: SubgraphAPIResponse = await axios.post(\n            `${SUBGRAPH_URL}`,\n            {\n                query,\n            }\n        );\n        if (response.data.errors && response.data.errors.length > 0) {\n            throw Error(\n                response.data.errors[0].message ||\n                    'Error: retrieving data from subgraph'\n            );\n        }\n        return {\n            data: response.data.data,\n        };\n    } catch (error) {\n        console.error('subgraph error', error);\n        throw error;\n    }\n};\n\nexport const querySubgraphData = memoize(querySubgraph);\n","import { get, omit, memoize } from 'lodash';\nimport { querySubgraphData } from './apisRequest';\n\nconst buildReportsQuery = (strategy: string): string => `\n{\n    strategies(where: {\n      id: \"${strategy}\"\n    }) {\n        id\n        reports(first: 10, orderBy: timestamp, orderDirection: desc)  {\n          id\n          transaction {\n            hash\n          }\n          timestamp\n          gain\n          loss\n          totalGain\n          totalLoss\n          totalDebt\n          debtLimit\n          debtAdded\n          debtPaid\n          results {\n            startTimestamp\n            endTimestamp\n            duration\n            apr\n            durationPr\n            currentReport {\n                id\n                gain\n                loss\n                totalDebt\n                totalGain\n                totalLoss\n                timestamp\n                transaction { hash blockNumber }\n            }\n            previousReport {\n                id\n                gain\n                loss\n                totalDebt\n                totalGain\n                totalLoss\n                timestamp\n                transaction { hash blockNumber }\n            }\n          }\n        }\n      }\n  }\n`;\n\ntype StratReportGraphType = {\n    debtAdded: string;\n    debtLimit: string;\n    debtPaid: string;\n    gain: string;\n    loss: string;\n    timestamp: string;\n    totalDebt: string;\n    totalGain: string;\n    totalLoss: string;\n    results: Array<{\n        apr: string;\n        duration: string;\n        durationPr: string;\n        startTimestamp: string;\n        endTimestamp: string;\n        currentReport: {\n            id: string;\n            gain: string;\n            loss: string;\n            totalDebt: string;\n            totalGain: string;\n            totalLoss: string;\n            timestamp: number;\n            transaction: {\n                hash: string;\n            };\n        };\n        previousReport: {\n            id: string;\n            gain: string;\n            loss: string;\n            totalDebt: string;\n            totalGain: string;\n            totalLoss: string;\n            timestamp: number;\n            transaction: {\n                hash: string;\n            };\n        };\n    }>;\n    transaction: {\n        hash: string;\n    };\n};\n\ntype StratReportGraphResult = {\n    data: [\n        {\n            id: string;\n            reports: StratReportGraphType[];\n        }\n    ];\n};\n\nexport type StrategyReport = {\n    debtAdded: string;\n    debtLimit: string;\n    debtPaid: string;\n    profit: string;\n    loss: string;\n    timestamp: string;\n    totalDebt: string;\n    totalProfit: string;\n    totalLoss: string;\n    transactionHash: string;\n    results?: {\n        startTimestamp: number;\n        endTimestamp: number;\n        duration: number;\n        apr: number;\n        durationPr: number;\n        currentReport: {\n            id: string;\n            gain: string;\n            loss: string;\n            totalDebt: string;\n            totalGain: string;\n            totalLoss: string;\n            timestamp: number;\n            transaction: {\n                hash: string;\n            };\n        };\n        previousReport: {\n            id: string;\n            gain: string;\n            loss: string;\n            totalDebt: string;\n            totalGain: string;\n            totalLoss: string;\n            timestamp: number;\n            transaction: {\n                hash: string;\n            };\n        };\n    };\n};\n\nconst _getReportsForStrategy = async (\n    strategy: string\n): Promise<StrategyReport[]> => {\n    if (!strategy || strategy === '') {\n        throw new Error(\n            'Error: getReportsForStrategy expected valid strategy address'\n        );\n    }\n    const reportResults: StratReportGraphResult = await querySubgraphData(\n        buildReportsQuery(strategy.toLowerCase())\n    );\n\n    const reports: StratReportGraphType[] = get(\n        reportResults,\n        'data.strategies[0].reports',\n        []\n    );\n\n    const OMIT_FIELDS = ['results', 'transaction', 'id'];\n    const values = reports.map((report) => {\n        let results;\n        if (report.results.length > 0) {\n            const result = report.results[0];\n            results = {\n                ...result,\n                currentReport: {\n                    ...result.currentReport,\n                    timestamp: result.currentReport.timestamp,\n                },\n                previousReport: {\n                    ...result.previousReport,\n                    timestamp: result.previousReport.timestamp,\n                },\n                startTimestamp: parseInt(result.startTimestamp),\n                endTimestamp: parseInt(result.endTimestamp),\n                duration: parseInt(result.duration),\n                durationPr: parseFloat(result.durationPr),\n                apr: parseFloat(result.apr) * 100,\n            };\n        }\n        return {\n            ...(omit(report, OMIT_FIELDS) as StratReportGraphType),\n            profit: report.gain,\n            loss: report.loss,\n            totalProfit: report.totalGain,\n            transactionHash: report.transaction.hash,\n            results,\n        };\n    });\n    return values;\n};\n\nexport const getReportsForStrategy = memoize(_getReportsForStrategy);\n","import { makeStyles } from '@material-ui/core/styles';\nimport Grid, { GridSize } from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport { HelpOutlined } from '@material-ui/icons';\nimport { HtmlTooltip } from '../HtmlTooltip';\nimport { Fragment, ReactNode } from 'react';\n\nconst useStyles = makeStyles({\n    subText: {\n        marginBottom: 10,\n    },\n    grid: {\n        marginBottom: 10,\n        borderBottom: '1px solid #e8e8e8',\n    },\n});\n\ntype ItemDescriptionProps = {\n    label: string;\n    value: number | string;\n    xs?: boolean | GridSize | undefined;\n    md: boolean | GridSize | undefined;\n    visible?: boolean;\n    helpTitle?: string;\n    helpDescription?: ReactNode;\n};\n\nconst ItemDescription = (props: ItemDescriptionProps) => {\n    const { xs = 12, visible = true } = props;\n    const classes = useStyles();\n    if (!visible) {\n        return <></>;\n    }\n\n    const helpTooltip =\n        props.helpTitle && props.helpDescription ? (\n            <HtmlTooltip\n                title={\n                    <Fragment>\n                        <Typography color=\"inherit\">\n                            {props.helpTitle}\n                        </Typography>\n                        {props.helpDescription}\n                    </Fragment>\n                }\n            >\n                <HelpOutlined fontSize=\"small\" />\n            </HtmlTooltip>\n        ) : (\n            ''\n        );\n\n    return (\n        <Grid item xs={xs} md={props.md} className={classes.grid}>\n            <Typography className={classes.subText}>\n                {' '}\n                {props.label}: {helpTooltip}\n                <br /> {props.value}\n            </Typography>\n        </Grid>\n    );\n};\n\nexport default ItemDescription;\n","import { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport { mean, compact } from 'lodash';\nimport { Fragment } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { displayAmount, msToHours } from '../../../utils/commonUtils';\nimport EtherScanLink from '../../common/EtherScanLink';\nimport { unixMsToIsoString } from '../../../utils/dateUtils';\nimport { StrategyReport } from '../../../utils/reports';\nimport { median } from '../../../utils/math';\nimport ItemDescription from '../../common/ItemDescription';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n        accordion: {\n            padding: 10,\n            margin: 15,\n        },\n        text: {\n            margin: 15,\n            textAlign: 'center',\n            color: 'black',\n            fontSize: 21,\n        },\n        grid: {\n            marginBottom: 10,\n\n            borderBottom: '1px solid #e8e8e8',\n        },\n        subText: {\n            marginBottom: 10,\n        },\n    })\n);\ntype AccordionReportProps = {\n    data: StrategyReport[];\n    tokenDecimals: number;\n};\nconst AccordionReport = (props: AccordionReportProps) => {\n    const { data, tokenDecimals } = props;\n    const classes = useStyles();\n\n    const aprList = compact(data.map((item) => item.results?.apr));\n    const averageApr = aprList.length === 0 ? 0 : mean(aprList);\n    const medianApr = aprList.length === 0 ? 0 : median(aprList);\n    const averageAprLabel = `Average APR: ${averageApr.toFixed(2)}%`;\n    const medianAprLabel = `Median APR: ${medianApr.toFixed(2)}%`;\n    const topLabel =\n        data.length === 0\n            ? 'No Reports Loaded'\n            : `Last ${data.length} reports.`;\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.text}>\n                {topLabel} {averageAprLabel} / {medianAprLabel}\n            </Typography>\n            {data.map((res: StrategyReport, index: number) => {\n                return (\n                    <Accordion key={index} className={classes.accordion}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Grid container spacing={1}>\n                                <Grid item xs={12} md={9}>\n                                    <Typography className={classes.heading}>\n                                        <EtherScanLink\n                                            transactionHash={\n                                                res.transactionHash\n                                            }\n                                        />\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12} md={3}>\n                                    <Typography className={classes.subText}>\n                                        {' '}\n                                        Timestamp:\n                                        <br />\n                                        {unixMsToIsoString(res.timestamp)}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Grid container spacing={1}>\n                                <Grid container spacing={1}>\n                                    <ItemDescription\n                                        label=\"Debt Added\"\n                                        value={displayAmount(\n                                            res.debtAdded,\n                                            tokenDecimals\n                                        )}\n                                        md={3}\n                                    />\n                                    <ItemDescription\n                                        label=\"Debt Limit\"\n                                        value={displayAmount(\n                                            res.debtLimit,\n                                            tokenDecimals\n                                        )}\n                                        md={3}\n                                    />\n                                    <ItemDescription\n                                        label=\"Debt Paid\"\n                                        value={displayAmount(\n                                            res.debtPaid,\n                                            tokenDecimals\n                                        )}\n                                        md={3}\n                                    />\n                                    <ItemDescription\n                                        label=\"Total Debt\"\n                                        value={displayAmount(\n                                            res.totalDebt,\n                                            tokenDecimals\n                                        )}\n                                        md={3}\n                                    />\n                                </Grid>\n                                <Grid container spacing={1}>\n                                    <ItemDescription\n                                        label=\"Profit\"\n                                        value={displayAmount(\n                                            res.profit,\n                                            tokenDecimals\n                                        )}\n                                        md={3}\n                                    />\n                                    <ItemDescription\n                                        label=\"Total Profit\"\n                                        value={displayAmount(\n                                            res.totalProfit,\n                                            tokenDecimals\n                                        )}\n                                        md={3}\n                                    />\n                                    <ItemDescription\n                                        label=\"Loss\"\n                                        value={displayAmount(\n                                            res.loss,\n                                            tokenDecimals\n                                        )}\n                                        md={3}\n                                    />\n                                    <ItemDescription\n                                        label=\"Total Loss\"\n                                        value={displayAmount(\n                                            res.totalLoss,\n                                            tokenDecimals\n                                        )}\n                                        md={3}\n                                    />\n                                </Grid>\n                                <Grid container spacing={1}>\n                                    <ItemDescription\n                                        label=\"Duration (hours)\"\n                                        value={msToHours(\n                                            res.results\n                                                ? res.results.duration\n                                                : 0\n                                        ).toFixed(2)}\n                                        visible={res.results !== undefined}\n                                        md={3}\n                                        helpTitle=\"What is it?\"\n                                        helpDescription={\n                                            <Fragment>\n                                                The duration is the time elapsed\n                                                between this report and the\n                                                previous.\n                                            </Fragment>\n                                        }\n                                    />\n                                    <ItemDescription\n                                        label=\"Duration PR\"\n                                        value={`${res.results?.durationPr.toFixed(\n                                            6\n                                        )} %`}\n                                        visible={res.results !== undefined}\n                                        md={3}\n                                        helpTitle=\"What is the duration PR?\"\n                                        helpDescription={\n                                            <Fragment>\n                                                It is the percentage rate for\n                                                the given duration period:\n                                                <pre>\n                                                    {\n                                                        'profit = current.totalGain - previous.totalGain'\n                                                    }\n                                                </pre>\n                                                <pre>\n                                                    {\n                                                        'durationPR = profit / current.totalDebt'\n                                                    }\n                                                </pre>\n                                            </Fragment>\n                                        }\n                                    />\n                                    <ItemDescription\n                                        label=\"APR\"\n                                        value={`${res.results?.apr.toFixed(\n                                            2\n                                        )} %`}\n                                        visible={res.results !== undefined}\n                                        md={3}\n                                        helpTitle=\"How is APR calculated?\"\n                                        helpDescription={\n                                            <Fragment>\n                                                It compares the current and\n                                                previous reports applying this\n                                                formula:\n                                                <pre>\n                                                    {\n                                                        'profit = current.totalGain - previous.totalGain'\n                                                    }\n                                                </pre>\n                                                <pre>\n                                                    {\n                                                        'timeBetweenReports (days) = (current.timestamp - previous.timestamp ) * millisecondsPerDay'\n                                                    }\n                                                </pre>\n                                                <pre>\n                                                    {\n                                                        'yearOverDuration = daysPerYear (365) / timeBetweenReports'\n                                                    }\n                                                </pre>\n                                                <pre>\n                                                    {\n                                                        'profitOverTotalDebt = profit / current.totalDebt'\n                                                    }\n                                                </pre>\n                                                <pre>\n                                                    {\n                                                        'APR = profitOverTotalDebt * yearOverDuration'\n                                                    }\n                                                </pre>\n                                            </Fragment>\n                                        }\n                                    />\n                                </Grid>\n                            </Grid>\n                        </AccordionDetails>\n                    </Accordion>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default AccordionReport;\n","// Calculate Median\nexport const median = (array: Array<number>): number => {\n    // Check If Data Exists\n    if (array.length >= 1) {\n        // Sort Array\n        array = array.sort((a: number, b: number) => {\n            return a - b;\n        });\n\n        // Array Length: Even\n        if (array.length % 2 === 0) {\n            // Average Of Two Middle Numbers\n            return (array[array.length / 2 - 1] + array[array.length / 2]) / 2;\n        }\n        // Array Length: Odd\n        else {\n            // Middle Number\n            return array[(array.length - 1) / 2];\n        }\n    } else {\n        throw new Error('expected a filled array');\n    }\n};\n","import AccordionReport from './AccordionReport';\nimport { StrategyReport } from '../../../utils/reports';\ntype StrategyReportsProps = {\n    reports: StrategyReport[];\n    tokenDecimals: number;\n};\n\nexport const StrategyReports = (props: StrategyReportsProps) => {\n    const { reports, tokenDecimals } = props;\n\n    return <AccordionReport data={reports} tokenDecimals={tokenDecimals} />;\n};\n\nexport default StrategyReports;\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport StrategyDetail from './StrategyDetail';\nimport MuiCard from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Strategy } from '../../../types';\nimport { useParams } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Typography } from '@material-ui/core';\nimport BreadCrumbs from './BreadCrumbs';\nimport EtherScanLink from '../../common/EtherScanLink';\nimport ReactHelmet from '../../common/ReactHelmet';\n\nimport { getStrategies } from '../../../utils/strategies';\nimport { getReportsForStrategy, StrategyReport } from '../../../utils/reports';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport StrategyReports from './StrategyReports';\ninterface ParamTypes {\n    strategyId: string;\n    vaultId: string;\n}\n\nexport const SingleStrategy = () => {\n    const { strategyId, vaultId } = useParams<ParamTypes>();\n\n    const [strategyData, setStrategyData] = useState<Strategy[]>([]);\n    const [isLoaded, setIsLoaded] = useState(true);\n\n    const [strategyReports, setStrategyReports] = useState<StrategyReport[]>(\n        []\n    );\n    const [isReportsLoading, setIsReportsLoading] = useState(true);\n\n    useEffect(() => {\n        getStrategies([strategyId]).then((loadedStrategy) => {\n            setStrategyData(loadedStrategy);\n            setIsLoaded(false);\n        });\n\n        getReportsForStrategy(strategyId).then((reports) => {\n            setStrategyReports(reports);\n            setIsReportsLoading(false);\n        });\n    }, [strategyId]);\n\n    const strategy = strategyData && strategyData[0];\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            root: {\n                [theme.breakpoints.down('sm')]: {\n                    maxWidth: '100%',\n                },\n                [theme.breakpoints.up('md')]: {\n                    maxWidth: '80%',\n                },\n                [theme.breakpoints.up('lg')]: {\n                    maxWidth: '80%',\n                },\n\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                border:\n                    strategy && strategy.emergencyExit\n                        ? '2px solid #ff6c6c'\n                        : '#fff',\n            },\n            demo1: {\n                borderBottom: '1px solid #e8e8e8',\n            },\n        })\n    );\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event: React.ChangeEvent<any>, newValue: number) => {\n        setValue(newValue);\n    };\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <ReactHelmet title={strategy ? strategy.name : ''} />\n            <BreadCrumbs vaultId={vaultId} strategyId={strategyId} />\n\n            {isLoaded || isReportsLoading ? (\n                <div\n                    style={{\n                        textAlign: 'center',\n                        marginTop: '100px',\n                    }}\n                >\n                    <CircularProgress style={{ color: '#fff' }} />{' '}\n                    <Typography style={{ color: '#fff' }}>\n                        Loading strategy..\n                    </Typography>\n                </div>\n            ) : (\n                <MuiCard className={classes.root}>\n                    <CardHeader\n                        title={strategy ? strategy.name : ''}\n                        subheader={\n                            strategy ? (\n                                <EtherScanLink address={strategy.address} />\n                            ) : (\n                                ''\n                            )\n                        }\n                    />\n                    <Tabs\n                        className={classes.demo1}\n                        value={value}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={handleChange}\n                    >\n                        <Tab label=\"Detail\" />\n                        <Tab label=\"Reports\" />\n                    </Tabs>\n\n                    {value === 0 ? (\n                        <StrategyDetail strategy={strategy} />\n                    ) : (\n                        <StrategyReports\n                            reports={strategyReports}\n                            tokenDecimals={\n                                strategy ? strategy.token.decimals : 18\n                            }\n                        />\n                    )}\n                </MuiCard>\n            )}\n        </React.Fragment>\n    );\n};\n","import clsx from 'clsx';\nimport {\n    createStyles,\n    lighten,\n    makeStyles,\n    Theme,\n} from '@material-ui/core/styles';\nimport { Toolbar, Typography } from '@material-ui/core';\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1),\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                      color: theme.palette.secondary.main,\n                      backgroundColor: lighten(\n                          theme.palette.secondary.light,\n                          0.85\n                      ),\n                  }\n                : {\n                      color: theme.palette.text.primary,\n                      backgroundColor: theme.palette.secondary.dark,\n                  },\n        title: {\n            flex: '1 1 100%',\n        },\n    })\n);\n\ninterface EnhancedTableToolbarProps {\n    title: string;\n}\n\nexport const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n    const classes = useToolbarStyles();\n    return (\n        <Toolbar className={clsx(classes.root)}>\n            <Typography\n                className={classes.title}\n                variant=\"h6\"\n                id=\"tableTitle\"\n                component=\"div\"\n                align=\"center\"\n            >\n                {props.title}\n            </Typography>\n        </Toolbar>\n    );\n};\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    })\n);\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Home, SingleVault, NavBar, SingleStrategy } from './components/app';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router>\n                <NavBar />\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route\n                        exact\n                        path=\"/strategist/:strategist\"\n                        component={Home}\n                    />\n\n                    <Route\n                        exact\n                        path=\"/vault/:vaultId\"\n                        component={SingleVault}\n                    />\n                    <Route\n                        exact\n                        path=\"/vault/:vaultId/strategy/:strategyId\"\n                        component={SingleStrategy}\n                    />\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Web3ContextProvider } from './providers/Web3ContextProvider';\nimport { ContractsProvider } from './providers/ContractsProvider';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Web3ContextProvider>\n            <ContractsProvider>\n                <App />\n            </ContractsProvider>\n        </Web3ContextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}